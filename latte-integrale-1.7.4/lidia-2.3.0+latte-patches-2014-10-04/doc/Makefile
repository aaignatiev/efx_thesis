# Makefile.in generated by automake 1.13.4 from Makefile.am.
# doc/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994-2013 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.




am__is_gnu_make = test -n '$(MAKEFILE_LIST)' && test -n '$(MAKELEVEL)'
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/lidia
pkgincludedir = $(includedir)/lidia
pkglibdir = $(libdir)/lidia
pkglibexecdir = $(libexecdir)/lidia
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = i386-apple-darwin22.3.0
host_triplet = i386-apple-darwin22.3.0
subdir = doc
DIST_COMMON = $(srcdir)/Makefile.in $(srcdir)/Makefile.am
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/acinclude.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/include/config.h \
	$(top_builddir)/include/LiDIA/LiDIA.h \
	$(top_builddir)/include/LiDIA/path.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
AM_V_P = $(am__v_P_$(V))
am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_$(V))
am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_$(V))
am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))
am__v_at_0 = @
am__v_at_1 = 
SOURCES =
DIST_SOURCES =
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
DATA = $(noinst_DATA)
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = aclocal-1.13
AMTAR = $${TAR-tar}
AM_DEFAULT_VERBOSITY = 1
AR = ar
AUTOCONF = autoconf
AUTOHEADER = :
AUTOMAKE = automake-1.13
AWK = awk
BIBTEX = bibtex
BUNZIP2 = bunzip2
CC = gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -g -O2
CPP = g++ -E
CPPFLAGS =   -I/Users/nikita/Desktop/Diploma_Project/latte-integrale-1.7.4/dest/include
CXX = g++
CXXCPP = g++ -E
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -O3
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DLLTOOL = false
DSYMUTIL = dsymutil
DUMPBIN = 
DVIPS = dvips
ECHO_C = \c
ECHO_N = 
ECHO_T = 
EGREP = /usr/bin/grep -E
EXEEXT = 
FGREP = /usr/bin/grep -F
GREP = /usr/bin/grep
GUNZIP = gunzip
INSTALL = /usr/local/bin/ginstall -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
LATEX = latex
LATEX2HTML = ${SHELL} /Users/nikita/Desktop/Diploma_Project/latte-integrale-1.7.4/lidia-2.3.0+latte-patches-2014-10-04/missing latex2html
LD = /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/ld
LDFLAGS = 
LIBOBJS = 
LIBS =  -L/Users/nikita/Desktop/Diploma_Project/latte-integrale-1.7.4/dest/lib -lgmp
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LIDIA_BASE_XLIBOBJS = 
LIDIA_BASE_XLTLIBOBJS = 
LIDIA_LTCLIBS = ${LIDIA_LA_LTCLIB} ${LIDIA_FF_LTCLIB} ${LIDIA_BASE_LTCLIB}
LIDIA_LT_XLIBOBJS =  lattice_modules_instant.o
LIDIA_LT_XLTLIBOBJS =  lattice_modules_instant.lo
LIPO = lipo
LN_S = ln -s
LTLIBOBJS = 
MAKEINDEX = makeindex
MAKEINFO = makeinfo
MANIFEST_TOOL = :
MKDIR_P = /usr/local/bin/gmkdir -p
NM = /usr/bin/nm -B
NMEDIT = nmedit
OBJDUMP = objdump
OBJEXT = o
OTOOL = otool
OTOOL64 = :
PACKAGE = lidia
PACKAGE_BUGREPORT = lidia@cdc.informatik.tu-darmstadt.de
PACKAGE_NAME = LiDIA
PACKAGE_STRING = LiDIA 2.3.0+latte-patches-2014-10-04
PACKAGE_TARNAME = lidia
PACKAGE_URL = 
PACKAGE_VERSION = 2.3.0+latte-patches-2014-10-04
PATH_SEPARATOR = :
PDFLATEX = pdflatex
PKG_DIRS = base finite_fields linear_algebra
RANLIB = ranlib
SED = /usr/bin/sed
SET_MAKE = 
SHELL = /bin/sh
STRIP = strip
TEXI2DVI = ${SHELL} /Users/nikita/Desktop/Diploma_Project/latte-integrale-1.7.4/lidia-2.3.0+latte-patches-2014-10-04/missing texi2dvi
VERSION = 2.3.0+latte-patches-2014-10-04
abs_builddir = /Users/nikita/Desktop/Diploma_Project/latte-integrale-1.7.4/lidia-2.3.0+latte-patches-2014-10-04/doc
abs_srcdir = /Users/nikita/Desktop/Diploma_Project/latte-integrale-1.7.4/lidia-2.3.0+latte-patches-2014-10-04/doc
abs_top_builddir = /Users/nikita/Desktop/Diploma_Project/latte-integrale-1.7.4/lidia-2.3.0+latte-patches-2014-10-04
abs_top_srcdir = /Users/nikita/Desktop/Diploma_Project/latte-integrale-1.7.4/lidia-2.3.0+latte-patches-2014-10-04
ac_ct_AR = ar
ac_ct_CC = gcc
ac_ct_CXX = 
ac_ct_DUMPBIN = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = tar --format=ustar -chf - "$$tardir"
am__untar = tar -xf -
bindir = ${exec_prefix}/bin
build = i386-apple-darwin22.3.0
build_alias = 
build_cpu = i386
build_os = darwin22.3.0
build_vendor = apple
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host = i386-apple-darwin22.3.0
host_alias = 
host_cpu = i386
host_os = darwin22.3.0
host_vendor = apple
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /Users/nikita/Desktop/Diploma_Project/latte-integrale-1.7.4/lidia-2.3.0+latte-patches-2014-10-04/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = $(MKDIR_P)
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /Users/nikita/Desktop/Diploma_Project/latte-integrale-1.7.4/dest
program_transform_name = s,x,x,
psdir = ${docdir}
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = ${prefix}/etc
target_alias = 
top_build_prefix = ../
top_builddir = ..
top_srcdir = ..
AUTOMAKE_OPTIONS = 1.5 nostdinc
MOSTLYCLEANFILES = \
	*.aux *.toc *.lof *.lot *.bbl \
	*.log *.[bdi]lg *.idx *.ind *.gl[os]

CLEANFILES = \
	LiDIA.dvi	LiDIA.ps	LiDIA.pdf	LiDIA.dsc \
	LiDIA.dvi.gz	LiDIA.ps.gz	LiDIA.pdf.gz	LiDIA.dsc.gz \
	LiDIA.dvi.bz2	LiDIA.ps.bz2	LiDIA.pdf.bz2	LiDIA.dsc.bz2

noinst_DATA = LiDIA.dvi
LiDIA_dvi_TEXSRCS = \
	LiDIA.tex \
		graphics.cfg \
		color.cfg \
		LiDIA.def \
		copyright.tex \
		overview.tex \
			lidia_model.tex \
		use.tex \
		LiDIA_base.tex \
			bigint.tex \
			udigit_mod.tex \
			bigmod.tex \
			multi_bigmod.tex \
			bigrational.tex \
			xdouble.tex \
			bigfloat.tex \
			xbigfloat.tex \
			bigcomplex.tex \
			base_vector.tex \
			math_vector.tex \
			sort_vector.tex \
			file_vector.tex \
			lidia_vector.tex \
			hash_table.tex \
			indexed_hash_table.tex \
			base_matrix.tex \
			math_matrix.tex \
			matrix_GL2Z.tex \
			polynomial.tex \
			big_polynomial.tex \
			fact.tex \
			single_factor.tex \
			factorization.tex \
			sf_bigint.tex \
			modular_functions.tex \
			nmbrthry_functions.tex \
			crt.tex \
			prime_list.tex \
			prime_proof.tex \
			power_functions.tex \
			timer.tex \
			handlers.tex \
			basic_error.tex \
			generic_error.tex \
			cast_error.tex \
			precondition_error.tex \
			index_out_of_bounds_error.tex \
			gmm.tex \
			random_generator.tex \
			lidia_signal.tex \
		LiDIA_FF.tex \
			gf2n.tex \
			galois_field.tex \
			galois_field_iterator.tex \
			gf_element.tex \
			gf_polynomial.tex \
			Fp_polynomial.tex \
			Fp_poly_modulus.tex \
			gf_poly_modulus.tex \
			Fp_rational_function.tex \
			power_series.tex \
			sf_Fp_polynomial.tex \
			sf_gf_polynomial.tex \
			fft_prime.tex \
		LiDIA_LA.tex \
			bigint_matrix.tex \
			bigmod_matrix.tex \
		LiDIA_LT.tex \
			bigint_lattice.tex \
			bigfloat_lattice.tex \
		LiDIA_NF.tex \
			quadratic_form.tex \
			quadratic_order.tex \
			qi_class.tex \
			qi_class_real.tex \
			quadratic_ideal.tex \
			quadratic_number_standard.tex \
			quadratic_number_power_product_basis.tex \
			quadratic_number_power_product.tex \
			field.tex \
			order.tex \
			alg_number.tex \
			module.tex \
			prime_ideal.tex \
			sf_alg_ideal.tex \
		LiDIA_EC.tex \
			elliptic_curve_flags.tex \
			elliptic_curve.tex \
			point.tex \
			elliptic_curve_bigint.tex \
			point_bigint.tex \
			curve_isomorphism.tex \
			quartic.tex \
			kodaira_code.tex \
		LiDIA_ECO.tex \
			eco_prime.tex \
			meq_prime.tex \
			trace_mod.tex \
			trace_list.tex \
		LiDIA_GEC.tex \
			gec.tex \
			gec_complex_multiplication.tex

EXTRA_DIST = \
	${LiDIA_dvi_TEXSRCS} \
	LiDIA.bib \
	LiDIA.ist


# Unused CVS stuff
extra_stuff = \
	FIG/lidia_model.fig \
	.latex2html-init \
	doc2html.awk \
	filt.c \
	make_lidia_index \
	make_lidia_index.cmd \
	man_pages.tex \
	unused/bi_bf_lattice_basis.tex \
	unused/bi_bf_lattice_gensys.tex \
	unused/bigfloat_int.tex \
	unused/double_int.tex \
	unused/lattice_basis.tex \
	unused/lattice_gensys.tex \
	unused/use_vecmat.tex


# Environment settings, Programs, and Flags
TEX_ENV = TEXINPUTS="${srcdir}${PATH_SEPARATOR}$$TEXINPUTS"
BIBTEX_ENV = BIBINPUTS="${srcdir}"
MAKEINDEX_ENV = INDEXSTYLE="${srcdir}"
DVIPS_ENV = TEXINPUTS="${srcdir}"
MAKEINDEX_OPTIONS = -s LiDIA.ist
DVIPS_OPTIONS = -ta4

# GNU texi2dvi supports LaTeX/bibtex/makeindex loops and adds the source
# dir to the search paths (except for BibTeX), thus is very practical here.
#
# don't capitalize LaTeX to work around Debian bug 472758
LATEX2DVI = $(TEXI2DVI) -l latex
LATEX2PDF = ${LATEX2DVI} -p
LATEX2DVI_ENV = \
	TEX="$(LATEX)" PDFTEX="$(PDFLATEX)" $(TEX_ENV) \
	BIBTEX="$(BIBTEX)" $(BIBTEX_ENV) \
	MAKEINDEX="$(MAKEINDEX) $(MAKEINDEX_OPTIONS)" $(MAKEINDEX_ENV)

LATEX2PDF_ENV = ${LATEX2DVI_ENV}

# What to put into the environment's GZIP/BZIP2 vars when using gzip/bzip2
GZIP_ENV = -9
BZIP_ENV = 
BZIP2_ENV = -9

# For compatibility, $< is used in implicit rules only,
# and GNU Make's implicit pattern rules (%) are used only for
# targets that usually do not need to be (re)made.
# Whenever possible, specifications of implicit rules use the
# less flexible but more portable suffix form.
SUFFIXES = .tex .dvi .pdf .ps .dsc
all: all-am

.SUFFIXES:
.SUFFIXES: .tex .dvi .pdf .ps .dsc
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu doc/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --gnu doc/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs
tags TAGS:

ctags CTAGS:

cscope cscopelist:


distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
	$(MAKE) $(AM_MAKEFLAGS) \
	  top_distdir="$(top_distdir)" distdir="$(distdir)" \
	  dist-hook
check-am: all-am
check: check-am
all-am: Makefile $(DATA)
installdirs:
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:
	-test -z "$(MOSTLYCLEANFILES)" || rm -f $(MOSTLYCLEANFILES)

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-generic clean-libtool mostlyclean-am

distclean: distclean-am
	-rm -f Makefile
distclean-am: clean-am distclean-generic

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am:

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-generic mostlyclean-libtool

pdf-am:

ps-am:

uninstall-am:

.MAKE: install-am install-strip

.PHONY: all all-am check check-am clean clean-generic clean-libtool \
	cscopelist-am ctags-am dist-hook distclean distclean-generic \
	distclean-libtool distdir dvi dvi-am html html-am info info-am \
	install install-am install-data install-data-am install-dvi \
	install-dvi-am install-exec install-exec-am install-html \
	install-html-am install-info install-info-am install-man \
	install-pdf install-pdf-am install-ps install-ps-am \
	install-strip installcheck installcheck-am installdirs \
	maintainer-clean maintainer-clean-generic mostlyclean \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	tags-am uninstall uninstall-am


# Convenience targets

.PHONY: dvi pdf dsc ps psgz psbz2

dvi: LiDIA.dvi
pdf: LiDIA.pdf
dsc: LiDIA.dsc
ps: LiDIA.ps
psgz: LiDIA.ps.gz
psbz2: LiDIA.ps.bz2

.tex.dvi:
	${LATEX2DVI_ENV} ${LATEX2DVI} $<

.tex.pdf:
	${LATEX2PDF_ENV} ${LATEX2PDF} $<

.dvi.ps:
	${DVIPS_ENV} ${DVIPS} ${DVIPS_OPTIONS} -o $@ $<

.pdf.dsc:
	pdf2dsc $< $@

LiDIA.dvi LiDIA.pdf: ${LiDIA_dvi_TEXSRCS}

# Pattern rules for producing compressed targets.
# The given rules preserve the uncompressed file, thus unnecessary
# "make" invocations do not rebuild anything.
%.gz: %
	GZIP='$(GZIP_ENV)' gzip -c $< >$@

%.bz2: %
	BZIP='$(BZIP_ENV)' BZIP2='$(BZIP2_ENV)' bzip2 -c $< >$@

# The explicit compression rules for `LiDIA.ps', for non-GNU Makes
LiDIA.ps.gz: LiDIA.ps
	GZIP='$(GZIP_ENV)' gzip -c LiDIA.ps >$@

LiDIA.ps.bz2: LiDIA.ps
	BZIP='$(BZIP_ENV)' BZIP2='$(BZIP2_ENV)' bzip2 -c LiDIA.ps >$@

# This directory is not specific to a certain sub-package, therefore all its
# stuff goes into the base (or full) distribution and is removed from other
# distributions.
dist-hook:
	case ' $(PKG_DIRS) ' in \
	  *' base '*) ;; \
	  *) rm -rf $(distdir) ;; \
	esac

# Delete half-made targets when their commands fail
.DELETE_ON_ERROR:

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
