	To update this ChangeLog, use `make update-changelog' and then
	copy (and edit) entries from ChangeLog.svn2cl


2015-04-21 Brandon Dutra <bedutra@ucdavis.edu>

	* updated the exception class and use
	  Version number 1.7.3

2014-01-15 Matthias Koeppe <mkoeppe@math.ucdavis.edu>

	* compile fix with current NTL

2014-01-10  Matthias Koeppe <mkoeppe@math.ucdavis.edu>

	* Fix compiler warnings with XCode 5.0.2, Apple LLVM version 5.0 (clang-500.2.79).
	  configure.ac: Bump version number


2013-12-23 Brandon Dutra <bedutra@ucdavis.edu>

	configure.ac: Bump version number to 1.7
	Added the top-ehrhart-knapsack code
	Updated the manual

2013-09-07  Matthias Koeppe  <mkoeppe@math.ucdavis.edu>

	Version 1.6

2013-09-05 21:07  Matthias Koeppe <mkoeppe@math.ucdavis.edu>

	* .svn2cl-authors, Makefile.am: New maintainer target
	  update-changelog.

2013-09-05 21:01  Matthias Koeppe <mkoeppe@math.ucdavis.edu>

	* doc/Makefile.am, doc/amsabbrvurl.bst, doc/bibliography.bib,
	  doc/deloera-hemmecke-koeppe-book.tex,
	  doc/deloera-hemmecke-koeppe-cover.jpg, doc/manual.pdf,
	  doc/manual.tex: Update manual, add book ad

2013-08-30 17:15  Matthias Koeppe <mkoeppe@math.ucdavis.edu>

	* code/latte/interpolation/PolynomialInterpolation.cpp: From Jerry
	  James:
	  
	  I just happened to spot a compiler warning as it went by:
	  
	  interpolation/PolynomialInterpolation.cpp: In member function
	  'void PolynomialInterpolation::GE()':
	  interpolation/PolynomialInterpolation.cpp:116:59: warning: left
	  operand of comma operator has no effect [-Wunused-value]
	  while( currentRow < rowSize && matrix[currentRow, currentColumn]
	  == 0)
	  
	  It looks like that line should read:
	  
	  while( currentRow < rowSize && matrix[currentRow][currentColumn]
	  == 0)

2013-08-28 21:58  Matthias Koeppe <mkoeppe@math.ucdavis.edu>

	* configure.ac: Bump version number.

2013-08-28 21:57  Matthias Koeppe <mkoeppe@math.ucdavis.edu>

	* code/latte/Makefile.am: Distclean some fallout from `make check',
	  so that `make distcheck'
	  works without error.

2013-08-28 21:57  Matthias Koeppe <mkoeppe@math.ucdavis.edu>

	* code/test-suite/Makefile.am: New installcheck-local.

2013-08-28 21:57  Matthias Koeppe <mkoeppe@math.ucdavis.edu>

	* code/test-suite/test-default.sh, code/test-suite/test.pl.in: Make
	  test script more robust: By default, don't copy the binary.

2013-08-21 02:08  Matthias Koeppe <mkoeppe@math.ucdavis.edu>

	* configure.ac: Bump version number

2013-08-21 01:05  Matthias Koeppe <mkoeppe@math.ucdavis.edu>

	* code/latte/Makefile.am: Fix --enable-shared --enable-relocatable
	  build on Mac OS X.

2013-08-21 00:16  Matthias Koeppe <mkoeppe@math.ucdavis.edu>

	* code/gnulib/strerror-override.c, code/gnulib/strerror-override.h,
	  install-reloc: Make sure that strerror-override.c compiles, no
	  matter what.
	  Patch from Dima Pasechnik.
	  
	  This fixes build on Solaris (and would also on Cygwin -- but we
	  have
	  already worked around that in a different way).

2013-08-21 00:01  Matthias Koeppe <mkoeppe@math.ucdavis.edu>

	* code/test-suite/test.pl.in: Don't use `uname' to limit CPU time
	  -- to improve portability to
	  Cygwin and to make `make check' deterministic.

2013-08-20 23:59  Matthias Koeppe <mkoeppe@math.ucdavis.edu>

	* code/latte/dual.cpp, code/latte/genFunction/maple.cpp: Header
	  file fixes for Cygwin.

2013-08-20 03:34  Matthias Koeppe <mkoeppe@math.ucdavis.edu>

	* configure.ac:

2013-08-19 23:29  Matthias Koeppe <mkoeppe@math.ucdavis.edu>

	* code/latte/normalize/Makefile.am: Fix last change.

2013-08-19 23:28  Matthias Koeppe <mkoeppe@math.ucdavis.edu>

	* NEWS: *** empty log message ***

2013-08-19 23:22  Matthias Koeppe <mkoeppe@math.ucdavis.edu>

	* code/latte/normalize/normalize.cpp: Fix char* warning

2013-08-19 22:53  Matthias Koeppe <mkoeppe@math.ucdavis.edu>

	* code/latte/latte_system.h: Add some namespace prefixes

2013-08-19 22:53  Matthias Koeppe <mkoeppe@math.ucdavis.edu>

	* code/latte/normalize/Makefile.am: Fix include paths

2013-08-19 22:52  Matthias Koeppe <mkoeppe@math.ucdavis.edu>

	* code/latte/Residue.cpp, code/latte/count.cpp,
	  code/latte/dual.cpp, code/latte/ehrhart.cpp,
	  code/latte/genFunction/maple.cpp, code/latte/maximize.cpp,
	  code/latte/minimize.cpp, code/latte/valuation/valuation.cpp,
	  code/latte/vertices/cdd.cpp: Change pathname buffer lengths from
	  127 to PATH_MAX,
	  command line buffer lengths from 127 to 10000.

2013-08-19 22:32  Matthias Koeppe <mkoeppe@math.ucdavis.edu>

	* code/latte/normalize/normaliz_wrapper.cpp: Use shell_quote to fix
	  some whitespace-in-filenames problems

2013-08-19 21:27  Matthias Koeppe <mkoeppe@math.ucdavis.edu>

	* code/latte/convertCDD_ine_to_latte.cpp: get rid of DOS
	  lineendings

2013-08-19 21:23  Matthias Koeppe <mkoeppe@math.ucdavis.edu>

	* code/latte/count.cpp, code/latte/ehrhart.cpp,
	  code/latte/maximize.cpp, code/latte/minimize.cpp: Get rid of old
	  clean up "rm -f" commands that tried to delete
	  FILENAME.SOME_EXTENSION. These files are no longer created
	  (unless I
	  am mistaken).

2013-08-19 21:14  Matthias Koeppe <mkoeppe@math.ucdavis.edu>

	* code/latte/barvinok/Triangulation.cpp: Quote the tar archive
	  filename in "trisave" mode to protect against
	  whitespace in filename. This code remains broken in many other
	  ways,
	  however. For example, Cone_Index is not updated in most modes of
	  operation.

2013-08-19 20:57  Matthias Koeppe <mkoeppe@math.ucdavis.edu>

	* code/latte/binarySearchIP.cpp: Repair "latte-maximize bbs" by
	  invoking `count' from the installation
	  directory, rather than the current directory.

2013-08-19 20:55  Matthias Koeppe <mkoeppe@math.ucdavis.edu>

	* code/latte/latte_relocatable.cpp, code/latte/latte_relocatable.h:
	  (relocated_pathname): Provide a string->string variant.

2013-08-19 01:32  Matthias Koeppe <mkoeppe@math.ucdavis.edu>

	* code/latte/count.cpp, code/latte/ehrhart.cpp,
	  code/latte/latte_system.cpp, code/latte/latte_system.h,
	  code/latte/maximize.cpp, code/latte/minimize.cpp,
	  code/latte/valuation/valuation.cpp: (rename_with_error_check):
	  New function, invokes rename(2) system
	  call.
	  
	  Use it instead of calling the mv(1) shell command. This fixes
	  some
	  problems with whitespace in filenames.

2013-08-16 04:09  Matthias Koeppe <mkoeppe@math.ucdavis.edu>

	* code/latte/CheckEmpty.cpp, code/latte/IntegralHull.cpp,
	  code/latte/ReadingFile.cpp, code/latte/ResSingle.cpp,
	  code/latte/RudyResNTL.cpp, code/latte/barvinok/Triangulation.cpp,
	  code/latte/binarySearchIP.cpp,
	  code/latte/buildPolytopes/BuildPolytope.cpp,
	  code/latte/count.cpp, code/latte/dual.cpp,
	  code/latte/latte_system.cpp, code/latte/latte_system.h,
	  code/latte/top-ehrhart/TopEhrhart.cpp,
	  code/latte/vertices/cdd.cpp: New function shell_quote. Use it to
	  quote, when necessary (for
	  example, for directory names with spaces), program names.

2013-08-15 23:33  Matthias Koeppe <mkoeppe@math.ucdavis.edu>

	* code/latte/buildPolytopes/BuildPolytope.cpp: Add error checking
	  for shell commands invoked with system.

2013-08-15 23:29  Matthias Koeppe <mkoeppe@math.ucdavis.edu>

	* code/latte/buildPolytopes/BuildPolytope.cpp: fix dos lineendings

2013-08-15 02:58  Matthias Koeppe <mkoeppe@math.ucdavis.edu>

	* AUTHORS, README: Update

2013-08-15 02:58  Matthias Koeppe <mkoeppe@math.ucdavis.edu>

	* configure.ac: Bump version number

2013-08-15 02:57  Matthias Koeppe <mkoeppe@math.ucdavis.edu>

	* manual_v1.6.pdf: Remove duplicate manual

2013-08-15 02:10  Matthias Koeppe <mkoeppe@math.ucdavis.edu>

	* m4/gnulib/relocatable.m4: Don't build relocation wrappers on
	  Cygwin -- not necessary.

2013-08-14 21:24  Matthias Koeppe <mkoeppe@math.ucdavis.edu>

	* install-reloc: add comment

2013-08-13 17:02  Matthias Koeppe <mkoeppe@math.ucdavis.edu>

	* configure.ac, doc, doc/Makefile.am: Add manual tex sources to
	  distribution

2013-08-13 17:02  Matthias Koeppe <mkoeppe@math.ucdavis.edu>

	* Makefile.am: Add manual tex sources to distribution

2013-08-08 17:00  Matthias Koeppe <mkoeppe@math.ucdavis.edu>

	* code/latte/triangulation/RegularTriangulationWithCddlib.cpp: Use
	  less alerting language

2013-08-08 06:54  Matthias Koeppe <mkoeppe@math.ucdavis.edu>

	* code/latte/integration/testIntegration.sh.in,
	  code/latte/integration/testMultiply.sh.in: Adjust to new default
	  for maple binary

2013-08-08 06:17  Matthias Koeppe <mkoeppe@math.ucdavis.edu>

	* configure.ac: *** empty log message ***

2013-08-08 06:12  Matthias Koeppe <mkoeppe@math.ucdavis.edu>

	* code/latte/valuation/valuation.cpp: Use the same default for
	  triangulation (4ti2 if available; otherwise cdd) as count does.

2013-08-08 06:11  Matthias Koeppe <mkoeppe@math.ucdavis.edu>

	* code/latte/valuation/PolytopeValuation.cpp: Fix typos in comments
	  and messages

2013-08-08 06:11  Matthias Koeppe <mkoeppe@math.ucdavis.edu>

	* code/latte/top-ehrhart/TopEhrhart.cpp: Support non-simple
	  polytopes by triangulating in the dual space.

2013-08-08 06:10  Matthias Koeppe <mkoeppe@math.ucdavis.edu>

	* configure.ac: If Maple not found, default to "maple"

2013-08-08 06:10  Matthias Koeppe <mkoeppe@math.ucdavis.edu>

	* AUTHORS, README, doc/bibliography.bib, doc/manual.pdf,
	  doc/manual.tex: Documentation update

2013-08-07 01:38  Matthias Koeppe <mkoeppe@math.ucdavis.edu>

	* code/latte/preprocess.cpp: remove debugging output

2013-08-06 22:07  Matthias Koeppe <mkoeppe@math.ucdavis.edu>

	* code/latte/triangulation/RegularTriangulationWith4ti2.cpp: Use
	  less alerting language

2013-08-06 21:57  Matthias Koeppe <mkoeppe@math.ucdavis.edu>

	* code/latte/triangulation/triangulate.cpp: Remove debugging output

2013-08-03 00:49  Matthias Koeppe <mkoeppe@math.ucdavis.edu>

	* NEWS, configure.ac:

2013-08-02 21:07  Matthias Koeppe <mkoeppe@math.ucdavis.edu>

	* code/latte/Grobner.cpp, code/latte/IntegralHull.cpp,
	  code/latte/ReadingFile.cpp, code/latte/RudyResNTL.cpp,
	  code/latte/barvinok/Triangulation.cpp,
	  code/latte/barvinok/Triangulation.h,
	  code/latte/barvinok/barvinok.h, code/latte/barvinok/dec.cpp,
	  code/latte/barvinok/dec.h,
	  code/latte/buildPolytopes/BuildGraphPolytope.cpp,
	  code/latte/buildPolytopes/BuildPolytope.cpp,
	  code/latte/buildPolytopes/BuildRandomPolynomials.cpp,
	  code/latte/buildPolytopes/GraphMaker.cpp,
	  code/latte/genFunction/maple.cpp,
	  code/latte/integration/PolyRep.cpp,
	  code/latte/integration/PolyTrie.cpp,
	  code/latte/integration/newIntegration.cpp,
	  code/latte/normalize/normalize.cpp, code/latte/rational.cpp,
	  code/latte/triangulation/RegularTriangulationWithCdd.cpp,
	  code/latte/valuation/valuation.cpp, code/latte/vertices/cdd.cpp:
	  Fix compiler warnings.
	  Patch from Jerry James <loganjerry@gmail.com>

2013-08-02 20:31  Matthias Koeppe <mkoeppe@math.ucdavis.edu>

	* .:

2013-08-02 20:29  Matthias Koeppe <mkoeppe@math.ucdavis.edu>

	* doc, m4:

2013-08-02 20:12  Matthias Koeppe <mkoeppe@math.ucdavis.edu>

	* doc/manual.pdf:

2013-08-02 20:12  Matthias Koeppe <mkoeppe@math.ucdavis.edu>

	* autogen.sh, code/latte/Makefile.am,
	  code/latte/normalize/Makefile.am, code/test-suite/Makefile.am,
	  configure.ac: build fixes

2013-08-02 06:18  Matthias Koeppe <mkoeppe@math.ucdavis.edu>

	* install-reloc: Link some more gnulib files to the reloc-wrapper.
	  Fixes build problem on MacOS.

2013-08-02 04:43  Matthias Koeppe <mkoeppe@math.ucdavis.edu>

	* doc/manual.tex: minor edits

2013-07-31 19:32  Matthias Koeppe <mkoeppe@math.ucdavis.edu>

	* code/latte/countDriver.cpp: Disable debug code

2013-07-31 19:24  Matthias Koeppe <mkoeppe@math.ucdavis.edu>

	* distro: Move distro directory next to trunk in svn repository.

2013-07-31 19:21  Matthias Koeppe <mkoeppe@math.ucdavis.edu>

	* config.libpath: Update gnulib from git

2013-07-31 19:20  Matthias Koeppe <mkoeppe@math.ucdavis.edu>

	* code/gnulib/Makefile.am, code/gnulib/alloca.in.h,
	  code/gnulib/allocator.h, code/gnulib/areadlink.c,
	  code/gnulib/areadlink.h, code/gnulib/c-ctype.c,
	  code/gnulib/c-ctype.h, code/gnulib/canonicalize-lgpl.c,
	  code/gnulib/careadlinkat.c, code/gnulib/careadlinkat.h,
	  code/gnulib/dosname.h, code/gnulib/errno.in.h,
	  code/gnulib/error.c, code/gnulib/error.h, code/gnulib/exitfail.c,
	  code/gnulib/exitfail.h, code/gnulib/gettext.h,
	  code/gnulib/intprops.h, code/gnulib/lstat.c,
	  code/gnulib/malloca.c, code/gnulib/malloca.h,
	  code/gnulib/msvc-inval.c, code/gnulib/msvc-inval.h,
	  code/gnulib/msvc-nothrow.c, code/gnulib/msvc-nothrow.h,
	  code/gnulib/pathmax.h, code/gnulib/progname.c,
	  code/gnulib/progname.h, code/gnulib/progreloc.c,
	  code/gnulib/readlink.c, code/gnulib/relocatable.c,
	  code/gnulib/relocatable.h, code/gnulib/relocwrapper.c,
	  code/gnulib/setenv.c, code/gnulib/stat.c,
	  code/gnulib/stdbool.in.h, code/gnulib/stddef.in.h,
	  code/gnulib/stdint.in.h, code/gnulib/stdlib.in.h,
	  code/gnulib/strerror-override.c, code/gnulib/strerror-override.h,
	  code/gnulib/strerror.c, code/gnulib/string.in.h,
	  code/gnulib/sys_stat.in.h, code/gnulib/sys_types.in.h,
	  code/gnulib/time.in.h, code/gnulib/unistd.c,
	  code/gnulib/unistd.in.h, code/gnulib/verify.h,
	  code/gnulib/xalloc-die.c, code/gnulib/xalloc-oversized.h,
	  code/gnulib/xalloc.h, code/gnulib/xmalloc.c,
	  code/gnulib/xreadlink.c, code/gnulib/xreadlink.h,
	  m4/gnulib/00gnulib.m4, m4/gnulib/alloca.m4,
	  m4/gnulib/canonicalize.m4, m4/gnulib/double-slash-root.m4,
	  m4/gnulib/eealloc.m4, m4/gnulib/environ.m4, m4/gnulib/errno_h.m4,
	  m4/gnulib/error.m4, m4/gnulib/extensions.m4,
	  m4/gnulib/extern-inline.m4, m4/gnulib/gnulib-cache.m4,
	  m4/gnulib/gnulib-common.m4, m4/gnulib/gnulib-comp.m4,
	  m4/gnulib/gnulib-tool.m4, m4/gnulib/include_next.m4,
	  m4/gnulib/largefile.m4, m4/gnulib/lib-ld.m4,
	  m4/gnulib/longlong.m4, m4/gnulib/lstat.m4, m4/gnulib/malloca.m4,
	  m4/gnulib/msvc-inval.m4, m4/gnulib/msvc-nothrow.m4,
	  m4/gnulib/multiarch.m4, m4/gnulib/nocrash.m4, m4/gnulib/off_t.m4,
	  m4/gnulib/onceonly.m4, m4/gnulib/pathmax.m4,
	  m4/gnulib/readlink.m4, m4/gnulib/relocatable-lib.m4,
	  m4/gnulib/relocatable.m4, m4/gnulib/setenv.m4,
	  m4/gnulib/ssize_t.m4, m4/gnulib/stat.m4, m4/gnulib/stdbool.m4,
	  m4/gnulib/stddef_h.m4, m4/gnulib/stdint.m4,
	  m4/gnulib/stdlib_h.m4, m4/gnulib/strerror.m4,
	  m4/gnulib/string_h.m4, m4/gnulib/sys_socket_h.m4,
	  m4/gnulib/sys_stat_h.m4, m4/gnulib/sys_types_h.m4,
	  m4/gnulib/time_h.m4, m4/gnulib/unistd_h.m4,
	  m4/gnulib/warn-on-use.m4, m4/gnulib/wchar_t.m4,
	  m4/gnulib/xalloc.m4, reloc-ldflags, snippet, snippet/_Noreturn.h,
	  snippet/arg-nonnull.h, snippet/c++defs.h, snippet/warn-on-use.h:
	  Update gnulib from git

2013-06-07 21:42  Brandon Dutra <bedutra@ucdavis.edu>

	* code/latte/top-knapsack, code/latte/top-knapsack/Driver.cpp,
	  code/latte/top-knapsack/PeriodicFunction.cpp,
	  code/latte/top-knapsack/PeriodicFunction.h,
	  code/latte/top-knapsack/TopKnapsack.cpp,
	  code/latte/top-knapsack/TopKnapsack.h,
	  code/latte/top-knapsack/class.cpp: saving work: top-knapsack
	  files.

2012-03-23 16:47  Brandon Dutra <bedutra@ucdavis.edu>

	* code/latte/top-ehrhart/TopEhrhart.cpp: fixed the top-ehrhart
	  "save to -1 file" issue

2012-03-23 15:56  Brandon Dutra <bedutra@ucdavis.edu>

	* code/latte/Makefile.am, code/latte/sqlite/IntegrationDB.cpp,
	  code/latte/sqlite/IntegrationDB.h,
	  code/latte/sqlite/SqliteDB.cpp, code/latte/sqlite/SqliteDB.h,
	  code/latte/sqlite/ValuationDBStatistics.h,
	  code/latte/sqlite/VolumeDB.cpp, code/latte/sqlite/VolumeDB.h,
	  code/latte/valuation/countLinearFormsFromPolynomialDriver.cpp,
	  code/latte/valuation/test/printDatabaseTimeTablesDriver.cpp,
	  code/latte/valuation/test/runIntegrationTestFromDatabaseDriver.cpp,
	  code/latte/valuation/test/runVolumeTestFromDatabaseDriver.cpp,
	  code/latte/valuation/valuation.cpp: updated the integrationDB
	  files to remove the number of queries and to compute the standard
	  deviation (sqlite3 cannot compute the SD).

2012-01-23 04:56  Matthias Koeppe <mkoeppe@math.ucdavis.edu>

	* code/latte/normalize/Makefile.am: *** empty log message ***

2012-01-23 04:55  Matthias Koeppe <mkoeppe@math.ucdavis.edu>

	* code/latte/normalize/Makefile.am: *** empty log message ***

2012-01-23 04:15  Matthias Koeppe <mkoeppe@math.ucdavis.edu>

	* arg-nonnull.h, c++defs.h, code/gnulib/Makefile.am,
	  code/gnulib/alloca.in.h, code/gnulib/allocator.c,
	  code/gnulib/allocator.h, code/gnulib/areadlink.c,
	  code/gnulib/areadlink.h, code/gnulib/c-ctype.c,
	  code/gnulib/c-ctype.h, code/gnulib/canonicalize-lgpl.c,
	  code/gnulib/careadlinkat.c, code/gnulib/careadlinkat.h,
	  code/gnulib/dosname.h, code/gnulib/errno.in.h,
	  code/gnulib/error.c, code/gnulib/error.h, code/gnulib/exitfail.c,
	  code/gnulib/exitfail.h, code/gnulib/gettext.h,
	  code/gnulib/intprops.h, code/gnulib/lstat.c,
	  code/gnulib/malloca.c, code/gnulib/malloca.h,
	  code/gnulib/pathmax.h, code/gnulib/progname.c,
	  code/gnulib/progname.h, code/gnulib/progreloc.c,
	  code/gnulib/readlink.c, code/gnulib/relocatable.c,
	  code/gnulib/relocatable.h, code/gnulib/relocwrapper.c,
	  code/gnulib/setenv.c, code/gnulib/stat.c,
	  code/gnulib/stdbool.in.h, code/gnulib/stddef.in.h,
	  code/gnulib/stdlib.in.h, code/gnulib/strerror.c,
	  code/gnulib/string.in.h, code/gnulib/sys_stat.in.h,
	  code/gnulib/time.in.h, code/gnulib/unistd.in.h,
	  code/gnulib/verify.h, code/gnulib/xalloc-die.c,
	  code/gnulib/xalloc-oversized.h, code/gnulib/xalloc.h,
	  code/gnulib/xmalloc.c, code/gnulib/xreadlink.c,
	  code/gnulib/xreadlink.h, config.libpath, doc/relocatable.texi,
	  install-reloc, m4/gnulib/00gnulib.m4, m4/gnulib/alloca.m4,
	  m4/gnulib/canonicalize.m4, m4/gnulib/double-slash-root.m4,
	  m4/gnulib/eealloc.m4, m4/gnulib/environ.m4, m4/gnulib/errno_h.m4,
	  m4/gnulib/error.m4, m4/gnulib/extensions.m4,
	  m4/gnulib/gnulib-cache.m4, m4/gnulib/gnulib-common.m4,
	  m4/gnulib/gnulib-comp.m4, m4/gnulib/gnulib-tool.m4,
	  m4/gnulib/include_next.m4, m4/gnulib/inline.m4,
	  m4/gnulib/lib-ld.m4, m4/gnulib/longlong.m4, m4/gnulib/lstat.m4,
	  m4/gnulib/malloca.m4, m4/gnulib/nocrash.m4,
	  m4/gnulib/onceonly.m4, m4/gnulib/pathmax.m4,
	  m4/gnulib/readlink.m4, m4/gnulib/relocatable-lib.m4,
	  m4/gnulib/relocatable.m4, m4/gnulib/setenv.m4,
	  m4/gnulib/ssize_t.m4, m4/gnulib/stat.m4, m4/gnulib/stdbool.m4,
	  m4/gnulib/stddef_h.m4, m4/gnulib/stdlib_h.m4,
	  m4/gnulib/strerror.m4, m4/gnulib/string_h.m4,
	  m4/gnulib/sys_stat_h.m4, m4/gnulib/time_h.m4,
	  m4/gnulib/unistd_h.m4, m4/gnulib/warn-on-use.m4,
	  m4/gnulib/wchar_t.m4, m4/gnulib/xalloc.m4, reloc-ldflags,
	  warn-on-use.h: Update gnulib

2012-01-20 09:58  Brandon Dutra <bedutra@ucdavis.edu>

	* code/latte/top-ehrhart/Conebyconeapproximations_08_11_2010.mpl:
	  spelling issue.

2012-01-20 09:06  Brandon Dutra <bedutra@ucdavis.edu>

	* code/latte/top-ehrhart/Conebyconeapproximations_08_11_2010.mpl: I
	  moved the maple functions I want to delete later at the end of
	  the file.

2012-01-20 08:49  Brandon Dutra <bedutra@ucdavis.edu>

	* code/latte/top-ehrhart/TopEhrhart.cpp: TopEhrhart.cpp: added
	  assertions

2012-01-20 08:48  Brandon Dutra <bedutra@ucdavis.edu>

	* manual_v1.6.pdf: added the new manual

2012-01-20 08:44  Brandon Dutra <bedutra@ucdavis.edu>

	* doc/manual.pdf, doc/manual.tex: removed a conflict in the manual.

2012-01-20 05:58  Brandon Dutra <bedutra@ucdavis.edu>

	* code/latte/top-ehrhart/Conebyconeapproximations_08_11_2010.mpl,
	  code/latte/top-ehrhart/TopEhrhart.cpp,
	  code/latte/valuation/valuation.cpp: valuation.*, TopEhrhart.*:
	  using a "memory save" function when asked to compute a fixed
	  number of coefficients and
	  we use another function when computing the entire ehrhart
	  polynomial.
	  
	  conebyconeap....mpl: removed the old latte interface functions.
	  Added comments. Should I remove the older "ehrhart polynomial"
	  functions also?

2012-01-19 17:39  Brandon Dutra <bedutra@ucdavis.edu>

	* code/latte/top-ehrhart/compute-top-ehrhart-stdsimplex.mpl: sorry,
	  I don't know why this file is in svn. Removing it.

2012-01-19 07:52  Brandon Dutra <bedutra@ucdavis.edu>

	* code/latte/LattException.h,
	  code/latte/top-ehrhart/Conebyconeapproximations_08_11_2010.mpl,
	  code/latte/top-ehrhart/TopEhrhart.cpp,
	  code/latte/top-ehrhart/TopEhrhart.h,
	  code/latte/top-ehrhart/top-ehrhart.cpp,
	  code/latte/valuation/valuation.cpp,
	  code/latte/valuation/valuation.h: banner: changed the name of the
	  software...again.
	  
	  valuation.*: added command line options for interactive mode and
	  the unweighted case for the top ehrhart mode.
	  
	  latteException.h: new comments.
	  
	  Conebycone....mpl: added a new function that computes the
	  coefficients one at a time.
	  We now compute the top k coefficients and not the top k+1.
	  We are using tools/gensym for one of the variables.
	  We can print the polynomial to a file
	  todo:
	  --comments
	  --remove my old function and the "just simplex" functions. Remove
	  the old latte interface functions
	  --run a few tests to check correctness. Maybe do this via a
	  script?
	  
	  
	  general todo list:
	  --update the manual.

2012-01-17 07:05  Brandon Dutra <bedutra@ucdavis.edu>

	* code/latte/top-ehrhart/Conebyconeapproximations_08_11_2010.mpl:
	  conebycone...mpl: we are now computing the coefficients of the
	  entire integrand one at a time.
	  
	  todo:
	  clean things up
	  test: cube, simplex
	  time test: simplex: old simplex functions, old functions, new
	  functions.
	  remove old functions
	  latte: add option to save to a file. --interactive. default
	  weight.

2012-01-11 08:14  Brandon Dutra <bedutra@ucdavis.edu>

	* code/latte/valuation/valuation.cpp: valuation.cpp: I forgot to
	  comment back in the --monomials and --linear-forms options.

2012-01-09 06:13  Brandon Dutra <bedutra@ucdavis.edu>

	* code/latte/top-ehrhart/Conebyconeapproximations_08_11_2010.mpl:
	  added a comment

2012-01-09 05:42  Brandon Dutra <bedutra@ucdavis.edu>

	* code/latte/valuation/valuation.cpp: added a
	  --valuation=top-ehrhart example to the help menu.

2012-01-09 05:35  Brandon Dutra <bedutra@ucdavis.edu>

	* code/latte/top-ehrhart/TopEhrhart.cpp: ok, ok, last printing
	  edit: we print expand(ehrhart-polynomial);

2012-01-09 05:26  Brandon Dutra <bedutra@ucdavis.edu>

	* code/latte/top-ehrhart/Conebyconeapproximations_08_11_2010.mpl,
	  code/latte/top-ehrhart/TopEhrhart.cpp: topEhrhart.cpp: added an
	  "evaluate at one" after printing the polynomial.
	  
	  conebyconeapproximations....mpl: we where dividing by an extra
	  M!. This is fixed.

2012-01-09 04:24  Brandon Dutra <bedutra@ucdavis.edu>

	* code/latte/top-ehrhart/Conebyconeapproximations_08_11_2010.mpl:
	  There was an error in dilated_approxi_cone_real. Sometimes (when
	  order=d), it would compute the real case!

2012-01-09 04:16  Brandon Dutra <bedutra@ucdavis.edu>

	* code/latte/top-ehrhart/compute-top-ehrhart-stdsimplex.mpl: added
	  an example that shows the problem with coefficients that are not
	  unique.

2012-01-05 00:09  Brandon Dutra <bedutra@ucdavis.edu>

	* code/latte/Makefile.am, code/latte/valuation/valuation.cpp,
	  code/latte/valuation/valuation.h: valuation.cpp/h: added back the
	  old --valuation= options.
	  -- I removed my old idea of passing the valuation and algorithm
	  used via the --valuation-algo option.
	  -- --valuation=top-ehrhart [--num-coefficients=x]
	  [--real-dilations] works
	  -- We can compute the weighted Ehrhart polynomial for any
	  simplicial cone
	  where the weights are powers of linear forms or polynomials
	  -- Todo: add an option if the user does NOT want a weighted count
	  (that is a linear form = (0 + ... 0)^0).
	  Currently, the user would have to enter such a linear form.

2012-01-04 23:59  Brandon Dutra <bedutra@ucdavis.edu>

	* code/latte/top-ehrhart/Conebyconeapproximations_08_11_2010.mpl,
	  code/latte/top-ehrhart/TopEhrhart.cpp,
	  code/latte/top-ehrhart/TopEhrhart.h,
	  code/latte/top-ehrhart/top-ehrhart.cpp: added a new class
	  TopEhrhart.cpp/h: This class builds the maple file for calling
	  the top Ehrhart functions.
	  
	  todo: remove top-ehrhart.cpp....I'm still testing correctness.

2011-12-19 02:17  Matthias Koeppe <mkoeppe@math.ucdavis.edu>

	* AUTHORS, Makefile.am, README, doc, doc/manual.pdf,
	  manual_v1.1.pdf, manual_v1.1.ps, manual_v1.5.pdf: Put manual in
	  doc/ directory, update AUTHORS

2011-12-19 01:57  Matthias Koeppe <mkoeppe@math.ucdavis.edu>

	* doc/manual.tex: Update manual

2011-12-19 01:05  Matthias Koeppe <mkoeppe@math.ucdavis.edu>

	* EXAMPLES/volumeIntegrationPaperComparison:

2011-12-18 20:27  Matthias Koeppe <mkoeppe@math.ucdavis.edu>

	* code/latte/Makefile.am: Remove duplicate file

2011-12-18 20:26  Matthias Koeppe <mkoeppe@math.ucdavis.edu>

	* code/latte/banner.cpp: Update banner

2011-12-15 02:37  Matthias Koeppe <mkoeppe@math.ucdavis.edu>

	* autogen.sh, code/latte/Makefile.am, configure.ac: Use libtool to
	  create an installable shared-library liblatte

2011-12-14 17:55  Brandon Dutra <bedutra@ucdavis.edu>

	* code/latte/LattException.h,
	  code/latte/top-ehrhart/top-ehrhart.cpp,
	  code/latte/valuation/PolytopeValuation.cpp,
	  code/latte/valuation/PolytopeValuation.h,
	  code/latte/valuation/valuation.cpp: Removed the integration over
	  sdt. simplex method.

2011-12-14 09:45  Brandon Dutra <bedutra@ucdavis.edu>

	* code/latte/Makefile.am, code/latte/valuation/PolytopeValuation.h:
	  Makefile.am: I was getting an error from HAVE_PROGRAMMER_EXTRA if
	  statment. Quick fix: replaced it with have_database.
	  
	  PolytopeValuation.h: removed double declearation. todo: remove
	  std simplex integration to get this working with the new changes.

2011-12-14 08:29  Brandon Dutra <bedutra@ucdavis.edu>

	* code/latte/LattException.h, code/latte/integration/multiply.h,
	  code/latte/valuation/PolytopeValuation.cpp,
	  code/latte/valuation/PolytopeValuation.h,
	  code/latte/valuation/valuation.cpp,
	  code/latte/valuation/valuation.h: integration/multiply: commented
	  out the add function. This should be added its own file, and it
	  should work for plf's and polynomials.
	  
	  PolytopeValuation.*, valuation.*: added integration of
	  polynomials by 1) products of powers of linear forms (plf), and
	  2) converting to the standard simplex. Option two should be
	  removed because it is a very bad method. Also, more comments need
	  to be added.

2011-12-14 05:36  Matthias Koeppe <mkoeppe@math.ucdavis.edu>

	* ., code, code/gnulib, code/latte, code/latte/normalize,
	  code/latte/sqlite, code/latte/top-ehrhart,
	  code/latte/valuation/test: Ignore some generated files

2011-12-14 05:33  Matthias Koeppe <mkoeppe@math.ucdavis.edu>

	* code/latte/Makefile.am: New file, top-ehrhart.cpp
	  New Maple file

2011-12-14 05:33  Matthias Koeppe <mkoeppe@math.ucdavis.edu>

	* code/latte/LattException.h: Add FIXME

2011-12-14 05:32  Matthias Koeppe <mkoeppe@math.ucdavis.edu>

	* code/latte/top-ehrhart/testingTopEhrhart.mpl,
	  code/latte/top-ehrhart/testingTopEhrhart_lib.mpl: Update of test
	  scripts

2011-12-14 05:31  Matthias Koeppe <mkoeppe@math.ucdavis.edu>

	* code/latte/top-ehrhart/top-ehrhart.cpp,
	  code/latte/valuation/PolytopeValuation.h,
	  code/latte/valuation/valuation.cpp,
	  code/latte/valuation/valuation.h: New valuation: top-ehrhart

2011-12-14 05:27  Matthias Koeppe <mkoeppe@math.ucdavis.edu>

	* configure.ac: Fix path of Maple scripts

2011-12-14 02:25  Matthias Koeppe <mkoeppe@math.ucdavis.edu>

	* code/latte/top-ehrhart/Conebyconeapproximations_08_11_2010.mpl:
	  (TopEhrhartweightedPoly): Use the right approximation order

2011-12-14 01:53  Matthias Koeppe <mkoeppe@math.ucdavis.edu>

	* code/latte/top-ehrhart/Conebyconeapproximations_08_11_2010.mpl:
	  All interface functions were computing one order too many!

2011-12-14 00:00  Matthias Koeppe <mkoeppe@math.ucdavis.edu>

	* code/latte/top-ehrhart/Conebyconeapproximations_08_11_2010.mpl:
	  (cone_dec): Merge microoptimizations from TopEhrhart_lib.mpl

2011-12-13 02:18  Matthias Koeppe <mkoeppe@math.ucdavis.edu>

	* code/latte/top-ehrhart/Conebyconeapproximations_08_11_2010.mpl:
	  Fix last change.
	  
	  Add non-_real interface functions

2011-12-13 01:33  Matthias Koeppe <mkoeppe@math.ucdavis.edu>

	* code/latte/top-ehrhart/Conebyconeapproximations_08_11_2010.mpl:
	  (projectedlattice): Merge microoptimizations from
	  TopEhrhart_lib.mpl

2011-12-13 01:19  Matthias Koeppe <mkoeppe@math.ucdavis.edu>

	* code/latte/top-ehrhart/Conebyconeapproximations_08_11_2010.mpl:
	  New interface functions.

2011-12-06 22:19  Matthias Koeppe <mkoeppe@math.ucdavis.edu>

	* ., EXAMPLES/aimPresentation/examples/easy/square.latte,
	  EXAMPLES/deloera, EXAMPLES/deloera/6e.latte,
	  EXAMPLES/deloera/7h.latte, EXAMPLES/deloera/C11.latte,
	  EXAMPLES/deloera/C12.latte,
	  EXAMPLES/deloera/another-birkhoff-simplex.vrep,
	  EXAMPLES/deloera/chan-robbins-yuen-pyramid.vrep,
	  EXAMPLES/deloera/some-birkhoff-simplex.vrep,
	  EXAMPLES/volumeIntegrationPaperComparison/VOLUME/markKorenblit,
	  code/latte/barvinok/barvinok.cpp, code/latte/buildPolytopes,
	  code/latte/testingSLandTopEhrhart,
	  code/latte/testingSLandTopEhrhart/TopEhrhart/BirkhoffGenerator.mpl,
	  code/latte/top-ehrhart,
	  code/latte/top-ehrhart/Conebyconeapproximations_08_11_2010.mpl,
	  code/latte/top-ehrhart/Conebyconeapproximations_08_11_2010.mw,
	  code/latte/top-ehrhart/Conebyconeapproximations_08_11_2010_examples.mpl,
	  code/latte/top-ehrhart/README,
	  code/latte/top-ehrhart/TopEhrhart_lib.mpl,
	  code/latte/top-ehrhart/testingTopEhrhart.mpl,
	  code/latte/top-ehrhart/testingTopEhrhart_lib.mpl: Merge from
	  version_1_4_branch

2011-12-05 22:13  Matthias Koeppe <mkoeppe@math.ucdavis.edu>

	* [r1404] code/latte/barvinok/barvinok.cpp,
	  code/latte/top-ehrhart/Conebyconeapproximations_08_11_2010.mpl,
	  configure.ac: Comment out tests

2011-12-02 21:10  Matthias Koeppe <mkoeppe@math.ucdavis.edu>

	* [r1403]
	  code/latte/top-ehrhart/Conebyconeapproximations_08_11_2010.mpl:
	  split out examples

2011-12-02 21:10  Matthias Koeppe <mkoeppe@math.ucdavis.edu>

	* [r1402]
	  code/latte/top-ehrhart/Conebyconeapproximations_08_11_2010_examples.mpl:
	  split out examples

2011-12-02 21:06  Matthias Koeppe <mkoeppe@math.ucdavis.edu>

	* [r1401]
	  code/latte/top-ehrhart/Conebyconeapproximations_08_11_2010.mpl,
	  code/latte/top-ehrhart/TopEhrhart_lib.mpl: Reindent with Emacs
	  maplev.el

2011-12-02 20:37  Matthias Koeppe <mkoeppe@math.ucdavis.edu>

	* [r1400]
	  code/latte/top-ehrhart/Conebyconeapproximations_08_11_2010.mpl,
	  code/latte/top-ehrhart/Conebyconeapproximations_08_11_2010.mw:
	  Add from Michele/Velleda's email

2011-12-02 20:28  Matthias Koeppe <mkoeppe@math.ucdavis.edu>

	* [r1399] code/latte/top-ehrhart/README,
	  code/latte/top-ehrhart/TopEhrhart_lib.mpl,
	  code/latte/top-ehrhart/testingTopEhrhart.mpl,
	  code/latte/top-ehrhart/testingTopEhrhart_lib.mpl: Add from
	  topweighted-ehrhart/release-2010-11-05.tar

2011-12-02 20:28  Matthias Koeppe <mkoeppe@math.ucdavis.edu>

	* [r1398] code/latte/top-ehrhart: Add from
	  topweighted-ehrhart/release-2010-11-05.tar

2010-09-10 06:02  Matthias Koeppe <mkoeppe@math.ucdavis.edu>

	* [r1255] EXAMPLES/deloera/another-birkhoff-simplex.vrep,
	  EXAMPLES/deloera/chan-robbins-yuen-pyramid.vrep,
	  EXAMPLES/deloera/some-birkhoff-simplex.vrep:

2010-09-09 04:20  Matthias Koeppe <mkoeppe@math.ucdavis.edu>

	* [r1253] EXAMPLES/deloera, EXAMPLES/deloera/6e.latte,
	  EXAMPLES/deloera/7h.latte, EXAMPLES/deloera/C11.latte,
	  EXAMPLES/deloera/C12.latte:

2011-08-28 03:57  Brandon Dutra <bedutra@ucdavis.edu>

	* code/latte/LattException.h, code/latte/integration/PolyTrie.cpp,
	  code/latte/integration/PolyTrie.h,
	  code/latte/integration/burstTrie.h,
	  code/latte/integration/consumers.h,
	  code/latte/integration/createLinear.mpl, code/latte/rational.cpp,
	  code/latte/rational.h,
	  code/latte/valuation/PolytopeValuation.cpp,
	  code/latte/valuation/PolytopeValuation.h,
	  code/latte/valuation/test/VolumeAndIntegrationTests.cpp,
	  code/latte/valuation/test/integrateHyperrectangle.mpl,
	  code/latte/valuation/test/testIntegrationHyperrectanglesDriver.cpp,
	  code/latte/valuation/test/testVolumeForSLDriver.cpp,
	  code/latte/valuation/test/valuationTestsLib.mpl,
	  code/latte/valuation/testLibraryExamples.cpp,
	  code/latte/valuation/valuation.cpp,
	  code/latte/valuation/valuation.h: rational.*: another method
	  PolyTrie.*:added *linFormProducts functions.
	  consumers.*: added linFormProducts consumer
	  burstTrie.*: where linFormProducts is defined.
	  PolytopeValuation.*,valuation.*: updated integration enums to
	  make it smoother. You can now integrate products of linear forms
	  using the new data structure.
	  
	  testIntegrationHypr...Driver, *.mpl: test integrating products of
	  LF over cubes.

2011-08-23 23:40  Brandon Dutra <bedutra@ucdavis.edu>

	* code/latte/integration/newIntegration.cpp,
	  code/latte/valuation/PolytopeValuation.cpp: added comments.

2011-08-23 17:55  Brandon Dutra <bedutra@ucdavis.edu>

	* code/latte/LattException.cpp, code/latte/LattException.h,
	  code/latte/buildPolytopes/Driver.cpp,
	  code/latte/integration/PolyTrie.cpp,
	  code/latte/integration/createLinear.mpl,
	  code/latte/integration/newIntegration.cpp,
	  code/latte/integration/newIntegration.h,
	  code/latte/interpolation/testDriver.cpp,
	  code/latte/valuation/PolytopeValuation.cpp,
	  code/latte/valuation/PolytopeValuation.h,
	  code/latte/valuation/test/integrateHyperrectangle.mpl,
	  code/latte/valuation/test/integrateHyperrectangleTest.sh,
	  code/latte/valuation/test/testIntegrationHyperrectanglesDriver.cpp,
	  code/latte/valuation/test/valuationTestsLib.mpl,
	  code/latte/valuation/valuation.cpp,
	  code/latte/valuation/valuation.h: Major update: added integration
	  of products of powers of linear forms.
	  LatteException.*: updated what()
	  newIntegration.*, polytopeValuation.*, valuation.*: added
	  integration of products of linear forms
	  PolyTrie: added a check for inserting zero-coeff. polynomials.
	  integrateHyperrectangleTest.sh: fixed path names
	  testIntegrationHyperrectanglesDriver.cpp: can now test products
	  of linear forms
	  
	  createLinear.mpl: added a function to get the product of linear
	  forms in maple style.
	  valuationTestsLib.mpl, integrateHyperrectangle.mpl: added tests
	  for products of linear forms.
	  
	  todo:
	  --integrate sumes of products of powers of linear forms (that's a
	  lot of of's!!!) (with constant terms/volumes)
	  --add this to the maple test cases.
	  --right now, the maple scripts only make products of linear forms
	  where the number of products is equal to the dimension, we should
	  change this number (the c++ code does not have this limit)
	  --add amazing comments!!!

2011-08-15 07:37  Brandon Dutra <bedutra@ucdavis.edu>

	* code/latte/valuation/test/fixLawrenceValuationDriver.cpp:
	  commented out a db query.

2011-08-15 05:33  Brandon Dutra <bedutra@ucdavis.edu>

	* code/latte/valuation/testCorrectnessAndBenchmark: never mind,
	  having svn issues.

2011-08-15 05:32  Brandon Dutra <bedutra@ucdavis.edu>

	* code/latte/valuation/testCorrectnessAndBenchmark: removed old
	  test folder name.

2011-07-31 01:56  Brandon Dutra <bedutra@ucdavis.edu>

	* manual_v1.5.pdf: the manual now talks about non-full dimensional
	  polytopes.

2011-07-31 01:48  Brandon Dutra <bedutra@ucdavis.edu>

	* doc/manual.tex: manual: added section about non-full dimensional
	  polytopes.

2011-07-30 17:07  Brandon Dutra <bedutra@ucdavis.edu>

	* manual_v1.5.pdf: added the 1.5 manual.

2011-07-30 17:06  Brandon Dutra <bedutra@ucdavis.edu>

	* AUTHORS, Makefile.am, configure.ac, doc/manual.tex: Makefile.am:
	  updated manual name
	  doc/manual: changed version to 1.5
	  configure: changed verson to 1.5

2011-07-30 17:02  Brandon Dutra <bedutra@ucdavis.edu>

	* NEWS, README: updated the news and readme files.

2011-07-30 00:33  Brandon Dutra <bedutra@ucdavis.edu>

	* configure.ac: added the AC_CONDITIONAL for have_programmer_helper

2011-07-30 00:31  Brandon Dutra <bedutra@ucdavis.edu>

	* code/latte/Makefile.am,
	  code/latte/valuation/test/VolumeAndIntegrationTests.cpp,
	  code/latte/valuation/testLibraryExamples.cpp: updated the
	  volumeAndInt...Test.cpp file so the check program should finish
	  on logic.
	  Makefile added "HAVE_PROGRAMMER_HELPER" condition...so reguler
	  users don't have to see it.

2011-07-28 23:37  Brandon Dutra <bedutra@ucdavis.edu>

	* code/latte/Makefile.am: updated the makefile because I renamed
	  that folder.

2011-07-28 22:30  Brandon Dutra <bedutra@ucdavis.edu>

	* code/latte/valuation/test,
	  code/latte/valuation/testCorrectnessAndBenchmark: renamed
	  testCorrectnessAndBenchmark to test because make dist is saying
	  tar cannot work with file names longer than 99 char's. I know,
	  this is crazy, but this will be a faster fix then messing with
	  autotools files.

2011-07-28 18:05  Brandon Dutra <bedutra@ucdavis.edu>

	* code/gnulib/setenv.h: added gnulib/setevn.h to svn.

2011-07-21 08:18  Brandon Dutra <bedutra@ucdavis.edu>

	* doc/bibliography.bib, doc/manual.tex: minor edits.

2011-07-21 01:14  Brandon Dutra <bedutra@ucdavis.edu>

	* code/latte/Makefile.am: added the if have db. It's working again.

2011-07-21 01:08  Brandon Dutra <bedutra@ucdavis.edu>

	* code/latte/Makefile.am: reverted configure and Makefile...somehow
	  the HAVE_DB messed things up. I'll try again.

2011-07-20 22:12  Brandon Dutra <bedutra@ucdavis.edu>

	* code/latte/Makefile.am,
	  code/latte/valuation/testCorrectnessAndBenchmark/VolumeAndIntegrationTests.cpp,
	  code/latte/valuation/testCorrectnessAndBenchmark/VolumeAndIntegrationTests.h,
	  code/latte/valuation/testCorrectnessAndBenchmark/integratePolynomialForPaperDriver.cpp,
	  code/latte/valuation/testLibraryExamples.cpp: removed
	  integratePolynomialForPaperDriver.cpp and its entry in the
	  makefile.
	  removed two test integration functions in
	  VolumeAndIntegrationTests

2011-07-20 20:36  Brandon Dutra <bedutra@ucdavis.edu>

	* code/latte/Makefile.am, configure.ac: added rules to stop
	  building the database programs.

2011-07-20 19:57  Brandon Dutra <bedutra@ucdavis.edu>

	* code/latte/CheckEmpty.cpp, code/latte/LattException.h,
	  code/latte/ReadLatteStyle.cpp, code/latte/ReadPolyhedron.cpp,
	  code/latte/ReadPolyhedron.h,
	  code/latte/valuation/testLibraryExamples.cpp,
	  code/latte/vertices/cdd.cpp, code/latte/vertices/cdd.h: you can
	  now read polyhedra from a dd matrix (not from a file).

2011-07-20 06:49  Brandon Dutra <bedutra@ucdavis.edu>

	* code/latte/LattException.cpp, code/latte/LattException.h: added
	  the latte exception classes

2011-07-20 06:49  Brandon Dutra <bedutra@ucdavis.edu>

	* code/latte/Grobner.cpp, code/latte/Grobner.h,
	  code/latte/Makefile.am, code/latte/ReadPolyhedron.cpp,
	  code/latte/ReadPolyhedron.h, code/latte/count.cpp,
	  code/latte/count.h, code/latte/countDriver.cpp,
	  code/latte/genFunction/maple.cpp: Grobner: returned lattice count
	  ReadPolyhedron, count: added exception calls.

2011-07-18 23:28  Jesus De Loera <deloera@math.ucdavis.edu>

	* doc/manual.tex: acknowledgements

2011-07-18 05:33  Brandon Dutra <bedutra@ucdavis.edu>

	* doc/manual.tex: removed count --interior

2011-07-18 03:48  Brandon Dutra <bedutra@ucdavis.edu>

	* code/latte/Makefile.am,
	  code/latte/valuation/testLibraryExamples.cpp: added examples on
	  how to use latte in a library setting.

2011-07-18 02:08  Brandon Dutra <bedutra@ucdavis.edu>

	* code/latte/Makefile.am, code/latte/Polyhedron.h,
	  code/latte/ReadPolyhedron.cpp, code/latte/RudyResNTL.cpp,
	  code/latte/RudyResNTL.h, code/latte/barvinok/dec.cpp,
	  code/latte/barvinok/dec.h, code/latte/count.cpp,
	  code/latte/count.h, code/latte/countDriver.cpp,
	  code/latte/valuation/Perturbation.cpp,
	  code/latte/valuation/PolytopeValuation.cpp,
	  code/latte/valuation/PolytopeValuation.h,
	  code/latte/valuation/valuation.cpp: RudyResNTL: now returns the
	  polynomial or lattice count
	  Polyhedron.h: added a print function
	  count.cpp: now the main functions to do the work (it does not
	  have a main()).
	  countDriver.cpp: this one has the main for the count exe.
	  barvinok/dec: decomposeAndComputeResidue now retuns the
	  polynomial or lattice count.
	  PolytopeValuation: changed cout to cerr.
	  valuation.cpp: cout to cerr + forgot to add one location where
	  the cone-decomposition should be used unstead of --lawrence.

2011-07-17 17:20  Brandon Dutra <bedutra@ucdavis.edu>

	* doc/latte-integrale.jpg, doc/manual.tex, doc/truncatedCube.jpg:
	  added the truncated cube and latte graphic to the manual.
	  
	  fixed some spelling issues, added another integration example.

2011-07-12 22:29  Brandon Dutra <bedutra@ucdavis.edu>

	* doc/amsabbrv.bst, doc/bibliography.bib, doc/examplebrion.jpg,
	  doc/homogenizedTriangle.jpg, doc/manual.tex: updated the manual,
	  added a new graphic and converted the old graphic to jpg.

2011-07-12 17:45  Brandon Dutra <bedutra@ucdavis.edu>

	* code/latte/integration/createLinear.mpl,
	  code/latte/valuation/testCorrectnessAndBenchmark/integrateHyperrectangle.mpl,
	  code/latte/valuation/testCorrectnessAndBenchmark/integrateHyperrectangleTest.sh,
	  code/latte/valuation/testCorrectnessAndBenchmark/testIntegrationHyperrectanglesDriver.cpp,
	  code/latte/valuation/testCorrectnessAndBenchmark/valuationTestsLib.mpl:
	  updated the test script. we not test integration of polynomials
	  and powers of linear forms.

2011-07-12 01:47  Brandon Dutra <bedutra@ucdavis.edu>

	* code/latte/valuation/PolytopeValuation.cpp,
	  code/latte/valuation/PolytopeValuation.h: the user can integrate
	  (linear-fomr)^0 = 1

2011-07-12 01:40  Brandon Dutra <bedutra@ucdavis.edu>

	* code/latte/valuation/PolytopeValuation.cpp,
	  code/latte/valuation/PolytopeValuation.h,
	  code/latte/valuation/valuation.cpp: the user can now integerate
	  powers of linear forms
	  todo: more error checking

2011-07-12 01:02  Brandon Dutra <bedutra@ucdavis.edu>

	* doc/manual.tex: updated the manual:
	  todo:
	  --give more examples on how to do integration of polynomails and
	  l.forms.
	  --how to cite latte
	  --what number is latte on?
	  --title
	  --logo

2011-07-12 00:26  Brandon Dutra <bedutra@ucdavis.edu>

	* code/latte/Makefile.am, code/latte/integration/iterators.hpp,
	  code/latte/valuation/PolytopeValuation.cpp,
	  code/latte/valuation/PolytopeValuation.h,
	  code/latte/valuation/valuation.cpp,
	  code/latte/valuation/valuation.h: The user can now integrate
	  linear forms.

2011-07-12 00:00  Brandon Dutra <bedutra@ucdavis.edu>

	* code/latte/valuation/RecursivePolytopeValuation.cpp,
	  code/latte/valuation/RecursivePolytopeValuation.h: added the
	  unfinished stokes files.

2011-07-11 23:50  Brandon Dutra <bedutra@ucdavis.edu>

	* code/latte/valuation/valuation.cpp: commiting before a major
	  update.

2011-07-08 18:13  Brandon Dutra <bedutra@ucdavis.edu>

	* doc/manual.tex: finished 1/2 the manual edits. More to come.

2011-07-06 19:28  Brandon Dutra <bedutra@ucdavis.edu>

	* doc/manual.tex: small update the the manual, much more to come.

2011-06-29 03:23  Brandon Dutra <bedutra@ucdavis.edu>

	* code/latte/ReadPolyhedron.cpp, code/latte/ReadPolyhedron.h,
	  code/latte/cone.cpp, code/latte/cone.h,
	  code/latte/integration/PolyTrie.cpp, code/latte/preprocess.cpp,
	  code/latte/preprocess.h, code/latte/rational.cpp,
	  code/latte/rational.h, code/latte/valuation/Perturbation.cpp,
	  code/latte/valuation/Perturbation.h,
	  code/latte/valuation/PolytopeValuation.cpp,
	  code/latte/valuation/PolytopeValuation.h,
	  code/latte/valuation/valuation.cpp,
	  code/latte/valuation/valuation.h, code/latte/vertices/cdd.cpp,
	  code/latte/vertices/cdd.h: this is commit 2/2.
	  
	  This contains the unfinished stokes method code with a poor
	  interface and poor code reuse (I cut/pasted the core latte read
	  function instead of dividing them because I didn't want to mess
	  anything up. This will be fixed once the stokes method is done.)
	  
	  So said, again, these last two commits is me saving my work. But
	  the user has no knowlege the stokes method is half there...it is
	  save to take this as the next release to latte.

2011-06-29 03:19  Brandon Dutra <bedutra@ucdavis.edu>

	* code/latte/Makefile.am: Makefile:: added the .cpp/.h files from
	  the stokes integration method.
	  
	  This is a major update to a lot of core reading/preprocess files,
	  and new functions for the stokes recursive valuation method have
	  been added.
	  
	  The stokes method is not finished, and it does not work. Also,
	  the interface to the stokes method is not done. For example,
	  calling the stokes method is 'hidden' in the valuation driver,
	  there are many debug-statements, few comments, and I have
	  cut-and-pasted core latte reading/preprocessing function and
	  modified them for the stokes method. A better solution is to
	  divide up the core latte functions and only call the ones I need.
	  I will do all this once the THEORY of how the stokes method
	  should work is known (we do not know yet the correct formula for
	  the recursive valuation for non-full dimentional polytopes.)
	  
	  
	  This is commint 1/2. (I want a new revision number starting here
	  just in case the stokes update messing something up).

2011-06-25 01:35  Brandon Dutra <bedutra@ucdavis.edu>

	* EXAMPLES/volumeIntegrationPaperComparison/Lepelley/maple/makeVotePolytope.mpl,
	  EXAMPLES/volumeIntegrationPaperComparison/Lepelley/maple/votePolytope4.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/Lepelley/maple/votePolytope5.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/Lepelley/maple/votePolytope6.hrep.latte:
	  Sorry, again, I am adding these generated files because I do not
	  have maple on my computer.

2011-06-25 01:28  Brandon Dutra <bedutra@ucdavis.edu>

	* EXAMPLES/volumeIntegrationPaperComparison/Lepelley/maple/votePolytope3.hrep.latte:
	  added voting polytope (I will delete this, I just want to
	  transfer the file to my computer (I cannot use make to generate
	  them)).

2011-06-25 00:52  Brandon Dutra <bedutra@ucdavis.edu>

	* EXAMPLES/volumeIntegrationPaperComparison/Lepelley,
	  EXAMPLES/volumeIntegrationPaperComparison/Lepelley/maple,
	  EXAMPLES/volumeIntegrationPaperComparison/Lepelley/maple/makeVotePolytope.mpl,
	  EXAMPLES/volumeIntegrationPaperComparison/Lepelley/paper,
	  EXAMPLES/volumeIntegrationPaperComparison/Lepelley/paper/On
	  Ehrhart polynomials and probability calculations.PDF: added the
	  voting polytopes folder to the valuation folder in examples.

2011-05-27 15:22  Brandon Dutra <bedutra@ucdavis.edu>

	* code/latte/preprocess.cpp: No change, just white-space updates.

2011-05-20 23:53  Brandon Dutra <bedutra@ucdavis.edu>

	* code/latte/ReadLatteStyle.cpp, code/latte/ReadPolyhedron.cpp:
	  ReadPolyhedron, ReadLatteStype: updated code format (nothing is
	  different, just the white space).

2011-05-16 23:52  Brandon Dutra <bedutra@ucdavis.edu>

	* code/latte/integration/PolyTrie.cpp,
	  code/latte/integration/burstTrie.h,
	  code/latte/integration/burstTrie.hpp,
	  code/latte/integration/integrationTestsLib.mpl,
	  code/latte/integration/iterators.hpp,
	  code/latte/valuation/PolytopeValuation.cpp,
	  code/latte/valuation/PolytopeValuation.h,
	  code/latte/valuation/testCorrectnessAndBenchmark/integrateHyperrectangle.mpl,
	  code/latte/valuation/testCorrectnessAndBenchmark/testIntegrationHyperrectanglesDriver.cpp,
	  code/latte/valuation/testCorrectnessAndBenchmark/valuationTestsLib.mpl:
	  we can now integrate constants (and polynomials with constants)
	  
	  PolyTrie.cpp: you can insert a constant monomial as a linear form
	  [c, [0,...,0]]. We do not use this in the polytope valuation
	  class, but it is nice to have this defined in the linear-form
	  level.
	  
	  iterators.hpp: added constructors and error checking when calling
	  delete.
	  
	  burstTrie.hpp: no changes, spacing.
	  
	  integrationTestsLib.mpl: you can now make a non-homo polynomial.
	  
	  burstTrie.h added constructors
	  
	  PolytopeValuation.*: the integration functions call the volume
	  functions to integrage constants. Constants are removed from the
	  input polynomial when we dilate the polynomial.
	  
	  testIntegrationHyprrectanglesDriver.cpp: now testing the lawrence
	  starting from tangent-cones and triangulate starting from lifted
	  cone. You could convert back by uncommenting a block.
	  
	  valuationTestsLib.mpl: reduced the number of test cases..so
	  scripts ends within 1 min. or so.

2011-05-08 05:20  Brandon Dutra <bedutra@ucdavis.edu>

	* code/latte/valuation/testCorrectnessAndBenchmark/fixLawrenceValuationDriver.cpp:
	  added file ref'ed in makefile

2011-04-27 01:01  Brandon Dutra <bedutra@ucdavis.edu>

	* code/latte/Makefile.am, code/latte/integration/benchmark.mpl,
	  code/latte/integration/integrationTestsLib.mpl,
	  code/latte/sqlite/IntegrationDB.cpp,
	  code/latte/sqlite/IntegrationDB.h,
	  code/latte/sqlite/VolumeDB.cpp, code/latte/sqlite/VolumeDB.h,
	  code/latte/valuation/PolytopeValuation.cpp,
	  code/latte/valuation/countLinearFormsFromPolynomialDriver.cpp,
	  code/latte/valuation/testCorrectnessAndBenchmark/fixDualPolytopesInDatabaseDriver.cpp,
	  code/latte/valuation/testCorrectnessAndBenchmark/printDatabaseTimeTablesDriver.cpp,
	  code/latte/valuation/testCorrectnessAndBenchmark/runVolumeTestFromDatabaseDriver.cpp,
	  code/latte/valuation/valuation.cpp, code/latte/vertices/cdd.cpp:
	  printDatabasesTimeTables.cpp: added latex tables
	  runVolumeTestFromDBDriver.cpp: added if case for empty results.
	  fixDualPolytopesInDBDriver.cpp: new function to update the
	  lawrence scale factor.
	  valuation.cpp: spacing
	  countLinearForms...cpp: now finding the std. dev.
	  polytopeValuation.cpp: spacing
	  volumeDB.cpp: added #define const.
	  IntegrationDB: updated inset sql stm.
	  integrationTestsLib.mpl: changed loop range.
	  benchmark.mpl: fixed a function (missing a parameter).

2011-04-09 03:20  Brandon Dutra <bedutra@ucdavis.edu>

	* code/latte/Makefile.am, code/latte/ReadPolyhedron.cpp,
	  code/latte/integration/residue.cpp,
	  code/latte/valuation/PolytopeValuation.cpp,
	  code/latte/vertices/cdd.cpp: residue.cpp: removed the fix-length
	  array. I think I did this long ago, but I reverted and never
	  redid this.
	  
	  ReadPolyhedron.cpp: no change.
	  PolytopeValuation.cpp: commented out cout's.
	  
	  cdd.cpp: can now read in rational vertices
	  
	  Makefile.am: no change.

2011-04-05 23:06  Brandon Dutra <bedutra@ucdavis.edu>

	* EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/vinciCyclicPolytopes/vinciCyclicPolytopesDriver.pl:
	  added more comments to vinciCyclicPolytopesDriver.pl

2011-04-05 22:59  Brandon Dutra <bedutra@ucdavis.edu>

	* EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/vinciCyclicPolytopes,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/vinciCyclicPolytopes/vinciCyclicPolytopesDriver.pl:
	  added a perl script that makes the latex table for "latte vs
	  vinci on cyclic polytopes"

2011-03-28 07:04  Brandon Dutra <bedutra@ucdavis.edu>

	* code/latte/Makefile.am,
	  code/latte/valuation/countLinearFormsFromPolynomialDriver.cpp:
	  added countLinearFormsFrom..Driver.cpp:: given list of polynomial
	  files, find the avg. number of linear forms

2011-03-21 23:17  Brandon Dutra <bedutra@ucdavis.edu>

	* code/latte/valuation/PolytopeValuation.cpp: Triangulation
	  integration was wrong, I missed a spot when I moved the leading 1
	  to the end

2011-03-18 01:29  Brandon Dutra <bedutra@ucdavis.edu>

	* code/latte/ReadPolyhedron.cpp,
	  code/latte/convertCDD_ext_to_latte.cpp, code/latte/dual.cpp,
	  code/latte/integration/integrationTestsLib.mpl,
	  code/latte/print.cpp, code/latte/rational.cpp,
	  code/latte/rational.h,
	  code/latte/triangulation/RegularTriangulationWithCdd.cpp,
	  code/latte/triangulation/triangulate.cpp:

2011-03-18 01:27  Brandon Dutra <bedutra@ucdavis.edu>

	* code/latte/Makefile.am:

2011-03-18 01:22  Brandon Dutra <bedutra@ucdavis.edu>

	* code/latte/convertCDD_ine_to_latte.cpp: added cdd ine to latte
	  file.

2011-03-18 01:17  Brandon Dutra <bedutra@ucdavis.edu>

	* code/latte/valuation/PolytopeValuation.cpp,
	  code/latte/valuation/PolytopeValuation.h,
	  code/latte/valuation/testCorrectnessAndBenchmark/buildDatabaseRandomPolytopesDriver.cpp,
	  code/latte/valuation/testCorrectnessAndBenchmark/printDatabaseTimeTablesDriver.cpp,
	  code/latte/valuation/testCorrectnessAndBenchmark/runIntegrationTestFromDatabaseDriver.cpp,
	  code/latte/valuation/testCorrectnessAndBenchmark/runVolumeTestFromDatabaseDriver.cpp,
	  code/latte/valuation/valuation.cpp: updated testing drivers

2011-03-18 01:15  Brandon Dutra <bedutra@ucdavis.edu>

	* code/latte/buildPolytopes/BuildRandomPolynomials.cpp:

2011-03-18 01:12  Brandon Dutra <bedutra@ucdavis.edu>

	* code/latte/sqlite/IntegrationDB.cpp,
	  code/latte/sqlite/IntegrationDB.h,
	  code/latte/sqlite/ValuationDBStatistics.h,
	  code/latte/sqlite/VolumeDB.cpp, code/latte/sqlite/VolumeDB.h: I
	  didn't add the volume db class

2011-02-16 07:48  Brandon Dutra <bedutra@ucdavis.edu>

	* EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/createScript.sqlite,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/createVolume.sql,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dbBackup,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dbBackup/polynomialBackup.1.20.9pm.tar.gzip,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/fixDuals.sh,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/makeDatabase.sh,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/randomPolytoepDB.2.15.2011.tar.gzip:
	  part 1: adding sql scripts, and tar balls of the databases.

2011-02-16 03:12  Brandon Dutra <bedutra@ucdavis.edu>

	* EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/createScript.sqlite,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/makeDatabase.sh,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/polynomials:
	  Deleted the polynomials. Will commit them in 1 tar ball.

2011-02-16 03:04  Brandon Dutra <bedutra@ucdavis.edu>

	* EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim10,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim15,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim20,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim25,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim3,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim30,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim4,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim5,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim6,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim7,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim8:
	  part2: deleting more polytopes.

2011-02-16 02:38  Brandon Dutra <bedutra@ucdavis.edu>

	* EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim15/ext20,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim15/ext25,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim15/ext30,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim15/ext40:
	  I should not have uploaded the polytopes files, I should have
	  just uploaded a tar ball.
	  
	  The next few updates will be in relation to fixing this.

2011-02-10 20:03  Brandon Dutra <bedutra@ucdavis.edu>

	* EXAMPLES/volumeIntegrationPaperComparison/notStarted/shaoweiLin.pdf,
	  EXAMPLES/volumeIntegrationPaperComparison/shaoweiLin,
	  EXAMPLES/volumeIntegrationPaperComparison/shaoweiLin/shaoweiLin.pdf:
	  moved the paper on marginal likelihood integrals out of the 'not
	  started' folder.

2011-02-03 01:17  Brandon Dutra <bedutra@ucdavis.edu>

	* code/latte/Makefile.am, code/latte/cdd2latteDriver.cpp: removed
	  extra file.

2011-02-03 01:12  Brandon Dutra <bedutra@ucdavis.edu>

	* code/latte/Makefile.am,
	  code/latte/buildPolytopes/BuildPolytope.cpp,
	  code/latte/cdd2latteDriver.cpp,
	  code/latte/sqlite/IntegrationDB.cpp,
	  code/latte/valuation/testCorrectnessAndBenchmark/buildDatabaseRandomPolytopesDriver.cpp,
	  code/latte/valuation/testCorrectnessAndBenchmark/printDatabaseTimeTablesDriver.cpp,
	  code/latte/valuation/testCorrectnessAndBenchmark/runVolumeTestFromDatabaseDriver.cpp,
	  code/latte/valuation/valuation.cpp: small updates.
	  
	  I will remove the cdd2latteDriver.cpp file on the next commit.

2011-01-30 07:35  Brandon Dutra <bedutra@ucdavis.edu>

	* code/latte/valuation/testCorrectnessAndBenchmark/runVolumeTestFromDatabaseDriver.cpp:
	  run the volume tests.
	  
	  This file needs better style and comments.

2011-01-30 07:34  Brandon Dutra <bedutra@ucdavis.edu>

	* code/latte/Makefile.am,
	  code/latte/buildPolytopes/BuildPolytope.cpp,
	  code/latte/buildPolytopes/BuildPolytope.h,
	  code/latte/sqlite/IntegrationDB.cpp,
	  code/latte/sqlite/IntegrationDB.h,
	  code/latte/valuation/PolytopeValuation.cpp,
	  code/latte/valuation/testCorrectnessAndBenchmark/buildDatabaseRandomPolytopesDriver.cpp,
	  code/latte/valuation/testCorrectnessAndBenchmark/fixDualPolytopesInDatabaseDriver.cpp,
	  code/latte/valuation/testCorrectnessAndBenchmark/printDatabaseTimeTablesDriver.cpp,
	  code/latte/valuation/testCorrectnessAndBenchmark/runIntegrationTestFromDatabaseDriver.cpp:
	  IntegratonDB::added testing 1 given file.
	  
	  PolytopeValuaton::Lawrence checks to see if it will divide by
	  zero and start over it it will.
	  
	  the Driver files: small updates.
	  
	  BuildPolytope::updated latte v-rep dual function
	  
	  makefile: added driver to testing volume (will svn add next).

2011-01-20 00:38  Brandon Dutra <bedutra@ucdavis.edu>

	* code/latte/buildPolytopes/BuildPolytope.cpp: Forgot to comment
	  out a cout.

2011-01-20 00:28  Brandon Dutra <bedutra@ucdavis.edu>

	* code/latte/buildPolytopes/BuildGraphPolytope.cpp,
	  code/latte/buildPolytopes/BuildHypersimplexEdgePolytope.cpp,
	  code/latte/buildPolytopes/BuildPolytope.cpp,
	  code/latte/buildPolytopes/BuildPolytope.h,
	  code/latte/buildPolytopes/BuildRandomPolytope.cpp,
	  code/latte/rational.cpp, code/latte/rational.h,
	  code/latte/valuation/testCorrectnessAndBenchmark/printDatabaseTimeTablesDriver.cpp,
	  code/latte/valuation/testCorrectnessAndBenchmark/testBuildPolytopes.cpp:
	  BuildPolytope: major updates
	  1) points (and everything else) now assumes there is a slot for
	  the leading 1
	  2) when finding the dual, we modify the org. polytope by
	  centering it. Before I was keeping the origional but
	  I feel this is bad. Duals are only defined for centered
	  polytopes, and so the org. should change so that the dual becomes
	  defined.
	  3) No longer assumes the placement of FACETS and AFFINE_HULL when
	  reading in facets
	  4) dilating facets or vertices in the primal and dual settings is
	  now down through the same two functions.
	  5) Updated child classes: changed how they used the points vector
	  
	  rational.* : In ReadCDD, numbers chould only be 200 char long.
	  This restruction is removed. There are other functions that have
	  hard-coded limits (like the HugeInt class, which could be
	  replaced by the RationalNTL class).
	  
	  testBuildPolytopes.cpp: also making a copy of the polytope before
	  center is called.
	  
	  printDatabaseTimeTablesDriver.cpp: changed css color codes

2011-01-18 08:46  Brandon Dutra <bedutra@ucdavis.edu>

	* code/latte/Makefile.am,
	  code/latte/buildPolytopes/BuildPolytope.cpp,
	  code/latte/buildPolytopes/BuildPolytope.h,
	  code/latte/sqlite/IntegrationDB.cpp,
	  code/latte/sqlite/IntegrationDB.h,
	  code/latte/sqlite/SqliteDB.cpp, code/latte/sqlite/SqliteDB.h,
	  code/latte/valuation/Perturbation.cpp,
	  code/latte/valuation/testCorrectnessAndBenchmark/buildDatabaseRandomPolytopesDriver.cpp,
	  code/latte/valuation/testCorrectnessAndBenchmark/fixDualPolytopesInDatabaseDriver.cpp,
	  code/latte/valuation/testCorrectnessAndBenchmark/printDatabaseTimeTablesDriver.cpp,
	  code/latte/valuation/testCorrectnessAndBenchmark/runIntegrationTestFromDatabaseDriver.cpp,
	  code/latte/valuation/testCorrectnessAndBenchmark/testBuildPolytopes.cpp:
	  Perturbation.*: now picking random point on the curve
	  (t,t^2,t^3,...)
	  
	  Database stuff: adding/and testing cases.
	  
	  added fixDualPolytopesInDatabaseDriver. If you did not make
	  dual's, this will go back and make them. dual polymake fies are
	  deleted (not needed)
	  
	  added printDatabaseTimeTablesDriver: makes a table of the times
	  for everything per dim. Currently does this in html, but will
	  need to change this to latex (...I need to relearn how to do it
	  in latex).

2011-01-14 07:58  Brandon Dutra <bedutra@ucdavis.edu>

	* EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim3/ext13,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim3/ext13/polytope3_vertex13_num1.polymake:
	  I am having trouble svn adding!:

2011-01-09 03:24  Brandon Dutra <bedutra@ucdavis.edu>

	* EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/createScript.sqlite,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/makeDatabase.sh:
	  makeDatabase.sh: calls the c++ code that makes the database.
	  
	  createScript.sqlite: the sql create tables stm.

2011-01-09 03:20  Brandon Dutra <bedutra@ucdavis.edu>

	* code/latte/Makefile.am, code/latte/sqlite/IntegrationDB.cpp,
	  code/latte/sqlite/IntegrationDB.h,
	  code/latte/valuation/testCorrectnessAndBenchmark/buildDatabaseRandomPolytopesDriver.cpp:
	  buildDatabaseRandomPolytopesDriver.cpp: updated so it's data
	  comes from command line (I'll add/commit the bash script that
	  calls the exe next). Not computing duals, but still inserting it
	  in the database for reference.
	  
	  IntegrationDB.h: comments, shanged the simple column (1=simple,
	  0=not simple, -1=not known).
	  
	  Makefile: added 1 comment.

2011-01-08 21:09  Brandon Dutra <bedutra@ucdavis.edu>

	* code/latte/buildPolytopes/BuildPolytope.cpp,
	  code/latte/rational.cpp, code/latte/rational.h,
	  code/latte/sqlite/IntegrationDB.cpp,
	  code/latte/sqlite/IntegrationDB.h,
	  code/latte/valuation/testCorrectnessAndBenchmark/runIntegrationTestFromDatabaseDriver.cpp:
	  rational.*: added a "to string" fuction.
	  
	  IntegrationDB: moved a function in the driver to the class.
	  BuildPolytope: now centering the vertices before finding the
	  dual. This is still not correctly giving me the dual. After
	  looking into this more, I NOT know how to find the dual in
	  polymake.
	  
	  This is not the final commit, just saving work. It does compile.

2011-01-06 08:22  Brandon Dutra <bedutra@ucdavis.edu>

	* code/latte/Makefile.am,
	  code/latte/buildPolytopes/BuildPolytope.cpp,
	  code/latte/buildPolytopes/BuildPolytope.h,
	  code/latte/buildPolytopes/BuildRandomPolynomials.cpp,
	  code/latte/buildPolytopes/BuildRandomPolynomials.h,
	  code/latte/buildPolytopes/buildDatabaseRandomPolytopesDriver.cpp,
	  code/latte/buildPolytopes/testBuildPolytopes.cpp,
	  code/latte/sqlite/IntegrationDB.cpp,
	  code/latte/valuation/Perturbation.cpp,
	  code/latte/valuation/PolytopeValuation.cpp,
	  code/latte/valuation/testCorrectnessAndBenchmark/VolumeAndIntegrationTests.cpp,
	  code/latte/valuation/testCorrectnessAndBenchmark/VolumeAndIntegrationTests.h,
	  code/latte/valuation/testCorrectnessAndBenchmark/buildDatabaseRandomPolytopesDriver.cpp,
	  code/latte/valuation/testCorrectnessAndBenchmark/runIntegrationTestFromDatabaseDriver.cpp,
	  code/latte/valuation/testCorrectnessAndBenchmark/testBuildPolytopes.cpp:
	  moved testBuildPolytopes.cpp and
	  BuildDatabaseRandoPolytopesDriver.cpp from buildPolytopes to
	  valuation/testCorrectnessAndBenchmakr/
	  
	  Perturbation.cpp: small formatting issues
	  
	  PolytopeValuation.cpp:added two cout's
	  
	  VolumeAndIntegrationTests.*: removed the polynomial building and
	  placed it buildPOlytopes.
	  
	  buildPolytoeps/BuildPolytope.*: added functions for finding dual
	  information
	  
	  The UI for the runIntegrationTestsFromDatabaseDriver and
	  buildDatabaseRandomPOlytopesDriver need more work, but I just
	  typed something up to make sure everything was working.

2011-01-05 06:46  Brandon Dutra <bedutra@ucdavis.edu>

	* code/latte/sqlite, code/latte/sqlite/IntegrationDB.cpp,
	  code/latte/sqlite/IntegrationDB.h,
	  code/latte/sqlite/SqliteDB.cpp, code/latte/sqlite/SqliteDB.h,
	  code/latte/sqlite/select.sqlite: Not done yet, but just wanted to
	  save my work.
	  This folder contains sqlite db wrapper classes.

2010-11-26 20:04  Brandon Dutra <bedutra@ucdavis.edu>

	* code/latte/Makefile.am,
	  code/latte/buildPolytopes/BuildRandomPolytope.cpp,
	  code/latte/buildPolytopes/buildDatabaseRandomPolytopesDriver.cpp,
	  code/latte/valuation/Perturbation.cpp,
	  code/latte/valuation/testCorrectnessAndBenchmark/VolumeAndIntegrationTests.cpp,
	  code/latte/valuation/testCorrectnessAndBenchmark/VolumeAndIntegrationTests.h,
	  code/latte/valuation/testCorrectnessAndBenchmark/integratePolynomialForPaperDriver.cpp:
	  Perturbation: print out the number of times we did not correctly
	  find a perturbation.
	  
	  added exe to integrate all the .latte files in a directory and
	  save their results to a log file. Later will will have to parse
	  this log file and do stats.
	  
	  buildDatabaseRandomPolytopesDriver: you do not have to add a / at
	  the end of the directory names now. Also we are making random
	  polytopes with 2*dim +1 points currently.

2010-11-26 20:04  Brandon Dutra <bedutra@ucdavis.edu>

	* code/latte/Makefile.am,
	  code/latte/buildPolytopes/BuildRandomPolytope.cpp,
	  code/latte/buildPolytopes/buildDatabaseRandomPolytopesDriver.cpp,
	  code/latte/valuation/Perturbation.cpp,
	  code/latte/valuation/testCorrectnessAndBenchmark/VolumeAndIntegrationTests.cpp,
	  code/latte/valuation/testCorrectnessAndBenchmark/VolumeAndIntegrationTests.h,
	  code/latte/valuation/testCorrectnessAndBenchmark/integratePolynomialForPaperDriver.cpp:
	  Perturbation: print out the number of times we did not correctly
	  find a perturbation.
	  
	  added exe to integrate all the .latte files in a directory and
	  save their results to a log file. Later will will have to parse
	  this log file and do stats.
	  
	  buildDatabaseRandomPolytopesDriver: you do not have to add a / at
	  the end of the directory names now. Also we are making random
	  polytopes with 2*dim +1 points currently.

2010-11-26 18:52  Brandon Dutra <bedutra@ucdavis.edu>

	* EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim15,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim20,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim30,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim40,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim50:
	  added empty directories, and deleted all the polytopes I uploaded
	  the otherday because I am not happy with how I am making these
	  polytopes. The Lawrence method does really poorly on these random
	  polytopes!

2010-11-25 20:55  Brandon Dutra <bedutra@ucdavis.edu>

	* EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim10/rp_10_1.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim10/rp_10_1.polymake,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim10/rp_10_10.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim10/rp_10_10.polymake,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim10/rp_10_11.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim10/rp_10_11.polymake,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim10/rp_10_12.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim10/rp_10_12.polymake,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim10/rp_10_13.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim10/rp_10_13.polymake,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim10/rp_10_14.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim10/rp_10_14.polymake,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim10/rp_10_15.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim10/rp_10_15.polymake,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim10/rp_10_16.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim10/rp_10_16.polymake,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim10/rp_10_17.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim10/rp_10_17.polymake,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim10/rp_10_18.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim10/rp_10_18.polymake,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim10/rp_10_19.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim10/rp_10_19.polymake,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim10/rp_10_2.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim10/rp_10_2.polymake,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim10/rp_10_20.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim10/rp_10_20.polymake,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim10/rp_10_21.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim10/rp_10_21.polymake,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim10/rp_10_22.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim10/rp_10_22.polymake,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim10/rp_10_23.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim10/rp_10_23.polymake,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim10/rp_10_24.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim10/rp_10_24.polymake,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim10/rp_10_25.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim10/rp_10_25.polymake,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim10/rp_10_26.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim10/rp_10_26.polymake,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim10/rp_10_27.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim10/rp_10_27.polymake,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim10/rp_10_28.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim10/rp_10_28.polymake,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim10/rp_10_29.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim10/rp_10_29.polymake,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim10/rp_10_3.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim10/rp_10_3.polymake,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim10/rp_10_30.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim10/rp_10_30.polymake,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim10/rp_10_31.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim10/rp_10_31.polymake,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim10/rp_10_32.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim10/rp_10_32.polymake,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim10/rp_10_33.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim10/rp_10_33.polymake,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim10/rp_10_34.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim10/rp_10_34.polymake,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim10/rp_10_35.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim10/rp_10_35.polymake,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim10/rp_10_36.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim10/rp_10_36.polymake,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim10/rp_10_37.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim10/rp_10_37.polymake,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim10/rp_10_38.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim10/rp_10_38.polymake,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim10/rp_10_39.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim10/rp_10_39.polymake,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim10/rp_10_4.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim10/rp_10_4.polymake,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim10/rp_10_40.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim10/rp_10_40.polymake,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim10/rp_10_41.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim10/rp_10_41.polymake,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim10/rp_10_42.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim10/rp_10_42.polymake,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim10/rp_10_43.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim10/rp_10_43.polymake,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim10/rp_10_44.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim10/rp_10_44.polymake,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim10/rp_10_45.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim10/rp_10_45.polymake,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim10/rp_10_46.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim10/rp_10_46.polymake,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim10/rp_10_47.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim10/rp_10_47.polymake,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim10/rp_10_48.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim10/rp_10_48.polymake,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim10/rp_10_49.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim10/rp_10_49.polymake,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim10/rp_10_5.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim10/rp_10_5.polymake,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim10/rp_10_50.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim10/rp_10_50.polymake,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim10/rp_10_6.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim10/rp_10_6.polymake,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim10/rp_10_7.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim10/rp_10_7.polymake,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim10/rp_10_8.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim10/rp_10_8.polymake,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim10/rp_10_9.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim10/rp_10_9.polymake,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim2/rp_2_1.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim2/rp_2_10.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim2/rp_2_11.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim2/rp_2_12.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim2/rp_2_13.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim2/rp_2_14.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim2/rp_2_15.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim2/rp_2_16.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim2/rp_2_17.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim2/rp_2_18.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim2/rp_2_19.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim2/rp_2_2.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim2/rp_2_20.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim2/rp_2_21.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim2/rp_2_22.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim2/rp_2_23.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim2/rp_2_24.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim2/rp_2_25.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim2/rp_2_26.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim2/rp_2_27.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim2/rp_2_28.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim2/rp_2_29.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim2/rp_2_3.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim2/rp_2_30.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim2/rp_2_31.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim2/rp_2_32.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim2/rp_2_33.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim2/rp_2_34.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim2/rp_2_35.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim2/rp_2_36.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim2/rp_2_37.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim2/rp_2_38.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim2/rp_2_39.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim2/rp_2_4.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim2/rp_2_40.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim2/rp_2_41.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim2/rp_2_42.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim2/rp_2_43.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim2/rp_2_44.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim2/rp_2_45.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim2/rp_2_46.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim2/rp_2_47.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim2/rp_2_48.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim2/rp_2_49.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim2/rp_2_5.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim2/rp_2_50.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim2/rp_2_6.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim2/rp_2_7.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim2/rp_2_8.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim2/rp_2_9.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim3/rp_3_1.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim3/rp_3_10.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim3/rp_3_11.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim3/rp_3_12.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim3/rp_3_13.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim3/rp_3_14.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim3/rp_3_15.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim3/rp_3_16.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim3/rp_3_17.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim3/rp_3_18.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim3/rp_3_19.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim3/rp_3_2.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim3/rp_3_20.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim3/rp_3_21.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim3/rp_3_22.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim3/rp_3_23.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim3/rp_3_24.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim3/rp_3_25.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim3/rp_3_26.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim3/rp_3_27.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim3/rp_3_28.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim3/rp_3_29.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim3/rp_3_3.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim3/rp_3_30.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim3/rp_3_31.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim3/rp_3_32.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim3/rp_3_33.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim3/rp_3_34.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim3/rp_3_35.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim3/rp_3_36.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim3/rp_3_37.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim3/rp_3_38.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim3/rp_3_39.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim3/rp_3_4.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim3/rp_3_40.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim3/rp_3_41.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim3/rp_3_42.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim3/rp_3_43.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim3/rp_3_44.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim3/rp_3_45.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim3/rp_3_46.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim3/rp_3_47.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim3/rp_3_48.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim3/rp_3_49.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim3/rp_3_5.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim3/rp_3_50.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim3/rp_3_6.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim3/rp_3_7.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim3/rp_3_8.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim3/rp_3_9.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim4/rp_4_1.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim4/rp_4_10.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim4/rp_4_11.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim4/rp_4_12.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim4/rp_4_13.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim4/rp_4_14.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim4/rp_4_15.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim4/rp_4_16.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim4/rp_4_17.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim4/rp_4_18.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim4/rp_4_19.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim4/rp_4_2.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim4/rp_4_20.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim4/rp_4_21.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim4/rp_4_22.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim4/rp_4_23.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim4/rp_4_24.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim4/rp_4_25.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim4/rp_4_26.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim4/rp_4_27.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim4/rp_4_28.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim4/rp_4_29.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim4/rp_4_3.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim4/rp_4_30.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim4/rp_4_31.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim4/rp_4_32.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim4/rp_4_33.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim4/rp_4_34.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim4/rp_4_35.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim4/rp_4_36.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim4/rp_4_37.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim4/rp_4_38.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim4/rp_4_39.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim4/rp_4_4.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim4/rp_4_40.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim4/rp_4_41.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim4/rp_4_42.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim4/rp_4_43.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim4/rp_4_44.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim4/rp_4_45.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim4/rp_4_46.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim4/rp_4_47.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim4/rp_4_48.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim4/rp_4_49.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim4/rp_4_5.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim4/rp_4_50.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim4/rp_4_6.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim4/rp_4_7.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim4/rp_4_8.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim4/rp_4_9.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim5/rp_5_1.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim5/rp_5_10.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim5/rp_5_11.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim5/rp_5_12.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim5/rp_5_13.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim5/rp_5_14.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim5/rp_5_15.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim5/rp_5_16.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim5/rp_5_17.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim5/rp_5_18.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim5/rp_5_19.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim5/rp_5_2.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim5/rp_5_20.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim5/rp_5_21.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim5/rp_5_22.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim5/rp_5_23.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim5/rp_5_24.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim5/rp_5_25.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim5/rp_5_26.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim5/rp_5_27.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim5/rp_5_28.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim5/rp_5_29.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim5/rp_5_3.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim5/rp_5_30.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim5/rp_5_31.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim5/rp_5_32.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim5/rp_5_33.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim5/rp_5_34.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim5/rp_5_35.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim5/rp_5_36.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim5/rp_5_37.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim5/rp_5_38.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim5/rp_5_39.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim5/rp_5_4.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim5/rp_5_40.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim5/rp_5_41.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim5/rp_5_42.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim5/rp_5_43.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim5/rp_5_44.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim5/rp_5_45.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim5/rp_5_46.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim5/rp_5_47.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim5/rp_5_48.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim5/rp_5_49.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim5/rp_5_5.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim5/rp_5_50.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim5/rp_5_6.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim5/rp_5_7.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim5/rp_5_8.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim5/rp_5_9.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim6/rp_6_1.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim6/rp_6_10.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim6/rp_6_11.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim6/rp_6_12.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim6/rp_6_13.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim6/rp_6_14.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim6/rp_6_15.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim6/rp_6_16.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim6/rp_6_17.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim6/rp_6_18.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim6/rp_6_19.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim6/rp_6_2.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim6/rp_6_20.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim6/rp_6_21.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim6/rp_6_22.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim6/rp_6_23.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim6/rp_6_24.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim6/rp_6_25.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim6/rp_6_26.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim6/rp_6_27.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim6/rp_6_28.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim6/rp_6_29.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim6/rp_6_3.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim6/rp_6_30.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim6/rp_6_31.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim6/rp_6_32.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim6/rp_6_33.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim6/rp_6_34.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim6/rp_6_35.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim6/rp_6_36.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim6/rp_6_37.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim6/rp_6_38.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim6/rp_6_39.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim6/rp_6_4.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim6/rp_6_40.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim6/rp_6_41.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim6/rp_6_42.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim6/rp_6_43.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim6/rp_6_44.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim6/rp_6_45.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim6/rp_6_46.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim6/rp_6_47.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim6/rp_6_48.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim6/rp_6_49.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim6/rp_6_5.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim6/rp_6_50.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim6/rp_6_6.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim6/rp_6_7.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim6/rp_6_8.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim6/rp_6_9.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim7/rp_7_1.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim7/rp_7_10.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim7/rp_7_11.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim7/rp_7_12.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim7/rp_7_13.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim7/rp_7_14.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim7/rp_7_15.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim7/rp_7_16.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim7/rp_7_17.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim7/rp_7_18.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim7/rp_7_19.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim7/rp_7_2.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim7/rp_7_20.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim7/rp_7_21.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim7/rp_7_22.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim7/rp_7_23.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim7/rp_7_24.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim7/rp_7_25.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim7/rp_7_26.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim7/rp_7_27.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim7/rp_7_28.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim7/rp_7_29.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim7/rp_7_3.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim7/rp_7_30.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim7/rp_7_31.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim7/rp_7_32.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim7/rp_7_33.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim7/rp_7_34.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim7/rp_7_35.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim7/rp_7_36.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim7/rp_7_37.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim7/rp_7_38.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim7/rp_7_39.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim7/rp_7_4.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim7/rp_7_40.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim7/rp_7_41.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim7/rp_7_42.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim7/rp_7_43.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim7/rp_7_44.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim7/rp_7_45.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim7/rp_7_46.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim7/rp_7_47.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim7/rp_7_48.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim7/rp_7_49.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim7/rp_7_5.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim7/rp_7_50.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim7/rp_7_6.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim7/rp_7_7.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim7/rp_7_8.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim7/rp_7_9.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim8/rp_8_1.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim8/rp_8_10.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim8/rp_8_11.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim8/rp_8_12.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim8/rp_8_13.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim8/rp_8_14.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim8/rp_8_15.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim8/rp_8_16.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim8/rp_8_17.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim8/rp_8_18.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim8/rp_8_19.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim8/rp_8_2.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim8/rp_8_20.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim8/rp_8_21.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim8/rp_8_22.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim8/rp_8_23.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim8/rp_8_24.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim8/rp_8_25.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim8/rp_8_26.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim8/rp_8_27.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim8/rp_8_28.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim8/rp_8_29.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim8/rp_8_3.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim8/rp_8_30.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim8/rp_8_31.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim8/rp_8_32.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim8/rp_8_33.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim8/rp_8_34.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim8/rp_8_35.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim8/rp_8_36.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim8/rp_8_37.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim8/rp_8_38.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim8/rp_8_39.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim8/rp_8_4.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim8/rp_8_40.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim8/rp_8_41.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim8/rp_8_42.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim8/rp_8_43.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim8/rp_8_44.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim8/rp_8_45.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim8/rp_8_46.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim8/rp_8_47.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim8/rp_8_48.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim8/rp_8_49.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim8/rp_8_5.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim8/rp_8_50.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim8/rp_8_6.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim8/rp_8_7.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim8/rp_8_8.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim8/rp_8_9.hrep.latte:
	  Deleted those polytopes I just uploaded because they are way to
	  large! I need to limit the number of points I'm using in finding
	  the random polytopes.
	  
	  Sorry about this.

2010-11-25 18:55  Brandon Dutra <bedutra@ucdavis.edu>

	* EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim10,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim10/rp_10_1.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim10/rp_10_1.polymake,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim10/rp_10_10.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim10/rp_10_10.polymake,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim10/rp_10_11.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim10/rp_10_11.polymake,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim10/rp_10_12.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim10/rp_10_12.polymake,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim10/rp_10_13.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim10/rp_10_13.polymake,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim10/rp_10_14.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim10/rp_10_14.polymake,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim10/rp_10_15.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim10/rp_10_15.polymake,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim10/rp_10_16.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim10/rp_10_16.polymake,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim10/rp_10_17.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim10/rp_10_17.polymake,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim10/rp_10_18.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim10/rp_10_18.polymake,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim10/rp_10_19.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim10/rp_10_19.polymake,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim10/rp_10_2.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim10/rp_10_2.polymake,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim10/rp_10_20.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim10/rp_10_20.polymake,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim10/rp_10_21.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim10/rp_10_21.polymake,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim10/rp_10_22.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim10/rp_10_22.polymake,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim10/rp_10_23.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim10/rp_10_23.polymake,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim10/rp_10_24.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim10/rp_10_24.polymake,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim10/rp_10_25.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim10/rp_10_25.polymake,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim10/rp_10_26.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim10/rp_10_26.polymake,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim10/rp_10_27.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim10/rp_10_27.polymake,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim10/rp_10_28.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim10/rp_10_28.polymake,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim10/rp_10_29.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim10/rp_10_29.polymake,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim10/rp_10_3.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim10/rp_10_3.polymake,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim10/rp_10_30.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim10/rp_10_30.polymake,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim10/rp_10_31.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim10/rp_10_31.polymake,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim10/rp_10_32.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim10/rp_10_32.polymake,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim10/rp_10_33.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim10/rp_10_33.polymake,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim10/rp_10_34.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim10/rp_10_34.polymake,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim10/rp_10_35.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim10/rp_10_35.polymake,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim10/rp_10_36.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim10/rp_10_36.polymake,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim10/rp_10_37.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim10/rp_10_37.polymake,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim10/rp_10_38.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim10/rp_10_38.polymake,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim10/rp_10_39.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim10/rp_10_39.polymake,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim10/rp_10_4.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim10/rp_10_4.polymake,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim10/rp_10_40.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim10/rp_10_40.polymake,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim10/rp_10_41.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim10/rp_10_41.polymake,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim10/rp_10_42.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim10/rp_10_42.polymake,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim10/rp_10_43.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim10/rp_10_43.polymake,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim10/rp_10_44.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim10/rp_10_44.polymake,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim10/rp_10_45.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim10/rp_10_45.polymake,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim10/rp_10_46.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim10/rp_10_46.polymake,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim10/rp_10_47.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim10/rp_10_47.polymake,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim10/rp_10_48.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim10/rp_10_48.polymake,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim10/rp_10_49.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim10/rp_10_49.polymake,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim10/rp_10_5.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim10/rp_10_5.polymake,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim10/rp_10_50.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim10/rp_10_50.polymake,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim10/rp_10_6.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim10/rp_10_6.polymake,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim10/rp_10_7.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim10/rp_10_7.polymake,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim10/rp_10_8.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim10/rp_10_8.polymake,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim10/rp_10_9.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim10/rp_10_9.polymake,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim2/rp_2_1.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim2/rp_2_10.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim2/rp_2_11.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim2/rp_2_12.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim2/rp_2_13.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim2/rp_2_14.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim2/rp_2_15.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim2/rp_2_16.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim2/rp_2_17.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim2/rp_2_18.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim2/rp_2_19.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim2/rp_2_2.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim2/rp_2_20.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim2/rp_2_21.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim2/rp_2_22.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim2/rp_2_23.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim2/rp_2_24.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim2/rp_2_25.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim2/rp_2_26.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim2/rp_2_27.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim2/rp_2_28.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim2/rp_2_29.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim2/rp_2_3.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim2/rp_2_30.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim2/rp_2_31.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim2/rp_2_32.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim2/rp_2_33.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim2/rp_2_34.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim2/rp_2_35.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim2/rp_2_36.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim2/rp_2_37.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim2/rp_2_38.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim2/rp_2_39.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim2/rp_2_4.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim2/rp_2_40.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim2/rp_2_41.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim2/rp_2_42.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim2/rp_2_43.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim2/rp_2_44.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim2/rp_2_45.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim2/rp_2_46.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim2/rp_2_47.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim2/rp_2_48.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim2/rp_2_49.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim2/rp_2_5.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim2/rp_2_50.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim2/rp_2_6.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim2/rp_2_7.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim2/rp_2_8.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim2/rp_2_9.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim3/rp_3_1.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim3/rp_3_10.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim3/rp_3_11.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim3/rp_3_12.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim3/rp_3_13.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim3/rp_3_14.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim3/rp_3_15.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim3/rp_3_16.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim3/rp_3_17.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim3/rp_3_18.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim3/rp_3_19.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim3/rp_3_2.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim3/rp_3_20.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim3/rp_3_21.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim3/rp_3_22.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim3/rp_3_23.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim3/rp_3_24.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim3/rp_3_25.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim3/rp_3_26.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim3/rp_3_27.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim3/rp_3_28.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim3/rp_3_29.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim3/rp_3_3.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim3/rp_3_30.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim3/rp_3_31.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim3/rp_3_32.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim3/rp_3_33.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim3/rp_3_34.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim3/rp_3_35.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim3/rp_3_36.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim3/rp_3_37.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim3/rp_3_38.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim3/rp_3_39.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim3/rp_3_4.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim3/rp_3_40.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim3/rp_3_41.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim3/rp_3_42.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim3/rp_3_43.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim3/rp_3_44.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim3/rp_3_45.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim3/rp_3_46.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim3/rp_3_47.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim3/rp_3_48.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim3/rp_3_49.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim3/rp_3_5.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim3/rp_3_50.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim3/rp_3_6.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim3/rp_3_7.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim3/rp_3_8.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim3/rp_3_9.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim4/rp_4_1.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim4/rp_4_10.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim4/rp_4_11.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim4/rp_4_12.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim4/rp_4_13.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim4/rp_4_14.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim4/rp_4_15.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim4/rp_4_16.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim4/rp_4_17.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim4/rp_4_18.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim4/rp_4_19.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim4/rp_4_2.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim4/rp_4_20.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim4/rp_4_21.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim4/rp_4_22.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim4/rp_4_23.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim4/rp_4_24.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim4/rp_4_25.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim4/rp_4_26.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim4/rp_4_27.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim4/rp_4_28.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim4/rp_4_29.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim4/rp_4_3.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim4/rp_4_30.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim4/rp_4_31.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim4/rp_4_32.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim4/rp_4_33.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim4/rp_4_34.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim4/rp_4_35.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim4/rp_4_36.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim4/rp_4_37.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim4/rp_4_38.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim4/rp_4_39.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim4/rp_4_4.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim4/rp_4_40.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim4/rp_4_41.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim4/rp_4_42.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim4/rp_4_43.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim4/rp_4_44.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim4/rp_4_45.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim4/rp_4_46.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim4/rp_4_47.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim4/rp_4_48.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim4/rp_4_49.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim4/rp_4_5.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim4/rp_4_50.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim4/rp_4_6.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim4/rp_4_7.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim4/rp_4_8.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim4/rp_4_9.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim5/rp_5_1.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim5/rp_5_10.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim5/rp_5_11.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim5/rp_5_12.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim5/rp_5_13.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim5/rp_5_14.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim5/rp_5_15.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim5/rp_5_16.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim5/rp_5_17.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim5/rp_5_18.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim5/rp_5_19.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim5/rp_5_2.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim5/rp_5_20.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim5/rp_5_21.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim5/rp_5_22.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim5/rp_5_23.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim5/rp_5_24.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim5/rp_5_25.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim5/rp_5_26.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim5/rp_5_27.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim5/rp_5_28.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim5/rp_5_29.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim5/rp_5_3.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim5/rp_5_30.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim5/rp_5_31.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim5/rp_5_32.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim5/rp_5_33.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim5/rp_5_34.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim5/rp_5_35.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim5/rp_5_36.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim5/rp_5_37.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim5/rp_5_38.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim5/rp_5_39.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim5/rp_5_4.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim5/rp_5_40.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim5/rp_5_41.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim5/rp_5_42.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim5/rp_5_43.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim5/rp_5_44.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim5/rp_5_45.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim5/rp_5_46.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim5/rp_5_47.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim5/rp_5_48.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim5/rp_5_49.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim5/rp_5_5.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim5/rp_5_50.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim5/rp_5_6.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim5/rp_5_7.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim5/rp_5_8.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim5/rp_5_9.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim6/rp_6_1.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim6/rp_6_10.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim6/rp_6_11.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim6/rp_6_12.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim6/rp_6_13.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim6/rp_6_14.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim6/rp_6_15.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim6/rp_6_16.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim6/rp_6_17.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim6/rp_6_18.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim6/rp_6_19.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim6/rp_6_2.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim6/rp_6_20.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim6/rp_6_21.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim6/rp_6_22.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim6/rp_6_23.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim6/rp_6_24.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim6/rp_6_25.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim6/rp_6_26.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim6/rp_6_27.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim6/rp_6_28.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim6/rp_6_29.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim6/rp_6_3.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim6/rp_6_30.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim6/rp_6_31.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim6/rp_6_32.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim6/rp_6_33.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim6/rp_6_34.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim6/rp_6_35.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim6/rp_6_36.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim6/rp_6_37.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim6/rp_6_38.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim6/rp_6_39.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim6/rp_6_4.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim6/rp_6_40.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim6/rp_6_41.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim6/rp_6_42.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim6/rp_6_43.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim6/rp_6_44.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim6/rp_6_45.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim6/rp_6_46.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim6/rp_6_47.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim6/rp_6_48.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim6/rp_6_49.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim6/rp_6_5.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim6/rp_6_50.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim6/rp_6_6.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim6/rp_6_7.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim6/rp_6_8.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim6/rp_6_9.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim7/rp_7_1.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim7/rp_7_10.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim7/rp_7_11.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim7/rp_7_12.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim7/rp_7_13.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim7/rp_7_14.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim7/rp_7_15.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim7/rp_7_16.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim7/rp_7_17.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim7/rp_7_18.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim7/rp_7_19.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim7/rp_7_2.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim7/rp_7_20.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim7/rp_7_21.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim7/rp_7_22.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim7/rp_7_23.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim7/rp_7_24.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim7/rp_7_25.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim7/rp_7_26.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim7/rp_7_27.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim7/rp_7_28.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim7/rp_7_29.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim7/rp_7_3.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim7/rp_7_30.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim7/rp_7_31.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim7/rp_7_32.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim7/rp_7_33.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim7/rp_7_34.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim7/rp_7_35.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim7/rp_7_36.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim7/rp_7_37.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim7/rp_7_38.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim7/rp_7_39.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim7/rp_7_4.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim7/rp_7_40.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim7/rp_7_41.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim7/rp_7_42.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim7/rp_7_43.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim7/rp_7_44.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim7/rp_7_45.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim7/rp_7_46.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim7/rp_7_47.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim7/rp_7_48.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim7/rp_7_49.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim7/rp_7_5.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim7/rp_7_50.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim7/rp_7_6.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim7/rp_7_7.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim7/rp_7_8.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim7/rp_7_9.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim8/rp_8_1.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim8/rp_8_10.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim8/rp_8_11.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim8/rp_8_12.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim8/rp_8_13.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim8/rp_8_14.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim8/rp_8_15.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim8/rp_8_16.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim8/rp_8_17.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim8/rp_8_18.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim8/rp_8_19.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim8/rp_8_2.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim8/rp_8_20.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim8/rp_8_21.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim8/rp_8_22.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim8/rp_8_23.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim8/rp_8_24.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim8/rp_8_25.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim8/rp_8_26.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim8/rp_8_27.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim8/rp_8_28.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim8/rp_8_29.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim8/rp_8_3.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim8/rp_8_30.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim8/rp_8_31.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim8/rp_8_32.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim8/rp_8_33.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim8/rp_8_34.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim8/rp_8_35.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim8/rp_8_36.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim8/rp_8_37.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim8/rp_8_38.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim8/rp_8_39.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim8/rp_8_4.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim8/rp_8_40.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim8/rp_8_41.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim8/rp_8_42.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim8/rp_8_43.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim8/rp_8_44.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim8/rp_8_45.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim8/rp_8_46.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim8/rp_8_47.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim8/rp_8_48.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim8/rp_8_49.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim8/rp_8_5.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim8/rp_8_50.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim8/rp_8_6.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim8/rp_8_7.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim8/rp_8_8.hrep.latte,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim8/rp_8_9.hrep.latte:
	  Added a much of polytpes for the integration testing. Still
	  working on the higher dimentions.

2010-11-25 15:50  Brandon Dutra <bedutra@ucdavis.edu>

	* EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim2,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim3,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim4,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim5,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim6,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim7,
	  EXAMPLES/volumeIntegrationPaperComparison/randomPolytopes/dim8:
	  made new directory to hold all the polytopes for the new paper

2010-11-25 15:45  Brandon Dutra <bedutra@ucdavis.edu>

	* code/latte/buildPolytopes/BuildPolytope.cpp,
	  code/latte/buildPolytopes/BuildRandomPolytope.cpp:
	  BuildPolytope/BUIldRandomPolytope.cpp: no longer printing out the
	  polymake file.

2010-11-24 21:29  Brandon Dutra <bedutra@ucdavis.edu>

	* code/latte/Makefile.am,
	  code/latte/valuation/testCorrectnessAndBenchmark/VolumeAndIntegrationTests.cpp:
	  valuation/test.../VolumeAndIntegrationTests.cpp: updated because
	  I changed the random polytope building classes.
	  
	  makefile: added new programs for making the database of random
	  polytopes.

2010-11-24 21:27  Brandon Dutra <bedutra@ucdavis.edu>

	* code/latte/buildPolytopes/BuildGraphPolytope.cpp,
	  code/latte/buildPolytopes/BuildGraphPolytope.h,
	  code/latte/buildPolytopes/BuildHypersimplexEdgePolytope.cpp,
	  code/latte/buildPolytopes/BuildHypersimplexEdgePolytope.h,
	  code/latte/buildPolytopes/BuildPolytope.cpp,
	  code/latte/buildPolytopes/BuildPolytope.h,
	  code/latte/buildPolytopes/BuildRandomPolytope.cpp,
	  code/latte/buildPolytopes/BuildRandomPolytope.h,
	  code/latte/buildPolytopes/Driver.cpp,
	  code/latte/buildPolytopes/GraphMaker.cpp,
	  code/latte/buildPolytopes/buildDatabaseRandomPolytopesDriver.cpp,
	  code/latte/buildPolytopes/testBuildPolytopes.cpp: added
	  BuildPolytope.*/base class to all polytope building classes.
	  
	  updated the other classes to reuse the function in the base
	  class.
	  
	  buildDatabaseRandomPolytopesDriver.cpp: this makes many random
	  polytopes by taking the convex hull of 2*dim many points in
	  R^(dim).
	  
	  testBuildPolytopes.cpp: this should be deleted at some point in
	  the future.

2010-11-20 02:25  Brandon Dutra <bedutra@ucdavis.edu>

	* code/latte/valuation/integrateHyperrectangle.mpl,
	  code/latte/valuation/integrateHyperrectangleTest.sh,
	  code/latte/valuation/testCorrectnessAndBenchmark,
	  code/latte/valuation/testCorrectnessAndBenchmark/VolumeAndIntegrationTests.cpp,
	  code/latte/valuation/testCorrectnessAndBenchmark/VolumeAndIntegrationTests.h,
	  code/latte/valuation/testCorrectnessAndBenchmark/integrateHyperrectangle.mpl,
	  code/latte/valuation/testCorrectnessAndBenchmark/integrateHyperrectangleTest.sh,
	  code/latte/valuation/testCorrectnessAndBenchmark/testIntegrationHyperrectanglesDriver.cpp,
	  code/latte/valuation/testCorrectnessAndBenchmark/testVolumeForSLDriver.cpp,
	  code/latte/valuation/testCorrectnessAndBenchmark/testVolumeHypersimplexDriver.cpp,
	  code/latte/valuation/testCorrectnessAndBenchmark/valuationTestsLib.mpl,
	  code/latte/valuation/testIntegrationHyperrectangles.cpp,
	  code/latte/valuation/valuationTestsLib.mpl: valuation:
	  +++++++++
	  deleted the testing functions in valuation.
	  
	  added/moved the testing functions to
	  valuation/testCorrectnessAndBenchmark
	  
	  
	  Files that end in "Driver.cpp" contain int main()'s.

2010-11-20 02:18  Brandon Dutra <bedutra@ucdavis.edu>

	* code/latte/Makefile.am, code/latte/buildPolytopes,
	  code/latte/testEhrhart, code/latte/valuation/Driver.cpp,
	  code/latte/valuation/valuation.cpp,
	  code/latte/valuation/valuation.h: renamed the testEhrhart folder
	  to buildPolytopes. Will need to work on making the interface to
	  the polytope building classes nicer.
	  
	  moved the testing functions in valuation to
	  valuation/testCorrectnessAndBenchmark. We sould place the
	  functions that we will write for the paper in this folder.
	  
	  valuation/valuation.*, valuation/Driver.cpp: removed the volume
	  testing functions and placed them in the
	  testCorrestnessAndBenchmark folder.
	  
	  Cleaned up the makefile to reflect the above changes.

2010-11-20 02:12  Brandon Dutra <bedutra@ucdavis.edu>

	* code/latte/testingSLandTopEhrhart/TopEhrhart/BirkhoffGenerator.mpl,
	  code/latte/testingSLandTopEhrhart/TopEhrhart/testingTopEhrhart.mpl,
	  code/latte/testingSLandTopEhrhart/TopEhrhart/testingTopEhrhartBirkhoffSimplex.mpl:
	  testingTopEhrhartBirkhoffSimplex.mpl: makes many birkoff simplex
	  and asks the TopEhrhart functions to find the top-3 coeffs. It
	  then checks to see if any are negative. The non-projected simplex
	  is saved in a maple file as a vector and I refer to this as the
	  simplex "database" of birkhoff polytopes.
	  
	  testingTopEhrhart.mpl: added more comments.
	  
	  BirkhoffGenerator: returns the full-dimention and non-projected
	  simplex.

2010-11-18 07:16  Brandon Dutra <bedutra@ucdavis.edu>

	* code/latte/integration/residue.cpp,
	  code/latte/valuation/Perturbation.cpp,
	  code/latte/valuation/Perturbation.h,
	  code/latte/valuation/PolytopeValuation.cpp,
	  code/latte/valuation/PolytopeValuation.h,
	  code/latte/valuation/valuation.cpp: integration/residue.cpp,
	  valuation/*: added comments for the lawrence-style integration.
	  Did not remove commented out debugging statements yet. I will do
	  this we have a script that tests non-simple polytopes.

2010-11-13 21:09  Brandon Dutra <bedutra@ucdavis.edu>

	* code/latte/Polyhedron.h, code/latte/cone.cpp, code/latte/cone.h,
	  code/latte/integration/newIntegration.cpp,
	  code/latte/integration/newIntegration.h,
	  code/latte/integration/residue.cpp,
	  code/latte/integration/residue.h: part 2 of 2.
	  
	  The rest of the new integration files.
	  
	  cone.*, Polyhedron: added a deep copy to the Polyhedron class and
	  to listCones.
	  
	  what we can/should do next:
	  --add beautiful comments to the new lawrence integration code
	  --write a script to test on more random cases than just
	  hyperrectangles.
	  --remove a bunch of commented-out cout's
	  --add an integration function to the polytope valuation class
	  similar to its volume function
	  --update the Makefile.am: add .h and .cpp files to the lib and
	  remove source lines from the individual bin programs. If you look
	  at the file, you will see what I mean...
	  --remove/move/update the old ehrhart polynomial finding code (I
	  want to keep the shell script because it took us a long time to
	  make, but it might be smarter to look at the polynomials within
	  latte c++ code because it seems the output of count might change
	  and I'm not sure if the script is robust enough. We need to think
	  which way would be better).
	  --this one is connected to the last one: remove all the graph
	  testing in the valuation files and make a new directory and
	  driver just for that. We need to think about designing an
	  interface to the graph making functions so that it can be reused
	  in other places.
	  --the way the Perturbation class works, we could subclass it to
	  allow for other perturbation options (say polynomial vs linear)
	  or for finding the residue using the coeff. based method vs the
	  negative binomial based method.

2010-11-13 20:51  Brandon Dutra <bedutra@ucdavis.edu>

	* code/latte/valuation/Perturbation.cpp,
	  code/latte/valuation/Perturbation.h,
	  code/latte/valuation/PolytopeValuation.cpp,
	  code/latte/valuation/PolytopeValuation.h,
	  code/latte/valuation/testIntegrationHyperrectangles.cpp,
	  code/latte/valuation/valuation.cpp,
	  code/latte/valuation/valuation.h: part 1 of 2.
	  
	  The lawrence style integration seems to work.
	  
	  It passes on magic4x4, 24cell, and hyperrectangles.
	  
	  this commit only updates the valuation files.
	  
	  
	  See the next log for a list of what we need to do now.

2010-11-13 06:56  Brandon Dutra <bedutra@ucdavis.edu>

	* code/latte/Makefile.am,
	  code/latte/integration/newIntegration.cpp,
	  code/latte/integration/residue.cpp,
	  code/latte/integration/residue.h, code/latte/rational.cpp,
	  code/latte/rational.h, code/latte/valuation/Perturbation.cpp,
	  code/latte/valuation/Perturbation.h,
	  code/latte/valuation/PolytopeValuation.cpp:
	  valuation/Perturbation.*: integration via the lawrence style
	  method seems to work.
	  Makefile.am: added Perturbation files to latte's source. We need
	  to clean up the makefile, and I need to remove the graph stuff
	  from the valuation driver and make it into it's own exe.
	  
	  rational.* yet another function added to RationalNTL.
	  
	  integration/residue.*: need to remove the old functions that are
	  incorrect.
	  
	  Also, I need to remove ton's of debug cout's. We need to look
	  into using a real (free) c++ ide.

2010-11-05 07:43  Brandon Dutra <bedutra@ucdavis.edu>

	* code/latte/Makefile.am, code/latte/valuation/Perturbation.cpp,
	  code/latte/valuation/Perturbation.h,
	  code/latte/valuation/PolytopeValuation.cpp:
	  Polytopevaluation.cpp: currently returning zero for lawrence
	  integration because not done yet.
	  Perturbation.*: almost done processing dot products. We try no
	  perturbation, then we try one normal to l, then we just try
	  random ones from adding a random abount to one slot of the
	  vector. We also scale down the perturbation vectors if we can.
	  
	  it should compile!
	  
	  to do:
	  +++++++
	  --'sort' or group the same terms <l+e,r> and update the power
	  terms. I'm thinking we can have the code ignore zero-power terms.
	  --make updateLawrence a friend to the perturbation classes and
	  have it do the additions.
	  --update/make new residue function for finding our new style
	  residues?
	  --think about maybe one day having the option to select different
	  perturbation ideas (say non-linear) (so use virtural functions?)
	  --have fun :)

2010-11-05 01:28  Brandon Dutra <bedutra@ucdavis.edu>

	* code/latte/Makefile.am, code/latte/valuation/Perturbation.cpp,
	  code/latte/valuation/Perturbation.h,
	  code/latte/valuation/PolytopeValuation.cpp: added new class
	  Perturbation for finding the integrations using the
	  lawrence-style theorem.
	  
	  Will not compile. Saving work.

2010-10-29 01:14  Brandon Dutra <bedutra@ucdavis.edu>

	* code/latte/integration/newIntegration.cpp,
	  code/latte/integration/residue.cpp,
	  code/latte/valuation/PolytopeValuation.cpp: Continued to work on
	  the lawrence integration. We think we figured out the problem,
	  but we have not starting working on its fix.

2010-10-26 21:11  Brandon Dutra <bedutra@ucdavis.edu>

	* code/latte/integration/newIntegration.cpp: newIntegration.cpp: 2
	  problems
	  1) When I work out an example by hand, the theorem is not true,
	  or I am making an error, or I do not understand the non-simplex
	  integration theorem.
	  2) We are not calling computeResidue correctly...we are dividing
	  by one too many e's.

2010-10-26 10:12  Brandon Dutra <bedutra@ucdavis.edu>

	* code/latte/integration/newIntegration.cpp: newIntegration.cpp:
	  I"m not sure if the formula is correct. If I do it by hand, I get
	  2/3 for the unit square with 0-1 vertices. This is what our
	  program gives too.

2010-10-25 07:30  Brandon Dutra <bedutra@ucdavis.edu>

	* code/latte/integration/newIntegration.cpp: newIntegration.cpp:
	  fixed why we where off by a sign for simplex cases: we where
	  doing <l, ray directed from vertex>, but we should have done <l,
	  ray directed TO vertex>, where <.,.> is the inner product.
	  
	  Still working on why it does not work fo non-simplex cases, and
	  so the debug cout's are still there.

2010-10-22 01:17  Brandon Dutra <bedutra@ucdavis.edu>

	* code/latte/integration/newIntegration.cpp,
	  code/latte/integration/residue.cpp,
	  code/latte/valuation/valuation.cpp,
	  code/latte/valuation/valuation.h: valuation.*, residue.cpp,
	  newIntegration.cpp: added debugging couts. Our lawrence seems to
	  be working (on simplices) but is off by a sign.
	  I'm commiting this because I do not want to loose my progress.

2010-10-15 20:24  Brandon Dutra <bedutra@ucdavis.edu>

	* code/latte/integration/newIntegration.cpp,
	  code/latte/integration/residue.cpp: residue.cpp,
	  newIntegration.cpp: Fixed the seg fault but still not giving the
	  correct number.

2010-10-15 01:15  Brandon Dutra <bedutra@ucdavis.edu>

	* code/latte/valuation/testIntegrationHyperrectangles.cpp:
	  testIntegrationHyperrectangles.cpp: default is to only run
	  triangulation method...the lawrence does not yet work.

2010-10-15 01:14  Brandon Dutra <bedutra@ucdavis.edu>

	* code/latte/valuation/valuation.cpp,
	  code/latte/valuation/valuation.h: Updated the valuation method.

2010-10-15 00:06  Gregory Pinto <gpinto@math.ucdavis.edu>

	* code/latte/integration/newIntegration.cpp,
	  code/latte/integration/newIntegration.h,
	  code/latte/valuation/PolytopeValuation.cpp,
	  code/latte/valuation/PolytopeValuation.h: updated files for
	  integration using a lawrence=tye formula

2010-10-12 20:44  Brandon Dutra <bedutra@ucdavis.edu>

	* code/latte/testingSLandTopEhrhart/TopEhrhart/BirkhoffGenerator.mpl,
	  code/latte/testingSLandTopEhrhart/TopEhrhart/compareTopEhrhartFunctions.mpl,
	  code/latte/testingSLandTopEhrhart/TopEhrhart/testingTopEhrhartBirkhoffSimplex.mpl,
	  code/latte/testingSLandTopEhrhart/TopEhrhart/testingTopEhrhart_lib.mpl:
	  testingTopEhrhart_lib.mpl: The function that compared v1 and v2
	  top ehrhart functions no longer looks at the time (it turns out
	  that Maple saves recently computed values, and so the same
	  simplex should not be used if you want to compare the times of
	  the v1 and v2 functions). However, the function is usefull if you
	  want to make sure they both give the same answer.
	  
	  compareTopEhrhartFunctions.mpl: Deleted this driver. No longer
	  needed because of what I said above.
	  
	  BirkhoffGenerator.mpl, testingTopEhrhartBirkhoffSimplex.mpl:
	  Added to discuss with Jesus at today's meeting.

2010-10-11 22:11  Jesus De Loera <deloera@math.ucdavis.edu>

	* code/latte/testingSLandTopEhrhart/TopEhrhart/testingTopEhrhart.mpl:
	  directing to independent directory

2010-10-07 23:05  Brandon Dutra <bedutra@ucdavis.edu>

	* code/latte/testingSLandTopEhrhart/TopEhrhart/compareTopEhrhartFunctions.mpl,
	  code/latte/testingSLandTopEhrhart/TopEhrhart/testingTopEhrhart.mpl,
	  code/latte/testingSLandTopEhrhart/TopEhrhart/testingTopEhrhart_lib.mpl:
	  split the testing ehrhart functions to work with the new and
	  older top ehrhart functions.
	  
	  added a script compare the times for the new and old functions on
	  the same simplex...and I found an interesting issue.

2010-10-07 20:23  Brandon Dutra <bedutra@ucdavis.edu>

	* code/latte/testingSLandTopEhrhart/BirkhoffGenerator.mpl,
	  code/latte/testingSLandTopEhrhart/TopEhrhart/BirkhoffGenerator.mpl:
	  BirkhoffGenerator.mpl: I noticed the status was 'A'. I must not
	  have commited when I moved the file to the TopEhrhart directory.

2010-10-06 23:35  Jesus De Loera <deloera@math.ucdavis.edu>

	* code/latte/testingSLandTopEhrhart/TopEhrhart/TopEhrhart_lib.mpl,
	  code/latte/testingSLandTopEhrhart/TopEhrhart/testingTopEhrhart.mpl,
	  code/latte/testingSLandTopEhrhart/TopEhrhart/testingTopEhrhart_lib.mpl:
	  many changes to _lib. I added new code suggested by Michele
	  Vergne
	  and cleaner comments on the code. I will start running
	  experiments.

2010-10-01 01:10  Brandon Dutra <bedutra@ucdavis.edu>

	* code/latte/valuation/PolytopeValuation.cpp,
	  code/latte/valuation/PolytopeValuation.h: PolytopeValuation.*:
	  added more functions to make reuse for the lawrence-type
	  integration method nicer. Started setting up the new method.

2010-09-30 17:05  Brandon Dutra <bedutra@ucdavis.edu>

	* code/latte/testingSLandTopEhrhart/TopEhrhart/testingTopEhrhart.mpl:
	  testingTopEhrhart.mpl: changed table_time_sl_ehrhart to
	  table_time_tpp__ehrhart

2010-09-30 16:59  Brandon Dutra <bedutra@ucdavis.edu>

	* code/latte/testingSLandTopEhrhart/TopEhrhart/testingTopEhrhart.mpl,
	  code/latte/testingSLandTopEhrhart/TopEhrhart/testingTopEhrhart_lib.mpl:
	  updated the function name test_sl_ehrhart to test_top_ehrhart

2010-09-28 07:06  Brandon Dutra <bedutra@ucdavis.edu>

	* code/latte/ehrhart2, code/latte/testEhrhart/Driver.cpp,
	  code/latte/testingSL, code/latte/testingSLandTopEhrhart,
	  code/latte/testingSLandTopEhrhart/BirkhoffGenerator.mpl,
	  code/latte/testingSLandTopEhrhart/SL,
	  code/latte/testingSLandTopEhrhart/SL/Data,
	  code/latte/testingSLandTopEhrhart/SL/Data/tableTimeSLVolume_6_3.txt,
	  code/latte/testingSLandTopEhrhart/SL/SL_lib.mpl,
	  code/latte/testingSLandTopEhrhart/SL/testingSLIntegration.mpl,
	  code/latte/testingSLandTopEhrhart/SL/testingSLVolume.mpl,
	  code/latte/testingSLandTopEhrhart/SL/testingSL_lib.mpl,
	  code/latte/testingSLandTopEhrhart/SL_lib.mpl,
	  code/latte/testingSLandTopEhrhart/TopEhrhart,
	  code/latte/testingSLandTopEhrhart/TopEhrhart/Data,
	  code/latte/testingSLandTopEhrhart/TopEhrhart/Data/tableTimeSLTopEhrhart_dim12_1_38.log,
	  code/latte/testingSLandTopEhrhart/TopEhrhart/Data/tableTimeSLTopEhrhart_dim2-10.average,
	  code/latte/testingSLandTopEhrhart/TopEhrhart/Data/tableTimeSLTopEhrhart_dim2-10.log,
	  code/latte/testingSLandTopEhrhart/TopEhrhart/TopEhrhart_lib.mpl,
	  code/latte/testingSLandTopEhrhart/TopEhrhart/testingTopEhrhart.mpl,
	  code/latte/testingSLandTopEhrhart/TopEhrhart/testingTopEhrhart_lib.mpl,
	  code/latte/testingSLandTopEhrhart/forGregtests.mpl,
	  code/latte/testingSLandTopEhrhart/testSLEhrhart.mpl,
	  code/latte/testingSLandTopEhrhart/testingSLIntegration.mpl,
	  code/latte/testingSLandTopEhrhart/testingSLVolume.mpl,
	  code/latte/testingSLandTopEhrhart/testingSL_lib.mpl,
	  code/latte/testingSLandTopEhrhart/topCoeffProfiling: changed the
	  folder name testingSL to testingSLandTopEhrhart.
	  changed the names of the TopEhrhart functions.
	  added Data folders to keep example runs/test cases.

2010-09-23 22:58  Brandon Dutra <bedutra@ucdavis.edu>

	* code/latte/testingSL/topCoeffProfiling: Minor comment change.

2010-09-23 22:54  Brandon Dutra <bedutra@ucdavis.edu>

	* code/latte/testingSL/testSLEhrhart.mpl,
	  code/latte/testingSL/testingSL_lib.mpl,
	  code/latte/testingSL/topCoeffProfiling: Added an automatic test
	  for the top 3 coef.
	  
	  Running table_time_sl_ehrhart(2, 50, file) will find the average
	  time it takes to find the top 3 ehrhart coeff. with 50 test
	  samples for each dimention between 2 and infinity. When it takes
	  longer than 30min to find the top 3 coeff. of one simplex, the
	  script stops. The final and partial results are saved in a file.

2010-09-23 20:28  Brandon Dutra <bedutra@ucdavis.edu>

	* code/latte/testingSL/forGregtests.mpl,
	  code/latte/testingSL/testSLEhrhart.mpl,
	  code/latte/testingSL/testingSL_lib.mpl,
	  code/latte/testingSL/topCoeffProfiling: updated the top ehrhart
	  fuctions, made them 3-5 times faster!

2010-09-23 18:14  Gregory Pinto <gpinto@math.ucdavis.edu>

	* code/latte/testingSL/forGregtests.mpl,
	  code/latte/testingSL/testSLEhrhart.mpl,
	  code/latte/testingSL/topCoeffProfiling: added the files dealing
	  with testing the SL Ehrhart code

2010-09-23 04:16  Brandon Dutra <bedutra@ucdavis.edu>

	* code/latte/testingSL/testingSLIntegration.mpl,
	  code/latte/testingSL/testingSLVolume.mpl,
	  code/latte/testingSL/testingSL_lib.mpl: testingSLVolume.mpl: 1)
	  compare SL volume with latte's triangulation method or 2)run SL
	  volume on harder test cases (currently, the SL volume can do a
	  dim-20+ simplex in over an hour)
	  
	  testingSL_lib.mpl: fixed an SL volume timing error. Currently
	  passing the time of the SL computation. I should change this to
	  pass the latte time too.
	  
	  testingSLIntegration.mpl: added profiling commands. Again, the
	  lin. alg. is what takes the most abount of time.
	  
	  TO DO:
	  --change how the times are passed back
	  --add more comments before functions
	  --add the 'make random simplex' function to the lib and add an
	  option for rational-simplex generation
	  --add more 'what this script does' comments to the start of the
	  non-lib maple scripts.
	  --It seems I should commit this when I have done more, but I
	  wanted to save my work.

2010-09-11 21:02  Brandon Dutra <bedutra@ucdavis.edu>

	* code/latte/testingSL/BirkhoffGenerator.mpl,
	  code/latte/testingSL/testingSLVolume.mpl,
	  code/latte/testingSL/testingSL_lib.mpl: added
	  BirkhoffGenerator.mpl
	  
	  testingSL_lib: updated the main volume function. Currently, we k
	  tests using latte/old maple, and then do k tests with the SL
	  functions. My goal is to mix the order of which method is used,
	  so that that you do not have to wait for every test before you
	  compair the results!
	  
	  testingSLVolume.mpl: Added profile recording and printing for the
	  SL functons.

2010-09-10 22:28  Brandon Dutra <bedutra@ucdavis.edu>

	* code/gnulib/alloca_.h, code/gnulib/stdbool_.h,
	  code/gnulib/stdlib_.h, code/gnulib/unistd_.h: Add files missing
	  in merge from version_1_4_branch

2010-09-10 21:58  Brandon Dutra <bedutra@ucdavis.edu>

	* code/latte/Makefile.am, code/latte/integration/createLinear.mpl,
	  code/latte/testingSL/testingSLIntegration.mpl,
	  code/latte/testingSL/testingSLVolume.mpl,
	  code/latte/testingSL/testingSL_lib.mpl,
	  code/latte/valuation/valuation.cpp,
	  code/latte/valuation/valuationTestsLib.mpl: updated exe names
	  from namesLikeThis to names-like-this.

2010-09-10 07:14  Brandon Dutra <bedutra@ucdavis.edu>

	* code/latte/testingSL/testingSLIntegration.mpl,
	  code/latte/testingSL/testingSLVolume.mpl,
	  code/latte/testingSL/testingSL_lib.mpl: updated testing of the
	  integration code (SL vs old maple).
	  
	  
	  to do: I found out that the 'make random integer simplex'
	  function is cut-and-pased in a few files. This function should be
	  moved to the integraton lib file.

2010-09-09 22:05  Brandon Dutra <bedutra@ucdavis.edu>

	* code/latte/testingSL/SL_lib.mpl,
	  code/latte/testingSL/testingSLIntegration.mpl,
	  code/latte/testingSL/testingSLVolume.mpl,
	  code/latte/testingSL/testingSL_lib.mpl: added testing of SL maple
	  scripts for volume.

2010-09-09 01:05  Brandon Dutra <bedutra@ucdavis.edu>

	* code/latte/testingSL, code/latte/testingSL/SL_lib.mpl,
	  code/latte/testingSL/testingSL_lib.mpl: adding testing scrips for
	  SL functions.

2010-09-08 22:46  Brandon Dutra <bedutra@ucdavis.edu>

	* ., EXAMPLES/aimPresentation/examples/easy/square.latte,
	  code/gnulib/Makefile.am, code/gnulib/alloca.in.h,
	  code/gnulib/areadlink.c, code/gnulib/areadlink.h,
	  code/gnulib/c-ctype.c, code/gnulib/c-ctype.h,
	  code/gnulib/canonicalize-lgpl.c, code/gnulib/canonicalize.h,
	  code/gnulib/error.c, code/gnulib/error.h, code/gnulib/exitfail.c,
	  code/gnulib/exitfail.h, code/gnulib/gettext.h,
	  code/gnulib/intprops.h, code/gnulib/malloc.c,
	  code/gnulib/malloca.c, code/gnulib/malloca.h,
	  code/gnulib/pathmax.h, code/gnulib/progname.c,
	  code/gnulib/progname.h, code/gnulib/progreloc.c,
	  code/gnulib/readlink.c, code/gnulib/relocatable.c,
	  code/gnulib/relocatable.h, code/gnulib/relocwrapper.c,
	  code/gnulib/setenv.c, code/gnulib/stdbool.in.h,
	  code/gnulib/stdlib.in.h, code/gnulib/strerror.c,
	  code/gnulib/string.in.h, code/gnulib/unistd.in.h,
	  code/gnulib/xalloc-die.c, code/gnulib/xalloc.h,
	  code/gnulib/xmalloc.c, code/gnulib/xreadlink.c,
	  code/gnulib/xreadlink.h, code/latte/Makefile.am,
	  code/latte/barvinok/Triangulation.cpp,
	  code/latte/vertices/cdd.cpp, config.libpath, configure.ac,
	  install-reloc,
	  link-warning.h, m4/gnulib/alloca.m4, m4/gnulib/environ.m4,
	  m4/gnulib/extensions.m4, m4/gnulib/gnulib-cache.m4,
	  m4/gnulib/gnulib-common.m4, m4/gnulib/gnulib-comp.m4,
	  m4/gnulib/gnulib-tool.m4, m4/gnulib/include_next.m4,
	  m4/gnulib/lib-ld.m4, m4/gnulib/longlong.m4, m4/gnulib/malloc.m4,
	  m4/gnulib/onceonly.m4, m4/gnulib/relocatable.m4,
	  m4/gnulib/setenv.m4, m4/gnulib/stdlib_h.m4,
	  m4/gnulib/strerror.m4, m4/gnulib/string_h.m4,
	  m4/gnulib/unistd_h.m4, reloc-ldflags: Merge from
	  version_1_4_branch


2010-09-08 22:34  Matthias Koeppe <mkoeppe@math.ucdavis.edu>

	* [r1250] install-reloc: Add missing file from gnulib

2010-09-08 22:31  Matthias Koeppe <mkoeppe@math.ucdavis.edu>

	* [r1249] reloc-ldflags: Add missing file from gnulib

2010-09-08 19:20  Matthias Koeppe <mkoeppe@math.ucdavis.edu>

	* [r1248] link-warning.h: Add missing file from gnulib

2010-08-14 00:37  Peter Malkin <malkin@math.ucdavis.edu>

	* [r1232] code/latte/Makefile.am,
	  code/latte/barvinok/Triangulation.cpp,
	  code/latte/vertices/cdd.cpp, configure.ac: Made transition from
	  cdd+ to cddlib executable.
	  The output format for the .ead and .icd files changed from cdd+
	  to cddlib, which meant that some output parsing functions had to
	  be rewritten.

2010-07-16 20:40  Matthias Koeppe <mkoeppe@math.ucdavis.edu>

	* [r1201] configure.ac: Bump version numbers.

2010-07-16 20:39  Matthias Koeppe <mkoeppe@math.ucdavis.edu>

	* [r1200] code/gnulib/alloca.in.h, code/gnulib/areadlink.c,
	  code/gnulib/areadlink.h, code/gnulib/intprops.h,
	  code/gnulib/malloc.c, code/gnulib/stdbool.in.h,
	  code/gnulib/stdlib.in.h, code/gnulib/string.in.h,
	  code/gnulib/unistd.in.h, m4/gnulib/environ.m4,
	  m4/gnulib/extensions.m4, m4/gnulib/lib-ld.m4,
	  m4/gnulib/malloc.m4, m4/gnulib/onceonly.m4,
	  m4/gnulib/string_h.m4: Upgrade GNULIB from CVS.

2010-07-16 20:38  Matthias Koeppe <mkoeppe@math.ucdavis.edu>

	* [r1199] code/gnulib/Makefile.am, code/gnulib/alloca_.h,
	  code/gnulib/c-ctype.c, code/gnulib/c-ctype.h,
	  code/gnulib/canonicalize-lgpl.c, code/gnulib/canonicalize.h,
	  code/gnulib/error.c, code/gnulib/error.h, code/gnulib/exitfail.c,
	  code/gnulib/exitfail.h, code/gnulib/gettext.h,
	  code/gnulib/malloca.c, code/gnulib/malloca.h,
	  code/gnulib/pathmax.h, code/gnulib/progname.c,
	  code/gnulib/progname.h, code/gnulib/progreloc.c,
	  code/gnulib/readlink.c, code/gnulib/relocatable.c,
	  code/gnulib/relocatable.h, code/gnulib/relocwrapper.c,
	  code/gnulib/setenv.c, code/gnulib/setenv.h,
	  code/gnulib/stdbool_.h, code/gnulib/stdlib_.h,
	  code/gnulib/strerror.c, code/gnulib/unistd_.h,
	  code/gnulib/xalloc-die.c, code/gnulib/xalloc.h,
	  code/gnulib/xmalloc.c, code/gnulib/xreadlink.c,
	  code/gnulib/xreadlink.h, config.libpath, doc/relocatable.texi,
	  m4/gnulib/absolute-header.m4, m4/gnulib/alloca.m4,
	  m4/gnulib/gnulib-cache.m4, m4/gnulib/gnulib-common.m4,
	  m4/gnulib/gnulib-comp.m4, m4/gnulib/gnulib-tool.m4,
	  m4/gnulib/include_next.m4, m4/gnulib/longlong.m4,
	  m4/gnulib/onceonly_2_57.m4, m4/gnulib/relocatable.m4,
	  m4/gnulib/setenv.m4, m4/gnulib/stdlib_h.m4,
	  m4/gnulib/strerror.m4, m4/gnulib/unistd_h.m4: Upgrade GNULIB from
	  CVS.

2010-07-12 06:15  Matthias Koeppe <mkoeppe@math.ucdavis.edu>

	* [r1193] Makefile.am: Install NEWS and README as documentation.

2010-07-12 06:14  Matthias Koeppe <mkoeppe@math.ucdavis.edu>

	* [r1192] code/test-suite/Makefile.am: Final touches on the test
	  suite.

2010-07-12 06:14  Matthias Koeppe <mkoeppe@math.ucdavis.edu>

	* [r1191] code/latte/ReadPolyhedron.cpp: Add warning for broken
	  "int" options.

2010-07-12 04:49  Matthias Koeppe <mkoeppe@math.ucdavis.edu>

	* [r1189] code/test-suite/gather-summaries,
	  code/test-suite/grep-results.sh, code/test-suite/test-4ti2.sh,
	  code/test-suite/test-allprimal-exp-maxdet1000-4ti2.sh,
	  code/test-suite/test-allprimal-exp-maxdet1000.sh,
	  code/test-suite/test-cdd-cddlib.sh, code/test-suite/test-cdd.sh,
	  code/test-suite/test-homog.sh,
	  code/test-suite/test-irr-exp-maxdet1000-4ti2.sh,
	  code/test-suite/test-irr-exp-maxdet1000.sh,
	  code/test-suite/test-old-latte.pl,
	  code/test-suite/test-some-flavors.sh: Make scripts executable

2010-07-12 04:24  Matthias Koeppe <mkoeppe@math.ucdavis.edu>

	* [r1188] code/latte/latte_system.cpp: Add #include for gcc 4.4
	  (reported by Thomas Kahle)

2010-07-12 04:23  Matthias Koeppe <mkoeppe@math.ucdavis.edu>

	* [r1187] code/latte/Grobner.cpp, code/latte/RudyResNTL.cpp,
	  code/latte/count.cpp, code/latte/ehrhart.cpp,
	  code/latte/maximize.cpp, code/latte/minimize.cpp,
	  code/latte/print.cpp: Use PATH_MAX instead of 127 in many places

2010-07-12 04:22  Matthias Koeppe <mkoeppe@math.ucdavis.edu>

	* [r1186] code/latte/adjacency: Merge the ComputeAdjacency program
	  as a function into
	  vertices/cdd.cpp.
	  This gets rid of the problem that we would need to find
	  ComputeAdjacency either in the build directory or the libexec
	  directory, depending on whether the code is installed or not.
	  This fixes "make distcheck" problems.

2010-07-12 04:22  Matthias Koeppe <mkoeppe@math.ucdavis.edu>

	* [r1185] code/latte/Makefile.am, code/latte/vertices/cdd.cpp,
	  configure.ac: Merge the ComputeAdjacency program as a function
	  into
	  vertices/cdd.cpp.
	  This gets rid of the problem that we would need to find
	  ComputeAdjacency either in the build directory or the libexec
	  directory, depending on whether the code is installed or not.
	  This fixes "make distcheck" problems.

2010-07-12 01:45  Matthias Koeppe <mkoeppe@math.ucdavis.edu>

	* [r1184] code/test-suite/Makefile.am: Distribute test scripts.

2010-07-12 01:35  Matthias Koeppe <mkoeppe@math.ucdavis.edu>

	* [r1183] code/latte/count.cpp: Don't set "triangulation" parameter
	  here; it is set in BarvinokParameters::BarvinokParameters.

2010-07-12 01:31  Matthias Koeppe <mkoeppe@math.ucdavis.edu>

	* [r1182] code/latte/VertexConesWith4ti2.cpp: Comment out debug
	  code.

2010-07-12 00:56  Matthias Koeppe <mkoeppe@math.ucdavis.edu>

	* [r1181] EXAMPLES/Makefile.am: More examples.

2010-07-12 00:55  Matthias Koeppe <mkoeppe@math.ucdavis.edu>

	* [r1180] code/test-suite/Makefile.am:

2010-07-12 00:55  Matthias Koeppe <mkoeppe@math.ucdavis.edu>

	* [r1179] NEWS:

2010-07-12 00:54  Matthias Koeppe <mkoeppe@math.ucdavis.edu>

	* [r1178] configure.ac: Fix last change: We do check for TOPCOM
	  executables, but not for the TOPCOM library.

2010-07-12 00:54  Matthias Koeppe <mkoeppe@math.ucdavis.edu>

	* [r1177] m4/topcom-check.m4: Don't check for the TOPCOM library --
	  it currently does not compile
	  together with upstream cddlib.

2010-07-12 00:53  Matthias Koeppe <mkoeppe@math.ucdavis.edu>

	* [r1176] code/latte/ReadPolyhedron.cpp,
	  code/latte/barvinok/barvinok.cpp: Change defaults to use 4ti2
	  rather than cdd or cddlib.

2010-07-11 23:18  Matthias Koeppe <mkoeppe@math.ucdavis.edu>

	* [r1175] EXAMPLES/kahle, EXAMPLES/kahle/K4.latte,
	  EXAMPLES/kahle/join.latte, EXAMPLES/kahle/other.latte: New
	  examples

2010-07-11 23:16  Matthias Koeppe <mkoeppe@math.ucdavis.edu>

	* [r1174] code/test-suite/test-4ti2.sh,
	  code/test-suite/test-allprimal-exp-maxdet1000-4ti2.sh,
	  code/test-suite/test-allprimal-exp-maxdet1000.sh,
	  code/test-suite/test-cdd-cddlib.sh, code/test-suite/test-cdd.sh,
	  code/test-suite/test-default.sh, code/test-suite/test-homog.sh,
	  code/test-suite/test-irr-exp-maxdet1000-4ti2.sh,
	  code/test-suite/test-irr-exp-maxdet1000.sh: New scripts for test
	  suite

2010-07-11 23:13  Matthias Koeppe <mkoeppe@math.ucdavis.edu>

	* [r1172] EXAMPLES/nicole-simplex.vrep:

2010-07-11 23:12  Matthias Koeppe <mkoeppe@math.ucdavis.edu>

	* [r1171] EXAMPLES/tests/implied-equation.latte,
	  EXAMPLES/tests/missing-newline-2.latte,
	  EXAMPLES/tests/missing-newline-3.latte,
	  EXAMPLES/tests/missing-newline.latte:

2010-07-11 23:11  Matthias Koeppe <mkoeppe@math.ucdavis.edu>

	* [r1170] EXAMPLES/garcia, EXAMPLES/lehmann, EXAMPLES/tests: Update
	  web site info and build instructions.

2010-07-11 23:06  Matthias Koeppe <mkoeppe@math.ucdavis.edu>

	* [r1169] configure.ac: Disable TOPCOM.

2010-07-11 23:01  Matthias Koeppe <mkoeppe@math.ucdavis.edu>

	* [r1168] README: Update web site info and build instructions.

2010-07-11 22:54  Matthias Koeppe <mkoeppe@math.ucdavis.edu>

	* [r1167] code/test-suite/test.pl.in: Make test suite useful in the
	  build environment.

2010-07-11 22:53  Matthias Koeppe <mkoeppe@math.ucdavis.edu>

	* [r1166] code/test-suite/Makefile.am: Run test suite on "make
	  check".

2010-07-11 22:52  Matthias Koeppe <mkoeppe@math.ucdavis.edu>

	* [r1165] code/latte/banner.cpp: Update web site info.

2010-07-11 22:52  Matthias Koeppe <mkoeppe@math.ucdavis.edu>

	* [r1164] code/latte/ReadLatteStyle.cpp: (check_stream): Don't
	  signal an error if eof has been reached in a
	  file.

2010-07-11 22:51  Matthias Koeppe <mkoeppe@math.ucdavis.edu>

	* [r1163] code/latte/VertexConesWith4ti2.cpp:
	  (computeVertexConesWith4ti2): Cancel gcds in facet vectors.
	  
	  This fixes bugs in test cases "knapsackbaby2.equ",
	  "tru_cube_latte"
	  when run with "--all-primal --compute-vertex-cones=4ti2"

2010-07-11 20:20  Matthias Koeppe <mkoeppe@math.ucdavis.edu>

	* [r1162] code/latte/ReadPolyhedron.cpp: Change defaults to
	  --redundancy-check=full-cddlib
	  (slower, but no surprises).
	  
	  Document --homog option (same as "homog").
	  
	  Add new-style options --vrep, --cdd
	  that work in the same way as "vrep", "cdd".


	
2010-09-07 18:40  Brandon Dutra <bedutra@ucdavis.edu>

	* code/latte/timing.cpp, code/latte/timing.h,
	  code/latte/valuation/valuation.cpp: Added a clear to the timer

2010-09-07 18:38  Gregory Pinto <gpinto@math.ucdavis.edu>

	* EXAMPLES/aimPresentation/aimLatteExamples.tex: blank

2010-09-07 15:47  Gregory Pinto <gpinto@math.ucdavis.edu>

	* EXAMPLES/aimPresentation/aimLatteExamples.tex:

2010-09-07 08:33  Gregory Pinto <gpinto@math.ucdavis.edu>

	* EXAMPLES/aimPresentation/aimLatteExamples.tex: added a bit, will
	  finish up examples tomorrow morning

2010-09-07 06:33  Brandon Dutra <bedutra@ucdavis.edu>

	* EXAMPLES/aimPresentation/examples/easy,
	  EXAMPLES/aimPresentation/examples/easy/birkhoff-4.latte,
	  EXAMPLES/aimPresentation/examples/easy/birkhoff-4.latte.polynomial,
	  EXAMPLES/aimPresentation/examples/easy/checkGraph3_3_se.latte,
	  EXAMPLES/aimPresentation/examples/easy/checkGraph3_3_se.polynomial,
	  EXAMPLES/aimPresentation/examples/easy/checkGraph3_3_seDescription.txt,
	  EXAMPLES/aimPresentation/examples/easy/cubeocthedron,
	  EXAMPLES/aimPresentation/examples/easy/cubeocthedron.polynomial,
	  EXAMPLES/aimPresentation/examples/easy/hyperrectangle.latte,
	  EXAMPLES/aimPresentation/examples/easy/hyperrectangle.polynomial,
	  EXAMPLES/aimPresentation/examples/easy/hyperrectangleDescription.txt,
	  EXAMPLES/aimPresentation/examples/easy/kneser2_5_edge.latte,
	  EXAMPLES/aimPresentation/examples/easy/kneser2_5_edge.polymake,
	  EXAMPLES/aimPresentation/examples/easy/kneser2_5_edge.polynomial,
	  EXAMPLES/aimPresentation/examples/easy/kneser2_5_edgeDescription.tet,
	  EXAMPLES/aimPresentation/examples/easy/magic4x4,
	  EXAMPLES/aimPresentation/examples/easy/magic4x4.polynomial,
	  EXAMPLES/aimPresentation/examples/easy/square.latte,
	  EXAMPLES/aimPresentation/examples/easy/square.polynomial,
	  EXAMPLES/aimPresentation/examples/medium,
	  EXAMPLES/aimPresentation/examples/medium/ccp_5.ine,
	  EXAMPLES/aimPresentation/examples/medium/ccp_5Description.txt,
	  EXAMPLES/aimPresentation/examples/square.latte: Added examples
	  for the presentation.

2010-09-07 03:43  Brandon Dutra <bedutra@ucdavis.edu>

	* EXAMPLES/aimPresentation/aimLatteExamples.tex: volume is done,
	  need more interesting examples of volumes and integration

2010-09-07 01:17  Brandon Dutra <bedutra@ucdavis.edu>

	* EXAMPLES/aimPresentation/aimLatteExamples.tex,
	  EXAMPLES/aimPresentation/examples,
	  EXAMPLES/aimPresentation/examples/square.latte,
	  EXAMPLES/aimPresentation/img,
	  EXAMPLES/aimPresentation/img/cube.png,
	  EXAMPLES/aimPresentation/img/cubeVertex.png,
	  EXAMPLES/aimPresentation/img/cubeVertex.xcf,
	  EXAMPLES/aimPresentation/img/unitSquare.png,
	  EXAMPLES/aimPresentation/img/unitSquare.xcf: Added currently what
	  I have done for the presentation.

2010-09-06 06:46  Brandon Dutra <bedutra@ucdavis.edu>

	* EXAMPLES/volumeIntegrationPaperComparison/notStarted/ong.pdf:
	  moved ong.pdf to VOLUME.

2010-09-06 06:31  Brandon Dutra <bedutra@ucdavis.edu>

	* code/latte/convertCDD_ext_to_latte.cpp: Added
	  convertCDD_ext_to_latte.cpp

2010-09-06 06:31  Brandon Dutra <bedutra@ucdavis.edu>

	* code/latte/Makefile.am, code/latte/rational.cpp,
	  code/latte/rational.h,
	  code/latte/valuation/PolytopeValuation.cpp: rational.*: added
	  operator/ for ZZ to RationalNTL.
	  
	  PolytopeValuation.cpp: commented out debug line.
	  
	  Makefile: wanted to convert cdd ine files with latte files.
	  You can now do things like
	  find . -exec ./ConvertCDDextTOLatte {} {}.latte \;
	  (see next commit for source of this converter).

2010-09-06 06:27  Brandon Dutra <bedutra@ucdavis.edu>

	* EXAMPLES/volumeIntegrationPaperComparison/bueler/tables_1and2.pdf,
	  EXAMPLES/volumeIntegrationPaperComparison/bueler/tables_1and2.tex:
	  have testing times for vinci lawrence vs our lawrence and HOT vs
	  RLASS.
	  
	  So, our times are really poor, BUT at least we can say our
	  answers are EXACT.

2010-09-05 01:35  Brandon Dutra <bedutra@ucdavis.edu>

	* code/latte, code/latte/Makefile.am, code/latte/barvinok/dec.cpp,
	  code/latte/barvinok/dec.h,
	  code/latte/triangulation/RegularTriangulationWith4ti2.cpp,
	  code/latte/valuation/PolytopeValuation.h,
	  code/latte/valuation/testIntegrationHyperrectangles.cpp,
	  code/latte/valuation/valuation.cpp,
	  code/latte/valuation/valuation.h:
	  RegularTriangulationWIth4ti2.cpp, dec.*: converted cout to cerr
	  before using 4ti2 if debug_trangulation is false.
	  
	  valuation.cpp: the main driver now passes the valuation answer
	  and time in a vector.
	  
	  PolytopeValuation.h: changed comment.
	  
	  testIntegrationHyperrectangles.cpp: updated b/c of valuation's
	  new return value.
	  Makefile: add volume testing for hypersimplex.

2010-09-03 23:12  Brandon Dutra <bedutra@ucdavis.edu>

	* EXAMPLES/aimPresentation/notes.txt: added todo/notes file

2010-09-03 22:55  Brandon Dutra <bedutra@ucdavis.edu>

	* EXAMPLES/aimPresentation: Added forlder for the aim presentation.
	  Will remove from SVN after Spet 11.

2010-09-03 06:11  Brandon Dutra <bedutra@ucdavis.edu>

	* EXAMPLES/volumeIntegrationPaperComparison/VOLUME,
	  EXAMPLES/volumeIntegrationPaperComparison/VOLUME/markKorenblit,
	  EXAMPLES/volumeIntegrationPaperComparison/VOLUME/ong,
	  EXAMPLES/volumeIntegrationPaperComparison/VOLUME/ong/README.txt,
	  EXAMPLES/volumeIntegrationPaperComparison/VOLUME/ong/p1.latte.txt,
	  EXAMPLES/volumeIntegrationPaperComparison/VOLUME/ong/p2.latte.txt,
	  EXAMPLES/volumeIntegrationPaperComparison/VOLUME/ong/p3.latte.txt,
	  EXAMPLES/volumeIntegrationPaperComparison/VOLUME/ong/p4.latte.txt,
	  EXAMPLES/volumeIntegrationPaperComparison/VOLUME/ong/p5.latte.txt,
	  EXAMPLES/volumeIntegrationPaperComparison/VOLUME/ong/p6.latte.txt,
	  EXAMPLES/volumeIntegrationPaperComparison/VOLUME/ong/p7.latte.txt,
	  EXAMPLES/volumeIntegrationPaperComparison/VOLUME/ong/paper,
	  EXAMPLES/volumeIntegrationPaperComparison/VOLUME/ong/paper/OngVolumeExperiments.pdf,
	  EXAMPLES/volumeIntegrationPaperComparison/bueler/tables_1and2.tex,
	  EXAMPLES/volumeIntegrationPaperComparison/markKorenblit: moved
	  bueler/ to VOLUME/bueler
	  
	  added VOLUME/ong and examples p1-p7. We match perfectly for
	  p1-p6. However, there is an 2-3% error in their 'exact' and our
	  'exact' computation of volume p7.

2010-08-13 16:18  Brandon Dutra <bedutra@ucdavis.edu>

	* EXAMPLES/volumeIntegrationPaperComparison/markKorenblit/4ti2_triangulation_output,
	  EXAMPLES/volumeIntegrationPaperComparison/markKorenblit/Check_emp.ddl,
	  EXAMPLES/volumeIntegrationPaperComparison/markKorenblit/Check_emp.ddl.old,
	  EXAMPLES/volumeIntegrationPaperComparison/markKorenblit/Check_emp.lp,
	  EXAMPLES/volumeIntegrationPaperComparison/markKorenblit/Check_emp.lps,
	  EXAMPLES/volumeIntegrationPaperComparison/markKorenblit/Check_emp.out,
	  EXAMPLES/volumeIntegrationPaperComparison/markKorenblit/lifted_cone_for_4ti2_triangulation,
	  EXAMPLES/volumeIntegrationPaperComparison/markKorenblit/tri.ddl,
	  EXAMPLES/volumeIntegrationPaperComparison/markKorenblit/tri.ddl.old,
	  EXAMPLES/volumeIntegrationPaperComparison/markKorenblit/tri.ext,
	  EXAMPLES/volumeIntegrationPaperComparison/markKorenblit/tri.icd,
	  EXAMPLES/volumeIntegrationPaperComparison/markKorenblit/tri.icd.old,
	  EXAMPLES/volumeIntegrationPaperComparison/markKorenblit/tri.ine,
	  EXAMPLES/volumeIntegrationPaperComparison/markKorenblit/tri.ine.old:
	  markKorenblit: deleted generated-latte files, sorry.

2010-08-13 15:58  Brandon Dutra <bedutra@ucdavis.edu>

	* code/latte/valuation/valuation.cpp: valuation: added timer for
	  the integration code.

2010-08-12 21:25  Brandon Dutra <bedutra@ucdavis.edu>

	* EXAMPLES/volumeIntegrationPaperComparison/bueler/.project,
	  EXAMPLES/volumeIntegrationPaperComparison/bueler/.settings,
	  EXAMPLES/volumeIntegrationPaperComparison/bueler/.texlipse,
	  EXAMPLES/volumeIntegrationPaperComparison/bueler/tables_1and2.dvi,
	  EXAMPLES/volumeIntegrationPaperComparison/bueler/texput.log,
	  EXAMPLES/volumeIntegrationPaperComparison/bueler/tmp: Deleting
	  generated files, sorry.

2010-08-12 21:20  Brandon Dutra <bedutra@ucdavis.edu>

	* EXAMPLES/Makefile.am, EXAMPLES/README, EXAMPLES/ccp,
	  EXAMPLES/ccp/ccp_5.ext, EXAMPLES/ccp/ccp_5.ine,
	  EXAMPLES/ccp/ccp_6.ext, EXAMPLES/ccp/ccp_6.ine,
	  EXAMPLES/ccp/ccp_7.ext, EXAMPLES/ccp/ccp_7.ine,
	  EXAMPLES/ccp/readme, EXAMPLES/crossCyclic,
	  EXAMPLES/crossCyclic/cc_8_10.ext,
	  EXAMPLES/crossCyclic/cc_8_10.ine,
	  EXAMPLES/crossCyclic/cc_8_11.ext,
	  EXAMPLES/crossCyclic/cc_8_11.ine,
	  EXAMPLES/crossCyclic/cc_8_5.ext, EXAMPLES/crossCyclic/cc_8_5.ine,
	  EXAMPLES/crossCyclic/cc_8_6.ext, EXAMPLES/crossCyclic/cc_8_6.ine,
	  EXAMPLES/crossCyclic/cc_8_7.ext, EXAMPLES/crossCyclic/cc_8_7.ine,
	  EXAMPLES/crossCyclic/cc_8_8.ext, EXAMPLES/crossCyclic/cc_8_8.ine,
	  EXAMPLES/crossCyclic/cc_8_9.ext, EXAMPLES/crossCyclic/cc_8_9.ine,
	  EXAMPLES/crossCyclic/readme, EXAMPLES/cubes,
	  EXAMPLES/cubes/cube-4-3.5.latte, EXAMPLES/cubes/cube_10.ext,
	  EXAMPLES/cubes/cube_10.ine, EXAMPLES/cubes/cube_11.ext,
	  EXAMPLES/cubes/cube_11.ine, EXAMPLES/cubes/cube_12.ext,
	  EXAMPLES/cubes/cube_12.ine, EXAMPLES/cubes/cube_13.ext,
	  EXAMPLES/cubes/cube_13.ine, EXAMPLES/cubes/cube_14.ext,
	  EXAMPLES/cubes/cube_14.ine, EXAMPLES/cubes/cube_2.ext,
	  EXAMPLES/cubes/cube_2.ine, EXAMPLES/cubes/cube_3.ext,
	  EXAMPLES/cubes/cube_3.ine, EXAMPLES/cubes/cube_4.ext,
	  EXAMPLES/cubes/cube_4.ine, EXAMPLES/cubes/cube_5.ext,
	  EXAMPLES/cubes/cube_5.ine, EXAMPLES/cubes/cube_6.ext,
	  EXAMPLES/cubes/cube_6.ine, EXAMPLES/cubes/cube_7.ext,
	  EXAMPLES/cubes/cube_7.ine, EXAMPLES/cubes/cube_8.ext,
	  EXAMPLES/cubes/cube_8.ine, EXAMPLES/cubes/cube_9.ext,
	  EXAMPLES/cubes/cube_9.ine, EXAMPLES/cubes/makeCube,
	  EXAMPLES/cubes/makeCube.cpp, EXAMPLES/metric,
	  EXAMPLES/metric/Fm_4.ext, EXAMPLES/metric/Fm_4.ine,
	  EXAMPLES/metric/Fm_5.ext, EXAMPLES/metric/Fm_5.ine,
	  EXAMPLES/metric/Fm_6.ext, EXAMPLES/metric/Fm_6.ine, EXAMPLES/rh,
	  EXAMPLES/rh/rh_10_20.ext, EXAMPLES/rh/rh_10_20.ine,
	  EXAMPLES/rh/rh_10_25.ext, EXAMPLES/rh/rh_10_25.ine,
	  EXAMPLES/rh/rh_10_30.ext, EXAMPLES/rh/rh_10_30.ine,
	  EXAMPLES/rh/rh_8_20.ext, EXAMPLES/rh/rh_8_20.ine,
	  EXAMPLES/rh/rh_8_25.ext, EXAMPLES/rh/rh_8_25.ine,
	  EXAMPLES/rh/rh_8_30.ext, EXAMPLES/rh/rh_8_30.ine, EXAMPLES/rv,
	  EXAMPLES/rv/rv_10_12.ext, EXAMPLES/rv/rv_10_12.ine,
	  EXAMPLES/rv/rv_10_13.ext, EXAMPLES/rv/rv_10_13.ine,
	  EXAMPLES/rv/rv_10_14.ext, EXAMPLES/rv/rv_10_14.ine,
	  EXAMPLES/rv/rv_8_10.ext, EXAMPLES/rv/rv_8_10.ine,
	  EXAMPLES/rv/rv_8_11.ext, EXAMPLES/rv/rv_8_11.ine,
	  EXAMPLES/rv/rv_8_12.ext, EXAMPLES/rv/rv_8_12.ine,
	  EXAMPLES/rv/rv_8_13.ext, EXAMPLES/rv/rv_8_13.ine,
	  EXAMPLES/rv/rv_8_14.ext, EXAMPLES/rv/rv_8_14.ine,
	  EXAMPLES/rv/rv_8_20.ext, EXAMPLES/rv/rv_8_20.ine,
	  EXAMPLES/rv/rv_8_30.ext, EXAMPLES/rv/rv_8_30.ine,
	  EXAMPLES/volumeIntegrationPaperComparison,
	  EXAMPLES/volumeIntegrationPaperComparison/Henrion,
	  EXAMPLES/volumeIntegrationPaperComparison/Henrion/README.txt,
	  EXAMPLES/volumeIntegrationPaperComparison/Henrion/bean.Arc10-08.latte.vrep,
	  EXAMPLES/volumeIntegrationPaperComparison/Henrion/maple,
	  EXAMPLES/volumeIntegrationPaperComparison/Henrion/maple/integrateAsFunction.mw,
	  EXAMPLES/volumeIntegrationPaperComparison/Henrion/maple/mapleBean.mpl,
	  EXAMPLES/volumeIntegrationPaperComparison/Henrion/maple/plotFuctionNorm.mw,
	  EXAMPLES/volumeIntegrationPaperComparison/Henrion/paper,
	  EXAMPLES/volumeIntegrationPaperComparison/Henrion/paper/appVolumeIntegrationBasicSemiAlgebraicSets.pdf,
	  EXAMPLES/volumeIntegrationPaperComparison/bueler,
	  EXAMPLES/volumeIntegrationPaperComparison/bueler/.project,
	  EXAMPLES/volumeIntegrationPaperComparison/bueler/.settings,
	  EXAMPLES/volumeIntegrationPaperComparison/bueler/.settings/org.eclipse.ltk.core.refactoring.prefs,
	  EXAMPLES/volumeIntegrationPaperComparison/bueler/.texlipse,
	  EXAMPLES/volumeIntegrationPaperComparison/bueler/READEME.txt,
	  EXAMPLES/volumeIntegrationPaperComparison/bueler/paper,
	  EXAMPLES/volumeIntegrationPaperComparison/bueler/paper/bueler.pdf,
	  EXAMPLES/volumeIntegrationPaperComparison/bueler/tables_1and2.dvi,
	  EXAMPLES/volumeIntegrationPaperComparison/bueler/tables_1and2.pdf,
	  EXAMPLES/volumeIntegrationPaperComparison/bueler/tables_1and2.tex,
	  EXAMPLES/volumeIntegrationPaperComparison/bueler/texput.log,
	  EXAMPLES/volumeIntegrationPaperComparison/bueler/tmp,
	  EXAMPLES/volumeIntegrationPaperComparison/bueler/tmp/.settings,
	  EXAMPLES/volumeIntegrationPaperComparison/bueler/tmp/paper,
	  EXAMPLES/volumeIntegrationPaperComparison/bueler/tmp/tables_1and2.aux,
	  EXAMPLES/volumeIntegrationPaperComparison/bueler/tmp/tables_1and2.log,
	  EXAMPLES/volumeIntegrationPaperComparison/markKorenblit,
	  EXAMPLES/volumeIntegrationPaperComparison/markKorenblit/4ti2_triangulation_output,
	  EXAMPLES/volumeIntegrationPaperComparison/markKorenblit/Check_emp.ddl,
	  EXAMPLES/volumeIntegrationPaperComparison/markKorenblit/Check_emp.ddl.old,
	  EXAMPLES/volumeIntegrationPaperComparison/markKorenblit/Check_emp.lp,
	  EXAMPLES/volumeIntegrationPaperComparison/markKorenblit/Check_emp.lps,
	  EXAMPLES/volumeIntegrationPaperComparison/markKorenblit/Check_emp.out,
	  EXAMPLES/volumeIntegrationPaperComparison/markKorenblit/README.txt,
	  EXAMPLES/volumeIntegrationPaperComparison/markKorenblit/ch3.1,
	  EXAMPLES/volumeIntegrationPaperComparison/markKorenblit/ch3.2,
	  EXAMPLES/volumeIntegrationPaperComparison/markKorenblit/ch3.3,
	  EXAMPLES/volumeIntegrationPaperComparison/markKorenblit/lifted_cone_for_4ti2_triangulation,
	  EXAMPLES/volumeIntegrationPaperComparison/markKorenblit/paper,
	  EXAMPLES/volumeIntegrationPaperComparison/markKorenblit/paper/Mark
	  Korenblit1.pdf,
	  EXAMPLES/volumeIntegrationPaperComparison/markKorenblit/tri.ddl,
	  EXAMPLES/volumeIntegrationPaperComparison/markKorenblit/tri.ddl.old,
	  EXAMPLES/volumeIntegrationPaperComparison/markKorenblit/tri.ext,
	  EXAMPLES/volumeIntegrationPaperComparison/markKorenblit/tri.icd,
	  EXAMPLES/volumeIntegrationPaperComparison/markKorenblit/tri.icd.old,
	  EXAMPLES/volumeIntegrationPaperComparison/markKorenblit/tri.ine,
	  EXAMPLES/volumeIntegrationPaperComparison/markKorenblit/tri.ine.old,
	  EXAMPLES/volumeIntegrationPaperComparison/notStarted,
	  EXAMPLES/volumeIntegrationPaperComparison/notStarted/Fausto
	  Bernardini.pdf,
	  EXAMPLES/volumeIntegrationPaperComparison/notStarted/RATHOD.pdf,
	  EXAMPLES/volumeIntegrationPaperComparison/notStarted/README.txt,
	  EXAMPLES/volumeIntegrationPaperComparison/notStarted/alanGenz.pdf,
	  EXAMPLES/volumeIntegrationPaperComparison/notStarted/ong.pdf,
	  EXAMPLES/volumeIntegrationPaperComparison/notStarted/shaoweiLin.pdf,
	  EXAMPLES/volumeIntegrationPaperComparison/notStarted/zhiqiangXu.pdf:
	  Added cdd-style-input examples for testing with vinci.

2010-08-12 21:16  Brandon Dutra <bedutra@ucdavis.edu>

	* code/latte/dual.cpp,
	  code/latte/normalize/check-representation.cpp,
	  code/latte/triangulation/triangulate.cpp,
	  code/latte/valuation/Driver.cpp,
	  code/latte/valuation/PolytopeValuation.cpp,
	  code/latte/valuation/PolytopeValuation.h,
	  code/latte/valuation/valuation.cpp,
	  code/latte/valuation/valuationTestsLib.mpl: normalize/check-rep
	  and dual: changed some cout's to cerrs
	  valuation/: for integration, the caller has to make the
	  monomialSum (not just a string).
	  valuation/valuationTestsLib: fixed spelling error.

2010-08-05 22:13  Brandon Dutra <bedutra@ucdavis.edu>

	* code/latte/integration/burstTrie.hpp,
	  code/latte/integration/iterators.hpp,
	  code/latte/integration/multiply.h,
	  code/latte/integration/newIntegration.cpp,
	  code/latte/integration/residue.cpp,
	  code/latte/valuation/PolytopeValuation.cpp,
	  code/latte/valuation/PolytopeValuation.h: residue, iterators,
	  multoply, burstTrie, newIntegration, PolytopeValuation: fixed
	  many memory leaks with the integration code.
	  --The BurstContainer deconstructor was not deleting everything
	  --when mult. two polynomials, the partial products where not
	  deleted
	  --PolytopeValuation forgot to free the linear forms
	  --Deleted newed iterators.
	  
	  I used the tool "valgrind" on logic to find these errors. To run
	  the tool:
	  1) make clean
	  2) make CXX='g++ -g' -j6 (you don't really need to compile with
	  -g, but it is better.
	  3) valgrind --leak-check=full --log-file=errors.txt
	  --show-reachable=yes --num-callers=25 ./ValuationComputation
	  <args> latte-file
	  3.5) Wait. It takes a LONG time (15 * normal)
	  4) Open errors.txt
	  
	  See
	  http://valgrind.org/docs/manual/mc-manual.html#mc-manual.errormsgs
	  for a description of the error messages.

2010-08-05 19:31  Brandon Dutra <bedutra@ucdavis.edu>

	* code/latte/integration/createLinear.mpl: stopped printing out the
	  linear form, which is integer with rational coefficients

2010-08-03 19:39  Brandon Dutra <bedutra@ucdavis.edu>

	* code/latte/integration/PolyTrie.cpp,
	  code/latte/integration/decomposeTest.mpl,
	  code/latte/integration/integrationTestsLib.mpl,
	  code/latte/integration/newIntegration.cpp,
	  code/latte/integration/newIntegration.h,
	  code/latte/integration/residue.cpp, code/latte/rational.cpp,
	  code/latte/rational.h,
	  code/latte/valuation/valuationTestsLib.mpl: rational.* added back
	  in some methods I removed with the revert/merge
	  integratonTestLib.mpl, valuationTestsLib.mpl: stopped printing
	  the random polynomials/forms.
	  
	  newIntegration.*, residue.cpp: added very beautiful comments.
	  Looking at things, I'm 66% sure there us a memory leak, also the
	  functions cannot work with a 1001+ dim. polytope without
	  warnings. I'll update this later with a macro.
	  
	  PolyTrie.cpp: commented out a debug cout.

2010-08-03 18:03  Brandon Dutra <bedutra@ucdavis.edu>

	* code/latte/Makefile.am, code/latte/integration/PolyTrie.cpp,
	  code/latte/integration/createLinear.mpl,
	  code/latte/integration/decomposeTest.mpl,
	  code/latte/integration/integrationTestsLib.mpl,
	  code/latte/integration/newIntegration.cpp,
	  code/latte/integration/newIntegration.h,
	  code/latte/integration/residue.cpp,
	  code/latte/integration/residue.h, code/latte/rational.cpp,
	  code/latte/rational.h, code/latte/valuation/Driver.cpp,
	  code/latte/valuation/PolytopeValuation.cpp,
	  code/latte/valuation/PolytopeValuation.h,
	  code/latte/valuation/integrateHyperrectangle.mpl,
	  code/latte/valuation/valuation.cpp,
	  code/latte/valuation/valuation.h,
	  code/latte/valuation/valuationTestsLib.mpl: svn merged back to
	  r1220 from 1221

2010-08-03 17:42  Brandon Dutra <bedutra@ucdavis.edu>

	* code/latte/Makefile.am,
	  code/latte/integration/newIntegration.cpp,
	  code/latte/integration/newIntegration.h,
	  code/latte/integration/residue.cpp,
	  code/latte/integration/residue.h, code/latte/rational.cpp,
	  code/latte/rational.h, code/latte/valuation/Driver.cpp,
	  code/latte/valuation/PolytopeValuation.cpp,
	  code/latte/valuation/PolytopeValuation.h,
	  code/latte/valuation/integrateHyperrectangle.mpl,
	  code/latte/valuation/valuation.cpp,
	  code/latte/valuation/valuation.h,
	  code/latte/valuation/valuationTestsLib.mpl: rational.*: added
	  more overloaded operators.
	  residue, newIntegration.*: added functions to compute the
	  integral over rational-vertex simplex.
	  valuation, PolytopeValuation, Driver.* changed the driver and
	  timed test the integration by dilation and the new "direct"
	  method.
	  
	  It turns out the "direct" method of integration is slower than
	  the dilation method, even after trying to put off reducing most
	  of the fractional results. The dilation method was faster for
	  hyper-rectangles and for random polytopes (made from polymake).
	  
	  I am commiting this direct integration method, and then I will
	  merge/revert the trunk back to 1221 so there is a record of the
	  direct integration method... but it should not be used.

2010-07-27 18:42  Brandon Dutra <bedutra@ucdavis.edu>

	* code/latte/Makefile.am, code/latte/integration/PolyTrie.cpp,
	  code/latte/integration/createLinear.mpl,
	  code/latte/integration/decomposeTest.mpl,
	  code/latte/integration/integrationTestsLib.mpl,
	  code/latte/valuation/integrateHyperrectangle.mpl,
	  code/latte/valuation/valuationTestsLib.mpl: PolyTrie.cpp:
	  commented out a debug cout.
	  createLinear.mpl: commented out the printing of the linear forms.
	  decompostTest.mpl: making rational-coeff. polynomials and linear
	  forms.
	  integrationTestsLib.mpl: commented out the printing of the
	  polynomials.
	  valuationTestsLib: commented out printing lines.

2010-07-24 21:10  Brandon Dutra <bedutra@ucdavis.edu>

	* code/latte/integration/integrationTestsLib.mpl,
	  code/latte/integration/iterators.hpp: iterators.hpp: updated a
	  small comment.
	  
	  integrationtestsLib.mpl: commented back in the set size test.

2010-07-24 21:03  Brandon Dutra <bedutra@ucdavis.edu>

	* code/latte/integration/integrationTestsLib.mpl,
	  code/latte/integration/iterators.hpp, code/latte/rational.cpp,
	  code/latte/rational.h,
	  code/latte/valuation/integrateHyperrectangle.mpl,
	  code/latte/valuation/integrateHyperrectangleTest.sh,
	  code/latte/valuation/valuationTestsLib.mpl: rational: add
	  operator== for int and ZZ
	  
	  integration/iterators: updated the nextTerm() function. If the
	  next term has a zero-coeff., then the term is not return, instead
	  nextTerms is called again.
	  
	  added a test shell script to call the integrateHyperrectangle.mpl
	  maple script.

2010-07-23 19:34  Brandon Dutra <bedutra@ucdavis.edu>

	* code/latte/integration/createLinear.mpl,
	  code/latte/integration/integrationTestsLib.mpl: make R_docom a
	  local var to remove the warning.

2010-07-23 19:30  Brandon Dutra <bedutra@ucdavis.edu>

	* code/latte/integration/PolyTrie.cpp: Commented out a cout.

2010-07-23 19:27  Brandon Dutra <bedutra@ucdavis.edu>

	* code/latte/integration/createLinear.mpl,
	  code/latte/integration/decomposeTest.mpl,
	  code/latte/integration/integrationTestsLib.mpl,
	  code/latte/valuation/integrateHyperrectangle.mpl,
	  code/latte/valuation/valuationTestsLib.mpl: added option to make
	  rational or integer coeff. polynomials or linear forms.
	  
	  decompostTest: currently not seeting a random seed and using
	  integer coefficients because test 8 fails because there a
	  different number of linear forms in myLinForms and mapleLinForms;
	  however, the integration answer is correct. I forgot to comment
	  in the lines that do this number checking, I'll commit again.

2010-07-23 18:46  Brandon Dutra <bedutra@ucdavis.edu>

	* code/latte/integration/PolyTrie.cpp,
	  code/latte/integration/decomposeTest.mpl,
	  code/latte/integration/integrationTestsLib.mpl,
	  code/latte/valuation/integrateHyperrectangle.mpl,
	  code/latte/valuation/valuation.cpp: small changes to testing.

2010-07-23 18:44  Gregory Pinto <gpinto@math.ucdavis.edu>

	* code/latte/valuation/valuation.cpp: cut out a LOT of unneeded
	  lines.

2010-07-23 00:11  Brandon Dutra <bedutra@ucdavis.edu>

	* code/latte/Makefile.am, code/latte/integration/PolyRep.cpp,
	  code/latte/integration/PolyRep.h,
	  code/latte/integration/PolyTrie.cpp,
	  code/latte/integration/PolyTrie.h,
	  code/latte/integration/benchmark.mpl,
	  code/latte/integration/blockInt.cpp,
	  code/latte/integration/blockReps.h,
	  code/latte/integration/burstInt.cpp,
	  code/latte/integration/burstTrie.h,
	  code/latte/integration/consumers.h,
	  code/latte/integration/decomposeTest.mpl,
	  code/latte/integration/integrateDemo.cpp,
	  code/latte/integration/integrateTest.cpp,
	  code/latte/integration/integrationTestsLib.mpl,
	  code/latte/integration/iterators.hpp,
	  code/latte/integration/multiply.h,
	  code/latte/integration/multiplyTest.cpp,
	  code/latte/integration/newIntegration.cpp,
	  code/latte/integration/newIntegration.h,
	  code/latte/integration/residue.cpp,
	  code/latte/integration/versusMode.cpp, code/latte/rational.cpp,
	  code/latte/rational.h,
	  code/latte/testEhrhart/BuildRandomPolytope.cpp,
	  code/latte/testEhrhart/BuildRandomPolytope.h,
	  code/latte/valuation/Driver.cpp,
	  code/latte/valuation/PolytopeValuation.cpp,
	  code/latte/valuation/PolytopeValuation.h,
	  code/latte/valuation/integrateHyperrectangle.mpl,
	  code/latte/valuation/testIntegrationHyperrectangles.cpp,
	  code/latte/valuation/valuation.cpp,
	  code/latte/valuation/valuation.h,
	  code/latte/valuation/valuationTestsLib.mpl: integration:
	  1) changed almost every file. The integration code can now hold
	  monomials with rational (RationalNLT vs ZZ) coefficients.
	  2) Added a test integration maple file that should be treated
	  like a lib. The lib's "make polynomial" function differs from the
	  ones defined in other files in a few ways: it has rational
	  coefficients, negative coefficients, monomials of degree from 1
	  to max_degree, and a random number of monomials.


	  valuation:
	  1) Moved the old functions in the driver to valuation.cpp and
	  placed them in a namespace. Driver.cpp looks more like a driver
	  now.
	  2) testIntegrationHyperrectangles.cpp and
	  integrateHyperrectangle.mpl are a driver for computing the
	  integrals over hyper-rectangles and checking the computed answer
	  with the real one. You can run the test by typing: maple -q
	  valuation/integrateHyperrectangle.mpl. I should add a shell
	  script that calls this line for the user.
	  3) Driver.cpp now computes the integral over rational-vertex
	  polytopes by dilation. The current default is integration. Type
	  ValuationComputation --help to see the help menu. Polynomials can
	  be given by the user from the termal in [[coef, [exps]]+ ] syntax
	  or as the first line of a file, and the file name is passed on
	  the command line. Currently I do no extra parsing of the
	  polynomial for syntax errors.
	  4) The PolytopeValuation class still has the old integration code
	  commented out (when the integration code could only use integer
	  coefficients), this should be removed next.

2010-07-20 21:31  Brandon Dutra <bedutra@ucdavis.edu>

	* code/latte/integration/newIntegration.h: added a print function
	  to the simplex structure.

2010-07-20 13:04  Matthias Koeppe <mkoeppe@math.ucdavis.edu>

	* ., code/latte/integration/PolyTrie.cpp,
	  code/latte/integration/burstTrie.hpp,
	  code/latte/integration/integrateDemo.cpp: Merge from
	  integration-branch.
	  Fixes the following bug:
	  
	  ----------------------
	  From: Brandon Dutra <bedutra@ucdavis.edu>
	  Date: Fri, 16 Jul 2010 16:23:02 -0700
	  
	  When I type: ./integration_demo -m
	  and then enter the polynomial
	  
	  [[2, [2, 2]], [3, [3, 3]]]
	  
	  The assertion that "myLength > 0" fails in
	  burstTrie.h::BurstTrie::insertTerm.
	  ----------------------

2010-07-20 05:45  Stanislav Moreinis <moreinis@math.ucdavis.edu>

	* [r1210] code/latte/integration/PolyTrie.cpp,
	  code/latte/integration/burstTrie.hpp,
	  code/latte/integration/integrateDemo.cpp: Fixed base case for
	  container bursting

2010-07-20 05:03  Matthias Koeppe <mkoeppe@math.ucdavis.edu>

	* code/latte, code/latte/aggregation, code/latte/integration,
	  code/latte/interpolation, code/latte/testEhrhart,
	  code/latte/valuation, code/test-suite: Ignore generated files

2010-07-20 05:01  Matthias Koeppe <mkoeppe@math.ucdavis.edu>

	* ., code/latte/Makefile.am, code/latte/integration/benchmark.mpl,
	  code/latte/integration/blockReps.h,
	  code/latte/integration/burstTest.cpp,
	  code/latte/integration/burstTrie.h,
	  code/latte/integration/burstTrie.hpp,
	  code/latte/integration/consumers.h,
	  code/latte/integration/iterators.h,
	  code/latte/integration/iterators.hpp,
	  code/latte/integration/multiply.h,
	  code/latte/integration/newIntegration.h,
	  code/latte/integration/versusMode.cpp: Merge from
	  integration-branch HEAD

2010-07-20 00:40  Stanislav Moreinis <moreinis@math.ucdavis.edu>

	* [r1207] code/latte/integration/burstTrie.hpp,
	  code/latte/integration/iterators.hpp: Added hpp files

2010-06-08 19:20  Stanislav Moreinis <moreinis@math.ucdavis.edu>

	* [r1083] code/latte/Makefile.am: Makefile tweaks

2010-06-08 18:56  Stanislav Moreinis <moreinis@math.ucdavis.edu>

	* [r1082] code/latte/integration/benchmark.mpl,
	  code/latte/integration/blockReps.h,
	  code/latte/integration/burstTrie.h,
	  code/latte/integration/consumers.h,
	  code/latte/integration/iterators.h,
	  code/latte/integration/multiply.h,
	  code/latte/integration/newIntegration.h,
	  code/latte/integration/versusMode.cpp: Added.hpp files

2010-06-03 20:10  Jianqiu Wu <wxmwbh14@math.ucdavis.edu>

	* [r1081] code/latte/integration/burstTest.cpp: deleted
	  burstTest.cpp

2010-07-20 00:01  Brandon Dutra <bedutra@ucdavis.edu>

	* code/latte/valuation/Driver.cpp,
	  code/latte/valuation/PolytopeValuation.cpp,
	  code/latte/valuation/PolytopeValuation.h: driver: User can type
	  the polynomial in or pass it as the first line of a file.
	  
	  PolytopeValuation: added some comments, moved the part that
	  computes the integral over the dilated polytope to its own
	  function.

2010-07-19 21:03  Brandon Dutra <bedutra@ucdavis.edu>

	* code/latte/rational.cpp, code/latte/rational.h,
	  code/latte/valuation/Driver.cpp,
	  code/latte/valuation/PolytopeValuation.cpp,
	  code/latte/valuation/PolytopeValuation.h: rational: added a
	  constructor.
	  
	  Driver: changed the constant polynomial. Next, I will need add
	  the option to pass a user-defined polynomial.
	  
	  Polytopevaluation: integrate a polynomial by integrating each
	  monomial one at a time in isolation. This is not the best method,
	  but it works until we learn why the bust trie cannot hold more
	  than one monomial.

2010-07-19 17:48  Brandon Dutra <bedutra@ucdavis.edu>

	* code/latte/valuation/Driver.cpp,
	  code/latte/valuation/PolytopeValuation.cpp: Note: we are passing
	  a constant polynomial function and a constant polytope right now
	  for testing.
	  
	  Tries to compute intergrals over polytopes, but need to simplify
	  things for just monomials.

2010-07-16 23:24  Brandon Dutra <bedutra@ucdavis.edu>

	* code/latte/Makefile.am, code/latte/rational.cpp,
	  code/latte/rational.h: updated RationalNTL: added overloaded
	  operators.

2010-07-16 22:22  Brandon Dutra <bedutra@ucdavis.edu>

	* code/latte/valuation/Driver.cpp,
	  code/latte/valuation/PolytopeValuation.cpp,
	  code/latte/valuation/PolytopeValuation.h: Still working on adding
	  integration. Saving my current work.

2010-07-16 17:25  Brandon Dutra <bedutra@ucdavis.edu>

	* code/latte/integration/newIntegration.h: only added two comments.

2010-07-12 22:02  Brandon Dutra <bedutra@ucdavis.edu>

	* code/latte/Makefile.am,
	  code/latte/testEhrhart/BuildRandomPolytope.cpp,
	  code/latte/valuation/Driver.cpp,
	  code/latte/valuation/PolytopeValuation.cpp,
	  code/latte/valuation/PolytopeValuation.h:
	  BuildRandomPolytope.cpp: changed the gcd function

	  valuation: Computes volume using Polyhedron

2010-07-12 21:53  Matthias Koeppe <mkoeppe@math.ucdavis.edu>

	* ., EXAMPLES/Makefile.am, EXAMPLES/garcia, EXAMPLES/kahle,
	  EXAMPLES/kahle/K4.latte, EXAMPLES/kahle/join.latte,
	  EXAMPLES/kahle/other.latte, EXAMPLES/lehmann,
	  EXAMPLES/nicole-simplex.vrep, EXAMPLES/tests,
	  EXAMPLES/tests/implied-equation.latte,
	  EXAMPLES/tests/missing-newline-2.latte,
	  EXAMPLES/tests/missing-newline-3.latte,
	  EXAMPLES/tests/missing-newline.latte, Makefile.am, NEWS, README,
	  code/latte/Grobner.cpp, code/latte/Makefile.am,
	  code/latte/ReadLatteStyle.cpp, code/latte/ReadPolyhedron.cpp,
	  code/latte/RudyResNTL.cpp, code/latte/VertexConesWith4ti2.cpp,
	  code/latte/adjacency, code/latte/banner.cpp,
	  code/latte/barvinok/barvinok.cpp, code/latte/count.cpp,
	  code/latte/ehrhart.cpp, code/latte/latte_system.cpp,
	  code/latte/maximize.cpp, code/latte/minimize.cpp,
	  code/latte/print.cpp, code/latte/vertices/cdd.cpp,
	  code/test-suite/Makefile.am, code/test-suite/gather-summaries,
	  code/test-suite/grep-results.sh, code/test-suite/test-4ti2.sh,
	  code/test-suite/test-allprimal-exp-maxdet1000-4ti2.sh,
	  code/test-suite/test-allprimal-exp-maxdet1000.sh,
	  code/test-suite/test-cdd-cddlib.sh, code/test-suite/test-cdd.sh,
	  code/test-suite/test-default.sh, code/test-suite/test-homog.sh,
	  code/test-suite/test-irr-exp-maxdet1000-4ti2.sh,
	  code/test-suite/test-irr-exp-maxdet1000.sh,
	  code/test-suite/test-old-latte.pl,
	  code/test-suite/test-some-flavors.sh, code/test-suite/test.pl.in,
	  configure.ac, 
	  m4/topcom-check.m4: Merge from
	  https://polyhedron.math.ucdavis.edu/usvn/svn/latte/branches/version_1_4_branch
	  at revision 1161.

2010-07-10 05:01  Matthias Koeppe <mkoeppe@math.ucdavis.edu>

	* code/latte/Makefile.am: List all header files so make distcheck
	  is clean

2010-07-10 05:01  Matthias Koeppe <mkoeppe@math.ucdavis.edu>

	* code/latte/integration/versusMode.cpp: Add #include necessary on
	  recent gcc

2010-07-10 05:00  Matthias Koeppe <mkoeppe@math.ucdavis.edu>

	* code/latte/integration/testIntegration.sh,
	  code/latte/integration/testIntegration.sh.in,
	  code/latte/integration/testMultiply.sh,
	  code/latte/integration/testMultiply.sh.in, configure.ac:
	  testIntegration.sh and testMultiply.sh are now generated files.

2010-07-10 04:56  Matthias Koeppe <mkoeppe@math.ucdavis.edu>

	* code/latte/integration/blockInt.cpp,
	  code/latte/integration/burstInt.cpp,
	  code/latte/integration/integrateDemo.cpp,
	  code/latte/integration/integrateTest.cpp,
	  code/latte/integration/multiplyTest.cpp,
	  code/latte/interpolation/PolynomialInterpolation.cpp: Add
	  #include necessary on recent gcc

2010-07-10 03:55  Matthias Koeppe <mkoeppe@math.ucdavis.edu>

	* EXAMPLES/birkhoff: Add some extensions to ignore list

2010-07-10 03:22  Matthias Koeppe <mkoeppe@math.ucdavis.edu>

	* code/latte/interpolation/.deps: Remove auto-generated files and
	  directories.

2010-07-10 03:22  Matthias Koeppe <mkoeppe@math.ucdavis.edu>

	* code/latte/testEhrhart/.deps: Remove auto-generated files and
	  directories.

2010-07-10 03:21  Matthias Koeppe <mkoeppe@math.ucdavis.edu>

	* code/latte/interpolation/.dirstamp,
	  code/latte/testEhrhart/.dirstamp: Remove auto-generated files and
	  directories.

2010-07-10 03:02  Matthias Koeppe <mkoeppe@math.ucdavis.edu>

	* autogen.sh: Make autogen.sh executable

2010-07-10 02:58  Matthias Koeppe <mkoeppe@math.ucdavis.edu>

	* code/latte/Makefile.am, code/latte/genFunction/ilio.cpp,
	  code/latte/integration/decomposeTest.mpl,
	  code/latte/integration/multiplyTest.mpl: Make integration test
	  suite less verbose,
	  and reduce the dimension/degree, so that "make check" can
	  actually be run in under a minute, and without flooding the
	  screen
	  with data.

2010-07-10 01:06  Matthias Koeppe <mkoeppe@math.ucdavis.edu>

	* ., code/latte/Makefile.am, code/latte/burstmapletest.mpl,
	  code/latte/integration, code/latte/integration/PolyRep.cpp,
	  code/latte/integration/PolyRep.h,
	  code/latte/integration/PolyTrie.cpp,
	  code/latte/integration/PolyTrie.h,
	  code/latte/integration/benchmark.mpl,
	  code/latte/integration/benchmark.sh,
	  code/latte/integration/blockInt.cpp,
	  code/latte/integration/blockReps.h,
	  code/latte/integration/burstInt.cpp,
	  code/latte/integration/burstTest.cpp,
	  code/latte/integration/burstTrie.h,
	  code/latte/integration/compareTimes.mpl,
	  code/latte/integration/consumers.h,
	  code/latte/integration/createLinear.mpl,
	  code/latte/integration/decompose.cpp,
	  code/latte/integration/decomposeTest.mpl,
	  code/latte/integration/demo_readme.txt,
	  code/latte/integration/integrateDemo.cpp,
	  code/latte/integration/integrateTest.cpp,
	  code/latte/integration/iterators.h,
	  code/latte/integration/multiply.h,
	  code/latte/integration/multiplyTest.cpp,
	  code/latte/integration/multiplyTest.mpl,
	  code/latte/integration/newIntegration.cpp,
	  code/latte/integration/newIntegration.h,
	  code/latte/integration/residue.cpp,
	  code/latte/integration/residue.h,
	  code/latte/integration/testIntegration.sh,
	  code/latte/integration/testMultiply.sh,
	  code/latte/integration/versusMode.cpp,
	  code/latte/polyintegration.tex: Merge integration-branch@1080.
	  Simple build fixes.

2010-06-03 20:07  Jianqiu Wu <wxmwbh14@math.ucdavis.edu>

	* [r1080] code/latte/Makefile.am, code/latte/burstmapletest.mpl,
	  code/latte/integration/blockInt.cpp,
	  code/latte/integration/burstInt.cpp,
	  code/latte/integration/decint.cpp,
	  code/latte/integration/integrate.cpp,
	  code/latte/integration/newIntegration.cpp,
	  code/latte/integration/newIntegration.h: added main programs and
	  changed Makefile

2010-05-27 21:05  Jianqiu Wu <wxmwbh14@math.ucdavis.edu>

	* [r1075] code/latte/Makefile.am: Build convenience library
	  liblatteintegration.a

2010-05-27 21:04  Jianqiu Wu <wxmwbh14@math.ucdavis.edu>

	* [r1074] code/latte/integration/blockInt.cpp:

2010-05-27 19:04  Stanislav Moreinis <moreinis@math.ucdavis.edu>

	* [r1073] code/latte/integration/newIntegration.cpp,
	  code/latte/integration/newIntegration.h: deleted explicit block
	  iteration

2010-05-26 08:47  Stanislav Moreinis <moreinis@math.ucdavis.edu>

	* [r1072] code/latte/Makefile.am,
	  code/latte/integration/PolyRep.cpp,
	  code/latte/integration/PolyRep.h,
	  code/latte/integration/PolyTrie.h,
	  code/latte/integration/blockReps.h,
	  code/latte/integration/burstTrie.h,
	  code/latte/integration/compareTimes.mpl,
	  code/latte/integration/consumers.h,
	  code/latte/integration/integrateDemo.cpp,
	  code/latte/integration/integrateTest.cpp,
	  code/latte/integration/iterators.h,
	  code/latte/integration/multiply.h,
	  code/latte/integration/newIntegration.cpp,
	  code/latte/integration/newIntegration.h,
	  code/latte/integration/versusMode.cpp: More refactoring, added
	  integration comparison between blocks and tries

2010-05-20 20:39  Stanislav Moreinis <moreinis@math.ucdavis.edu>

	* [r1069] code/latte/integration/PolyTrie.h: Fix typo

2010-05-19 23:10  Stanislav Moreinis <moreinis@math.ucdavis.edu>

	* [r1068] code/latte/integration/compareTimes.mpl: Comparison
	  benchmarking

2010-05-19 23:09  Stanislav Moreinis <moreinis@math.ucdavis.edu>

	* [r1067] code/latte/integration/PolyTrie.cpp,
	  code/latte/integration/multiply.h,
	  code/latte/integration/versusMode.cpp: Improved comparison
	  benchmarking

2010-05-18 20:15  Jianqiu Wu <wxmwbh14@math.ucdavis.edu>

	* [r1066] code/latte/shortmemo.doc: a

2010-05-18 20:12  Jianqiu Wu <wxmwbh14@math.ucdavis.edu>

	* [r1065] code/latte/integration/PolyTrie.h,
	  code/latte/integration/myIntegration.h,
	  code/latte/integration/newIntegration.cpp,
	  code/latte/integration/newIntegration.h,
	  code/latte/shortmemo.doc: a

2010-05-18 04:22  Stanislav Moreinis <moreinis@math.ucdavis.edu>

	* [r1064] code/latte/integration/PolyTrie.cpp,
	  code/latte/integration/PolyTrie.h,
	  code/latte/integration/integrateDemo.cpp,
	  code/latte/integration/integrateTest.cpp,
	  code/latte/integration/newIntegration.cpp,
	  code/latte/integration/versusMode.cpp: Decomposition accepts
	  iterator

2010-05-13 20:08  Jianqiu Wu <wxmwbh14@math.ucdavis.edu>

	* [r1063] code/latte/Makefile.am,
	  code/latte/integration/burstTest.cpp,
	  code/latte/integration/decint.cpp,
	  code/latte/integration/newIntegration.cpp,
	  code/latte/integration/newIntegration.h,
	  code/latte/integration/residue.cpp: added some comments

2010-05-13 19:39  Stanislav Moreinis <moreinis@math.ucdavis.edu>

	* [r1062] code/latte/integration/PolyRep.cpp,
	  code/latte/integration/PolyRep.h,
	  code/latte/integration/multiply.h,
	  code/latte/integration/versusMode.cpp: Minor tweaks

2010-05-13 17:47  Stanislav Moreinis <moreinis@math.ucdavis.edu>

	* [r1061] code/latte/integration/PolyRep.h,
	  code/latte/integration/PolyTrie.cpp,
	  code/latte/integration/PolyTrie.h,
	  code/latte/integration/burstTrie.h,
	  code/latte/integration/integrateDemo.cpp,
	  code/latte/integration/integrateTest.cpp,
	  code/latte/integration/multiply.h,
	  code/latte/integration/multiplyTest.cpp,
	  code/latte/integration/newIntegration.cpp,
	  code/latte/integration/residue.cpp,
	  code/latte/integration/versusMode.cpp: Added PolyIterator

2010-05-04 05:14  Stanislav Moreinis <moreinis@math.ucdavis.edu>

	* [r1060] code/latte/integration/benchmark.mpl,
	  code/latte/integration/decomposeTest.mpl,
	  code/latte/integration/integrateTest.cpp,
	  code/latte/integration/newIntegration.cpp,
	  code/latte/integration/newIntegration.h: Making sure benchmarking
	  still works

2010-05-04 04:03  Stanislav Moreinis <moreinis@math.ucdavis.edu>

	* [r1059] code/latte/Makefile.am,
	  code/latte/integration/PolyTrie.cpp,
	  code/latte/integration/PolyTrie.h,
	  code/latte/integration/burstTrie.h,
	  code/latte/integration/createLinear.mpl,
	  code/latte/integration/decompose.cpp,
	  code/latte/integration/decomposeTest.mpl,
	  code/latte/integration/integrateDemo.cpp,
	  code/latte/integration/integrateTest.cpp,
	  code/latte/integration/multiply.h,
	  code/latte/integration/multiplyTest.cpp,
	  code/latte/integration/newIntegration.cpp,
	  code/latte/integration/residue.cpp: Passes existing test suite

2010-05-01 18:03  Jianqiu Wu <wxmwbh14@math.ucdavis.edu>

	* [r1058] code/latte/polyintegration.tex: added file that contains
	  latex code for table

2010-04-29 21:26  Jianqiu Wu <wxmwbh14@math.ucdavis.edu>

	* [r1057] code/latte/Makefile.am, code/latte/burstmapletest.mpl:
	  added burstmapletest.mpl

2010-04-29 20:53  Jianqiu Wu <wxmwbh14@math.ucdavis.edu>

	* [r1056] code/latte/integration/PolyTrie.cpp,
	  code/latte/integration/PolyTrie.h,
	  code/latte/integration/burstTest.cpp,
	  code/latte/integration/createLinear.mpl,
	  code/latte/integration/decint.cpp,
	  code/latte/integration/decomposeTest.mpl,
	  code/latte/integration/newIntegration.cpp,
	  code/latte/integration/newIntegration.h,
	  code/latte/integration/residue.cpp: Update

2010-04-13 06:37  Stanislav Moreinis <moreinis@math.ucdavis.edu>

	* [r1055] code/latte/integration/PolyTrie.cpp,
	  code/latte/integration/burstTrie.h,
	  code/latte/integration/decomposeTest.mpl,
	  code/latte/integration/integrateTest.cpp: Smaller memory
	  footprint

2010-04-07 18:33  Stanislav Moreinis <moreinis@math.ucdavis.edu>

	* [r1054] code/latte/Makefile.am,
	  code/latte/integration/PolyRep.cpp,
	  code/latte/integration/PolyRep.h,
	  code/latte/integration/PolyTrie.cpp,
	  code/latte/integration/PolyTrie.h,
	  code/latte/integration/burstTrie.h,
	  code/latte/integration/decomposeTest.mpl,
	  code/latte/integration/integrateDemo.cpp,
	  code/latte/integration/integrateTest.cpp,
	  code/latte/integration/multiply.h,
	  code/latte/integration/multiplyTest.cpp,
	  code/latte/integration/multiplyTest.mpl,
	  code/latte/integration/newIntegration.cpp,
	  code/latte/integration/newIntegration.h,
	  code/latte/integration/residue.cpp,
	  code/latte/integration/testMultiply.sh,
	  code/latte/integration/versusMode.cpp: Classes instead of structs

2010-03-29 07:35  Stanislav Moreinis <moreinis@math.ucdavis.edu>

	* [r1053] code/latte/integration/PolyTrie.cpp,
	  code/latte/integration/PolyTrie.h,
	  code/latte/integration/burstTrie.h: More files

2010-03-29 07:11  Stanislav Moreinis <moreinis@math.ucdavis.edu>

	* [r1052] code/latte/Makefile.am,
	  code/latte/integration/decint.cpp,
	  code/latte/integration/decomposeTest.mpl,
	  code/latte/integration/integrateDemo.cpp,
	  code/latte/integration/integrateTest.cpp,
	  code/latte/integration/multiply.h,
	  code/latte/integration/multiplyTest.mpl,
	  code/latte/integration/newIntegration.cpp,
	  code/latte/integration/newIntegration.h,
	  code/latte/integration/residue.cpp,
	  code/latte/integration/residue.h: Added Burst Tries

2010-03-16 01:23  Stanislav Moreinis <moreinis@math.ucdavis.edu>

	* [r1051] code/latte/integration/createLinear.mpl: commented out
	  sample usage of random generation function

2010-03-16 01:04  Stanislav Moreinis <moreinis@math.ucdavis.edu>

	* [r1050] code/latte/integration/createLinear.mpl,
	  code/latte/integration/decomposeTest.mpl: Updated make check

2010-03-15 20:11  Stanislav Moreinis <moreinis@math.ucdavis.edu>

	* [r1049] code/latte/Makefile.am,
	  code/latte/integration/benchmark.mpl,
	  code/latte/integration/decomposeTest.mpl,
	  code/latte/integration/integrateTest.cpp: make check bugfix

2010-03-13 23:29  Stanislav Moreinis <moreinis@math.ucdavis.edu>

	* [r1048] code/latte/Makefile.am: Also updated Makefile

2010-03-13 23:29  Stanislav Moreinis <moreinis@math.ucdavis.edu>

	* [r1047] code/latte/integration/PolyRep.cpp,
	  code/latte/integration/benchmark.mpl,
	  code/latte/integration/benchmark.sh,
	  code/latte/integration/createLinear.mpl,
	  code/latte/integration/decomposeTest.mpl,
	  code/latte/integration/demo_readme.txt,
	  code/latte/integration/integrateDemo.cpp,
	  code/latte/integration/integrateTest.cpp,
	  code/latte/integration/newIntegration.cpp,
	  code/latte/integration/testIntegration.sh: Added readme, demo

2010-03-01 08:17  Jianqiu Wu <wxmwbh14@math.ucdavis.edu>

	* [r1046] code/latte/integration/createLinear.mpl: new createLinear

2010-02-28 01:32  Stanislav Moreinis <moreinis@math.ucdavis.edu>

	* [r1045] code/latte/integration/benchmark.mpl,
	  code/latte/integration/createLinear.mpl,
	  code/latte/integration/decomposeTest.mpl,
	  code/latte/integration/integrateTest.cpp: Refactored testing and
	  benchmarking

2010-02-26 09:11  Stanislav Moreinis <moreinis@math.ucdavis.edu>

	* [r1044] code/latte/integration/decomposeTest.mpl,
	  code/latte/integration/integrateTest.cpp,
	  code/latte/integration/newIntegration.h: Timeout option to
	  integrate_test

2010-02-26 03:35  Stanislav Moreinis <moreinis@math.ucdavis.edu>

	* [r1043] code/latte/integration/createLinear.mpl,
	  code/latte/integration/decomposeTest.mpl: testing script update

2010-02-19 15:47  Jianqiu Wu <wxmwbh14@math.ucdavis.edu>

	* [r1042] code/latte/integration/createLinear.mpl: corrected
	  something

2010-02-19 06:05  Jianqiu Wu <wxmwbh14@math.ucdavis.edu>

	* [r1041] code/latte/integration/createLinear.mpl: added some
	  comments

2010-02-19 06:03  Jianqiu Wu <wxmwbh14@math.ucdavis.edu>

	* [r1040] code/latte/integration/createLinear.mpl: added file named
	  createLinear, which creates difficult random linear form with
	  specified multiplicity

2010-02-18 22:46  Jianqiu Wu <wxmwbh14@math.ucdavis.edu>

	* [r1039] code/latte/integration/decint.cpp: d

2010-02-18 22:43  Jianqiu Wu <wxmwbh14@math.ucdavis.edu>

	* [r1038] code/latte/integration/newIntegration.cpp: deleted
	  debuging output
	  This line, and those below, will be ignored--
	  
	  M integration/newIntegration.cpp

2010-02-18 22:19  Jianqiu Wu <wxmwbh14@math.ucdavis.edu>

	* [r1037] code/latte/integration/decint.cpp,
	  code/latte/integration/newIntegration.cpp,
	  code/latte/integration/residue.cpp: corrected errors again

2010-02-18 08:11  Jianqiu Wu <wxmwbh14@math.ucdavis.edu>

	* [r1036] code/latte/integration/decint.cpp,
	  code/latte/integration/newIntegration.cpp: corrected mistake

2010-02-14 03:22  Stanislav Moreinis <moreinis@math.ucdavis.edu>

	* [r1035] code/latte/integration/decomposeTest.mpl,
	  code/latte/integration/integrateTest.cpp: Testing script logs
	  integration errors in error.log, draws timing results in
	  benchmarks.txt

2010-02-14 01:25  Stanislav Moreinis <moreinis@math.ucdavis.edu>

	* [r1034] code/latte/Makefile.am,
	  code/latte/integration/PolyRep.cpp,
	  code/latte/integration/PolyRep.h,
	  code/latte/integration/decomposeTest.mpl,
	  code/latte/integration/integrateTest.cpp,
	  code/latte/integration/newIntegration.cpp,
	  code/latte/integration/newIntegration.h,
	  code/latte/integration/residue.cpp,
	  code/latte/integration/residue.h: Updated testing to check
	  irregular forms

2010-02-12 16:18  Jianqiu Wu <wxmwbh14@math.ucdavis.edu>

	* [r1033] code/latte/integration/newIntegration.cpp: added a little
	  output for book keeping.

2010-02-12 08:17  Jianqiu Wu <wxmwbh14@math.ucdavis.edu>

	* [r1032] code/latte/integration/PolyRep.cpp,
	  code/latte/integration/PolyRep.h,
	  code/latte/integration/decint.cpp,
	  code/latte/integration/newIntegration.cpp,
	  code/latte/integration/newIntegration.h,
	  code/latte/integration/residue.cpp,
	  code/latte/integration/residue.h: I ran small examples and the
	  residue seems to work properly.
	  I also changed the PolyRep in that I added the power function
	  back and I modified linear form parsing to adjust for the missing
	  factorial.

2010-02-11 23:28  Stanislav Moreinis <moreinis@math.ucdavis.edu>

	* [r1031] code/latte/integration/multiplyTest.cpp: Using INT_MIN
	  and INT_MAX for exponent cutoffs

2010-02-11 23:23  Stanislav Moreinis <moreinis@math.ucdavis.edu>

	* [r1030] code/latte/Makefile.am,
	  code/latte/integration/PolyRep.cpp,
	  code/latte/integration/PolyRep.h,
	  code/latte/integration/multiply.h,
	  code/latte/integration/multiplyTest.cpp,
	  code/latte/integration/multiplyTest.mpl,
	  code/latte/integration/testMultiply.sh: Added basic testing suite
	  for multiplication

2010-02-05 05:17  Jianqiu Wu <wxmwbh14@math.ucdavis.edu>

	* [r1029] code/latte/integration/newIntegration.cpp,
	  code/latte/integration/residue.cpp: I changed residue.cpp, which
	  now multiplies series and compute the residue

2010-02-02 03:55  Stanislav Moreinis <moreinis@math.ucdavis.edu>

	* [r1026] code/latte/integration/PolyRep.cpp,
	  code/latte/integration/PolyRep.h,
	  code/latte/integration/decomposeTest.mpl,
	  code/latte/integration/integrateTest.cpp,
	  code/latte/integration/newIntegration.cpp,
	  code/latte/integration/newIntegration.h: Moved
	  FormIntegrateConsumer

2010-01-29 18:50  Jianqiu Wu <wxmwbh14@math.ucdavis.edu>

	* [r1025] code/latte/integration/residue.cpp,
	  code/latte/integration/residue.h: new files, but haven't compiled
	  them yet

2010-01-28 11:15  Stanislav Moreinis <moreinis@math.ucdavis.edu>

	* [r1024] code/latte/integration/PolyRep.cpp,
	  code/latte/integration/PolyRep.h,
	  code/latte/integration/decomposeTest.mpl,
	  code/latte/integration/integrateTest.cpp,
	  code/latte/integration/newIntegration.cpp: Templated
	  coefficients, set string parsers to accept generic form
	  consumers, implemented monomial multiplication

2010-01-22 05:51  Stanislav Moreinis <moreinis@math.ucdavis.edu>

	* [r1023] code/latte/Makefile.am,
	  code/latte/integration/PolyRep.cpp,
	  code/latte/integration/PolyRep.h,
	  code/latte/integration/decomposeTest.mpl,
	  code/latte/integration/integrateTest.cpp,
	  code/latte/integration/newIntegration.cpp,
	  code/latte/integration/newIntegration.h: Updated PolyRep
	  structure, optimized decomposition, updated Makefile.am

2010-01-22 01:07  Jianqiu Wu <wxmwbh14@math.ucdavis.edu>

	* [r1022] code/latte/integration/newIntegration.cpp: a
	  
	  -This line, and those below, will be ignored--
	  
	  M integration/newIntegration.cpp

2010-01-22 00:57  Jianqiu Wu <wxmwbh14@math.ucdavis.edu>

	* [r1021] code/latte/integration/decint.cpp,
	  code/latte/integration/newIntegration.cpp,
	  code/latte/integration/newIntegration.h:

2010-01-19 21:57  Stanislav Moreinis <moreinis@math.ucdavis.edu>

	* [r1020] code/latte/integration/integrateTest.cpp: Added testing
	  executable for the Maple test script

2010-01-19 21:57  Stanislav Moreinis <moreinis@math.ucdavis.edu>

	* [r1019] code/latte/integration/decomposeTest.mpl: Maple testing
	  script now times and verifies both decompositions and integrals

2010-01-15 01:24  Jianqiu Wu <wxmwbh14@math.ucdavis.edu>

	* [r1018] code/latte/integration/decint.cpp,
	  code/latte/integration/newIntegration.h: changed spacing

2010-01-14 23:40  Jianqiu Wu <wxmwbh14@math.ucdavis.edu>

	* [r1017] code/latte/integration/decint.cpp,
	  code/latte/integration/decompose.cpp,
	  code/latte/integration/multipoly.h,
	  code/latte/integration/newIntegration.h,
	  code/latte/integration/test.cpp: I fixed the space problem.

2010-01-14 22:20  Stanislav Moreinis <moreinis@math.ucdavis.edu>

	* [r1016] code/latte/integration/PolyRep.cpp,
	  code/latte/integration/decomposeTest.mpl,
	  code/latte/integration/newIntegration.h: Test program now detects
	  irregular forms.

2010-01-14 21:06  Stanislav Moreinis <moreinis@math.ucdavis.edu>

	* [r1015] code/latte/integration/PolyRep.cpp,
	  code/latte/integration/decomposeTest.mpl,
	  code/latte/integration/newIntegration.h: Added integration into
	  testing suite.

2010-01-13 03:09  Jianqiu Wu <wxmwbh14@math.ucdavis.edu>

	* [r1014] code/latte/integration/decint.cpp,
	  code/latte/integration/newIntegration.h: new integration, type an
	  option for the mode of integration: polynoimal or linear

2010-01-12 22:51  Stanislav Moreinis <moreinis@math.ucdavis.edu>

	* [r1013] code/latte/Makefile.am,
	  code/latte/integration/PolyRep.cpp,
	  code/latte/integration/PolyRep.h,
	  code/latte/integration/decompose.cpp,
	  code/latte/integration/decomposeTest.mpl,
	  code/latte/integration/testIntegration.sh: Improved structure
	  names, set up make check to run the maple test script.

2010-01-09 03:37  Jianqiu Wu <wxmwbh14@math.ucdavis.edu>

	* [r1012] code/latte/integration/multipoly.txt: delete
	  multipoly.txt
	  
	  This line, and those below, will be ignored--
	  
	  D integration/multipoly.txt

2010-01-09 03:17  Jianqiu Wu <wxmwbh14@math.ucdavis.edu>

	* [r1011] code/latte/integration/multipoly.txt,
	  code/latte/integration/newIntegration.h:

2010-01-08 22:27  Jianqiu Wu <wxmwbh14@math.ucdavis.edu>

	* [r1010] code/latte/integration/decint.cpp,
	  code/latte/integration/multipoly.txt,
	  code/latte/integration/newIntegration.h: A
	  integration/newIntegration.h
	  A integration/decint.cpp
	  M integration/multipoly.txt

2010-01-08 17:29  Stanislav Moreinis <moreinis@math.ucdavis.edu>

	* [r1009] code/latte/integration/PolyRep.cpp,
	  code/latte/integration/decompose.cpp,
	  code/latte/integration/decomposeTest.mpl: Better maple script,
	  improvements to PolyRep and decomposition.

2010-01-02 02:24  Stanislav Moreinis <moreinis@math.ucdavis.edu>

	* [r1007] code/latte/integration/PolyRep.cpp,
	  code/latte/integration/PolyRep.h,
	  code/latte/integration/decompose.cpp,
	  code/latte/integration/decomposeTest.mpl,
	  code/latte/integration/multipoly.txt: Basic testing script, more
	  bug fixes.

2009-12-28 23:41  Jianqiu Wu <wxmwbh14@math.ucdavis.edu>

	* [r1006] code/latte/integration/integrate.cpp,
	  code/latte/integration/multipoly.txt,
	  code/latte/integration/myIntegration.h:

2009-12-23 20:40  Stanislav Moreinis <moreinis@math.ucdavis.edu>

	* [r1005] code/latte/integration/PolyRep.cpp,
	  code/latte/integration/PolyRep.h,
	  code/latte/integration/decompose.cpp,
	  code/latte/integration/multipoly.h: Revised decomposition, added
	  output alternative.

2009-12-18 05:44  Stanislav Moreinis <moreinis@math.ucdavis.edu>

	* [r1004] code/latte/integration/PolyRep.cpp,
	  code/latte/integration/PolyRep.h: Decomposition improvements

2009-12-18 02:13  Stanislav Moreinis <moreinis@math.ucdavis.edu>

	* [r1003] code/latte/Makefile.am,
	  code/latte/integration/PolyRep.cpp,
	  code/latte/integration/PolyRep.h: Modified Makefile.am

2009-12-17 21:51  Stanislav Moreinis <moreinis@math.ucdavis.edu>

	* [r1002] code/latte/integration/PolyRep.cpp,
	  code/latte/integration/PolyRep.h: Improved polynomial
	  representation, added decomposition.

2009-12-17 04:26  Jianqiu Wu <wxmwbh14@math.ucdavis.edu>

	* [r1001] code/latte/integration/multipoly.h,
	  code/latte/integration/multipoly.txt,
	  code/latte/integration/test.cpp: multipoly.h stores the
	  multivariate polynomial.
	  multipoly.txt is a sample input.
	  test.cpp is a test program.

2009-12-15 05:36  Stanislav Moreinis <moreinis@math.ucdavis.edu>

	* [r1000] code/latte/integration/PolyRep.cpp,
	  code/latte/integration/PolyRep.h,
	  code/latte/integration/decompose.cpp: Added basic polynomial
	  representation as well as input / output procedures.

2009-12-12 20:01  Matthias Koeppe <mkoeppe@math.ucdavis.edu>

	* [r999] code/latte/integration:

2009-12-11 21:38  Matthias Koeppe <mkoeppe@math.ucdavis.edu>

	* [r998] .: New branch for integration project

2010-07-09 22:35  Brandon Dutra <bedutra@ucdavis.edu>

	* code/latte/valuation/Driver.cpp,
	  code/latte/valuation/PolytopeValuation.cpp: It seems
	  ValuationComputation is now working using the count-way of
	  reading in the file.
	  
	  TO DO:
	  
	  --Fix the PolytopeValuation: change the constructor to take a
	  polytope.
	  --use gdb to set through the main funtion to see what is used
	  (with and without using the strong cdd option), so we can learn
	  what we can cut in the main function
	  --add command line options like before.
	  --remove debug cout's?
	  --remove the old main function?

2010-07-09 22:26  Matthias Koeppe <mkoeppe@math.ucdavis.edu>

	* code/latte/genFunction/ilio.cpp: Change ilio test dimensions so
	  it finishes in a few seconds

2010-07-09 17:14  Brandon Dutra <bedutra@ucdavis.edu>

	* code/latte/valuation/Driver.cpp: Updated the help menu.

2010-07-09 04:57  Brandon Dutra <bedutra@ucdavis.edu>

	* code/latte/ehrhart2: updated the -options menu

2010-07-08 17:59  Brandon Dutra <bedutra@ucdavis.edu>

	* code/latte/rational.cpp, code/latte/rational.h,
	  code/latte/valuation/Driver.cpp,
	  code/latte/valuation/PolytopeValuation.cpp: 1) forgot to free
	  some memeory in triangulating in the lawrence volume computation.
	  2) Added another constructor to the rationalNTL class.

2010-07-07 23:53  Brandon Dutra <bedutra@ucdavis.edu>

	* code/latte/Makefile.am, code/latte/rational.cpp,
	  code/latte/rational.h, code/latte/valuation/Driver.cpp,
	  code/latte/valuation/PolytopeValuation.cpp,
	  code/latte/valuation/PolytopeValuation.h: Added testing
	  hypersimplex volume checking to the driver.

2010-07-07 19:11  Brandon Dutra <bedutra@ucdavis.edu>

	* code/latte/valuation/Driver.cpp,
	  code/latte/valuation/PolytopeValuation.cpp,
	  code/latte/valuation/PolytopeValuation.h: Updaed comments

2010-07-06 21:20  Brandon Dutra <bedutra@ucdavis.edu>

	* code/latte/valuation/Driver.cpp,
	  code/latte/valuation/PolytopeValuation.cpp,
	  code/latte/valuation/PolytopeValuation.h: Changed the name of the
	  printRationalFunction() to printLawrenceVolumeFunction()

2010-07-06 20:13  Brandon Dutra <bedutra@ucdavis.edu>

	* code/latte/valuation/Driver.cpp,
	  code/latte/valuation/PolytopeValuation.cpp: Printing the rational
	  function now works.

2010-07-06 19:52  Gregory Pinto <gpinto@math.ucdavis.edu>

	* code/latte/valuation/Driver.cpp,
	  code/latte/valuation/PolytopeValuation.cpp,
	  code/latte/valuation/PolytopeValuation.h: did the raional funcion
	  printing, SHOULD work

2010-07-06 19:45  Brandon Dutra <bedutra@ucdavis.edu>

	* code/latte/valuation/Driver.cpp,
	  code/latte/valuation/PolytopeValuation.cpp,
	  code/latte/valuation/PolytopeValuation.h: moved decomposed cones
	  call to the class

2010-07-06 06:34  Brandon Dutra <bedutra@ucdavis.edu>

	* code/latte/rational.cpp, code/latte/rational.h,
	  code/latte/testEhrhart/BuildRandomPolytope.cpp,
	  code/latte/testEhrhart/BuildRandomPolytope.h,
	  code/latte/testEhrhart/Driver.cpp,
	  code/latte/valuation/Driver.cpp,
	  code/latte/valuation/PolytopeValuation.cpp: rational.*: added a
	  == and != operator ro the RationalNTL class.
	  testEhrhart/*: added options to make a random-rational vertex
	  polytope. (I force the randome polytope to have at least one
	  integer vertex, so the number of lattice points is positive).
	  
	  valuation/*: added an automatic testing function to find volums
	  on different polytopes. I do call polymake to find the volume but
	  this number is meaning less if the polytope is not fully dim, and
	  so I do not use it to check our answers. Instead, I simply check
	  that both of our methods [Lawrence & triang.] return the same
	  answer for the volume. I'm also now calling free on some data
	  structures. It seems that some of the variables have pointers to
	  the same objects, so you cannot simply just call free on
	  everything. I need to look closely at what *matrix, *temp, etc
	  are pointing to.
	  
	  valuation/Driver.cpp: The main function calles 3 other functions,
	  but only one should be compiled at a time. 1) the old main
	  programe, 2) test a random polytope (usage:
	  ./ValuationComputation amb_dim num_points), and 3) A automatic
	  test script.
	  
	  
	  ok, good night.

2010-07-04 00:58  Brandon Dutra <bedutra@ucdavis.edu>

	* code/latte/rational.cpp, code/latte/rational.h,
	  code/latte/valuation/Driver.cpp,
	  code/latte/valuation/PolytopeValuation.cpp,
	  code/latte/valuation/PolytopeValuation.h: Rational: added a
	  fraction mult. method to the RationalNTL class.
	  valuation/*: Moved both volume computations to the
	  PolytopeValuation class, added comments.
	  valuation/Driver: Added command line options for what valuation
	  should be used (default is volume) and what alg. to use (default
	  is 'all'), and a help menu (but the help menu is not working just
	  right)
	  
	  
	  I just realized that I left the decompostCones() call in the
	  driver, but this should be moved to PolytopeValuation. I'm too
	  tired to do this today...
	  
	  Everything should work.

2010-07-02 23:57  Brandon Dutra <bedutra@ucdavis.edu>

	* code/latte/testEhrhart/BuildRandomPolytope.cpp: updated the
	  deconstructor

2010-07-02 21:59  Gregory Pinto <gpinto@math.ucdavis.edu>

	* code/latte/valuation/Driver.cpp: removed the dot product function
	  (it's defined in vec_ZZ)
	  used the factorial function to make it uniform with the other
	  functions

2010-07-02 21:20  Gregory Pinto <gpinto@math.ucdavis.edu>

	* code/latte/valuation/Driver.cpp: actually big fixed it this time,
	  collapsed into one function
	  due to similairty after the bug fix

2010-07-02 20:58  Gregory Pinto <gpinto@math.ucdavis.edu>

	* code/latte/valuation/Driver.cpp: reverted compute triang volume
	  to its working state

2010-07-02 20:27  Brandon Dutra <bedutra@ucdavis.edu>

	* code/latte/valuation/PolytopeValuation.cpp,
	  code/latte/valuation/PolytopeValuation.h: a.

2010-07-02 20:26  Brandon Dutra <bedutra@ucdavis.edu>

	* code/latte/valuation/Driver.cpp: fixed poly in trangulated volume

2010-07-02 20:20  Gregory Pinto <gpinto@math.ucdavis.edu>

	* code/latte/valuation/Driver.cpp: merged the change to
	  traingulated volume

2010-07-02 20:18  Brandon Dutra <bedutra@ucdavis.edu>

	* code/latte/valuation/Driver.cpp: starting to fix volume
	  computation for tri.

2010-07-01 16:58  Brandon Dutra <bedutra@ucdavis.edu>

	* code/latte/valuation/Driver.cpp,
	  code/latte/valuation/PolytopeValuation.cpp:

2010-06-30 22:09  Brandon Dutra <bedutra@ucdavis.edu>

	* code/latte/ehrhart2: fixed clean

2010-06-30 22:07  Brandon Dutra <bedutra@ucdavis.edu>

	* code/latte/ehrhart2: fixed clean

2010-06-30 21:59  Brandon Dutra <bedutra@ucdavis.edu>

	* code/latte/ehrhart2: fixed clean

2010-06-30 21:23  Brandon Dutra <bedutra@ucdavis.edu>

	* code/latte/Makefile.am: Added to ValuationComputation

2010-06-30 21:17  Brandon Dutra <bedutra@ucdavis.edu>

	* code/latte/valuation/PolytopeValuation.cpp,
	  code/latte/valuation/PolytopeValuation.h: call polymake to find
	  volume

2010-06-30 21:16  Brandon Dutra <bedutra@ucdavis.edu>

	* code/latte/rational.cpp, code/latte/rational.h: Added a
	  RationalNTL class

2010-06-30 21:15  Brandon Dutra <bedutra@ucdavis.edu>

	* code/latte/testEhrhart/BuildRandomPolytope.cpp,
	  code/latte/testEhrhart/BuildRandomPolytope.h,
	  code/latte/valuation/Driver.cpp: Quick fixes

2010-06-30 21:11  Brandon Dutra <bedutra@ucdavis.edu>

	* code/latte/valuation/Driver.cpp: Merged the two volume
	  computations.

2010-06-30 21:08  Gregory Pinto <gpinto@math.ucdavis.edu>

	* code/latte/valuation/Driver.cpp: making sure there are no changes
	  that won't get manually merged

2010-06-30 19:54  Brandon Dutra <bedutra@ucdavis.edu>

	* code/latte/ehrhart2: Different runs are now isolated from
	  eachother, except from the matlab/maple command files.

2010-06-30 00:58  Gregory Pinto <gpinto@math.ucdavis.edu>

	* code/latte/valuation/Driver.cpp: began implementing genreic
	  lawrence algorithm and symbolic function printing

2010-06-30 00:56  Brandon Dutra <bedutra@ucdavis.edu>

	* code/latte/valuation/PolytopeValuation.cpp,
	  code/latte/valuation/PolytopeValuation.h:

2010-06-29 22:21  Brandon Dutra <bedutra@ucdavis.edu>

	* code/latte/valuation/Driver.cpp: I merged the trangulation and
	  rational function methods.

2010-06-29 22:03  Gregory Pinto <gpinto@math.ucdavis.edu>

	* code/latte/valuation/Driver.cpp: beginning of unimodular volume
	  stuff

2010-06-29 20:04  Brandon Dutra <bedutra@ucdavis.edu>

	* code/latte/Makefile.am, code/latte/valuation/Driver.cpp,
	  code/latte/valuation/PolytopeValuation.cpp,
	  code/latte/valuation/PolytopeValuation.h: Added computing volume
	  by trangulating the polytope for polytopes with INTEGER vertices
	  only. This will need to be updated later.

2010-06-29 20:02  Brandon Dutra <bedutra@ucdavis.edu>

	* code/latte/rational.h: Added a getEntry method to get the ith
	  engry in rational vectors.

2010-06-29 20:01  Brandon Dutra <bedutra@ucdavis.edu>

	* code/latte/cone.h: Added a default constructor.

2010-06-26 21:36  Brandon Dutra <bedutra@ucdavis.edu>

	* code/latte/interpolation/PolynomialInterpolation.cpp,
	  code/latte/interpolation/PolynomialInterpolation.h,
	  code/latte/testEhrhart/Driver.cpp,
	  code/latte/valuation/Driver.cpp, code/latte/volume: delete the
	  volume director.
	  I still do not know how to fix the trangulation problem.

2010-06-25 20:39  Brandon Dutra <bedutra@ucdavis.edu>

	* code/latte/Makefile.am,
	  code/latte/valuation/PolytopeValuation.cpp,
	  code/latte/valuation/PolytopeValuation.h: still not working
	  right.

2010-06-24 23:37  Brandon Dutra <bedutra@ucdavis.edu>

	* code/latte/Makefile.am, code/latte/valuation,
	  code/latte/valuation/Driver.cpp: Apply a valuation function (like
	  volume) to any polytope.
	  
	  This is not done.
	  
	  To do:
	  +find the volume
	  +Move the code out of Driver to some class like PolytopeValuation
	  +pass a "valuation function" to the class...somehow the user
	  should be able to pass a function pointer or a class (with a
	  virtual function) to do the valuation

2010-06-24 23:05  Brandon Dutra <bedutra@ucdavis.edu>

	* code/latte/volume, code/latte/volume/Driver.cpp,
	  code/latte/volume/PolytopeVolume.cpp,
	  code/latte/volume/PolytopeVolume.h: We sould change the name of
	  these files.....
	  
	  
	  This is not done. Will be able to compute any valuations on
	  polytopes.

2010-06-23 22:39  Brandon Dutra <bedutra@ucdavis.edu>

	* code/latte/Makefile.am: renamed BuildRandomEdgePolytope.* files.

2010-06-23 22:38  Brandon Dutra <bedutra@ucdavis.edu>

	* code/latte/testEhrhart/.deps/Driver.Po,
	  code/latte/testEhrhart/BuildGraphPolytope.cpp,
	  code/latte/testEhrhart/BuildGraphPolytope.h,
	  code/latte/testEhrhart/BuildHypersimplexEdgePolytope.o,
	  code/latte/testEhrhart/BuildRandomEdgePolytope.cpp,
	  code/latte/testEhrhart/BuildRandomEdgePolytope.h,
	  code/latte/testEhrhart/BuildRandomPolytope.cpp,
	  code/latte/testEhrhart/BuildRandomPolytope.h,
	  code/latte/testEhrhart/Driver.cpp,
	  code/latte/testEhrhart/GraphMaker.cpp,
	  code/latte/testEhrhart/GraphMaker.h: GraphMaker: added Kneser
	  graphs option
	  Others: added better comments.

2010-06-23 22:36  Brandon Dutra <bedutra@ucdavis.edu>

	* code/latte/testEhrhart/BuildHypersimplexEdgePolytope.cpp,
	  code/latte/testEhrhart/BuildHypersimplexEdgePolytope.h,
	  code/latte/testEhrhart/BuildHypersimplexEdgePolytope.o: Renamed
	  BuildRandomEdgePoly... with BuildHypersimplex

2010-06-22 23:14  Brandon Dutra <bedutra@ucdavis.edu>

	* code/latte/ehrhart2: changed the auto-save file name.

2010-06-21 19:46  Peter Malkin <malkin@math.ucdavis.edu>

	* code/latte/normalize/Makefile.am: Updated Makefile.am so that
	  nothing is compiled if 4ti2 is not found.

2010-06-21 17:23  Brandon Dutra <bedutra@ucdavis.edu>

	* code/latte/ehrhart2, code/latte/ehrhart3.cpp: Moved making the
	  matlab and mable command files from ehrhart2 to ehrhart3.cpp
	  because the polynomial was too large to fit in one string in
	  matlab, so I needed to loop over each monomial.

2010-06-21 17:17  Brandon Dutra <bedutra@ucdavis.edu>

	* code/latte/testEhrhart/.deps/Driver.Po,
	  code/latte/testEhrhart/BuildGraphPolytope.cpp,
	  code/latte/testEhrhart/BuildRandomEdgePolytope.cpp,
	  code/latte/testEhrhart/BuildRandomPolytope.cpp,
	  code/latte/testEhrhart/BuildRandomPolytope.h,
	  code/latte/testEhrhart/Driver.cpp: added default comments (used
	  when calling ehrhart2)

2010-06-21 17:16  Brandon Dutra <bedutra@ucdavis.edu>

	* code/latte/testEhrhart/GraphMaker.cpp: building the spanning tree
	  was not very random (forgot to push_back on the used vertex
	  vector). The graphs are now really random

2010-06-19 00:32  Gregory Pinto <gpinto@math.ucdavis.edu>

	* code/latte/ehrhart2: Added options about which program to use to
	  compute the roots. Implemented the -R option.
	  Added optional commenting to allow saved ehrhart files to have a
	  comment as the last line.
	  Took out commented out code and fixed a typo.

2010-06-19 00:11  Brandon Dutra <bedutra@ucdavis.edu>

	* code/latte/ehrhart2: Updated the matlab and maple calling. Maple
	  calling is still not perfect: it will not print complex numbers!

2010-06-18 23:58  Jesus De Loera <deloera@math.ucdavis.edu>

	* code/latte/Makefile.am: case sensitive filename fix

2010-06-18 20:44  Brandon Dutra <bedutra@ucdavis.edu>

	* code/latte/ehrhart2: Runs the Ehrhart poly to matlab (using sym)
	  and maple (using numbers)

2010-06-18 18:22  Gregory Pinto <gpinto@math.ucdavis.edu>

	* code/latte/ehrhart2: added a help and save, implemented most
	  options

2010-06-18 16:11  Brandon Dutra <bedutra@ucdavis.edu>

	* code/latte/ehrhart3.cpp: make sure vec[0] == 1.

2010-06-17 21:56  Gregory Pinto <gpinto@math.ucdavis.edu>

	* code/latte/ehrhart2: began options implementation
	  currently, all that it can do is get the real part of the roots
	  of the polynomials with the -r option at the end

2010-06-17 20:40  Gregory Pinto <gpinto@math.ucdavis.edu>

	* code/latte/ehrhart3.cpp: modified output to have *'s for
	  multiplication and prints the number of negative coefficients

2010-06-17 20:26  Brandon Dutra <bedutra@ucdavis.edu>

	* code/latte/Makefile.am: update testEhrhart build rules

2010-06-17 20:26  Brandon Dutra <bedutra@ucdavis.edu>

	* code/latte/testEhrhart/.deps/Driver.Po,
	  code/latte/testEhrhart/BuildGraphPolytope.cpp,
	  code/latte/testEhrhart/BuildGraphPolytope.h,
	  code/latte/testEhrhart/BuildRandomEdgePolytope.cpp,
	  code/latte/testEhrhart/BuildRandomEdgePolytope.h,
	  code/latte/testEhrhart/BuildRandomPolytope.cpp,
	  code/latte/testEhrhart/BuildRandomPolytope.h,
	  code/latte/testEhrhart/Driver.cpp,
	  code/latte/testEhrhart/GraphMaker.cpp,
	  code/latte/testEhrhart/GraphMaker.h: New:class GraphMaker() makes
	  graphs.
	  class BuildGraphPolytope() makes edge or symmetric edge polytopes

2010-06-16 21:27  Gregory Pinto <gpinto@math.ucdavis.edu>

	* code/latte/ehrhart2: dded checking to make sure ehrhart didn't
	  screw up somehow

2010-06-16 08:39  Brandon Dutra <bedutra@ucdavis.edu>

	* code/latte/testEhrhart, code/latte/testEhrhart/.deps,
	  code/latte/testEhrhart/.deps/.dirstamp,
	  code/latte/testEhrhart/.deps/BuildRandomEdgePolytope.Po,
	  code/latte/testEhrhart/.deps/BuildRandomPolytope.Po,
	  code/latte/testEhrhart/.deps/Driver.Po,
	  code/latte/testEhrhart/.dirstamp,
	  code/latte/testEhrhart/BuildRandomEdgePolytope.cpp,
	  code/latte/testEhrhart/BuildRandomEdgePolytope.h,
	  code/latte/testEhrhart/BuildRandomPolytope.cpp,
	  code/latte/testEhrhart/BuildRandomPolytope.h,
	  code/latte/testEhrhart/Driver.cpp: Added testEhrhart.out: will
	  generate random points, call polymake to get the equations, and
	  then call ehrhart to find the polynomial.

	  Not finished.

	  Things to do: fix the part where I call ehrhart2 (I'm not reading
	  in the data right).

2010-05-28 00:53  Gregory Pinto <gpinto@math.ucdavis.edu>

	* code/latte/Makefile.am: updated to include the ehrhart polnomial
	  interpretation files
	  unable to commit simultaneously due to conflict error

2010-05-28 00:50  Gregory Pinto <gpinto@math.ucdavis.edu>

	* code/latte/ehrhart2, code/latte/ehrhart3.cpp: Files required to
	  take the output of
	  ./ehrhart [n] [input]
	  and interpolate the Ehrhart polynomial under the assumption
	  that the polytope has integer coordinate vertices

2010-05-27 22:25  Brandon Dutra <bedutra@ucdavis.edu>

	* code/latte/Makefile.am: updated the myTest rule because I changed
	  the file names of the polynomial interpolation class.

2010-05-27 22:22  Brandon Dutra <bedutra@ucdavis.edu>

	* code/latte/interpolation/.deps/testDriver.Po,
	  code/latte/interpolation/PolynomialInt.cpp,
	  code/latte/interpolation/PolynomialInt.h,
	  code/latte/interpolation/PolynomialInterpolation.cpp,
	  code/latte/interpolation/PolynomialInterpolation.h,
	  code/latte/interpolation/testDriver.cpp: Changed the name of the
	  class to something more meaning full.

	  Cleaned up the code, added comments.

2010-05-26 04:34  Brandon Dutra <bedutra@ucdavis.edu>

	* code/latte/interpolation/PolynomialInt.cpp,
	  code/latte/interpolation/PolynomialInt.h,
	  code/latte/interpolation/testDriver.cpp: getSolution() was not
	  returning the correct column.
	  Tested the class on random poly. and random points. I feel the
	  class is correct.

	  to do
	  1) add comments, clean things up.

2010-05-24 06:59  Brandon Dutra <bedutra@ucdavis.edu>

	* code/latte/interpolation, code/latte/interpolation/.deps,
	  code/latte/interpolation/.deps/.dirstamp,
	  code/latte/interpolation/.deps/PolynomialInt.Po,
	  code/latte/interpolation/.deps/testDriver.Po,
	  code/latte/interpolation/.dirstamp,
	  code/latte/interpolation/PolynomialInt.cpp,
	  code/latte/interpolation/PolynomialInt.h,
	  code/latte/interpolation/testDriver.cpp: Added a poly.
	  interpolation class. Give constructor the degree of the poly.,
	  and add degree+1 points. The class will then find the coeff. of
	  the polynomial that matches the given points.

	  to do:
	  1) write a test driver to test many differnt polynomials to make
	  sure this class is correct (expand the current driver)
	  2) clean up the code
	  --improve comments before functions (add assumptions)
	  --improve comments inside functions
	  --put the functions in abc order!
	  --remove commented out code
	  3) update the name of this class to something more useful like
	  PolynomialInterpolation or PolyInterpolation.

2010-02-03 19:46  Peter Malkin <malkin@math.ucdavis.edu>

	* code, code/gnulib, code/latte, code/latte/adjacency,
	  code/latte/aggregation, code/latte/barvinok,
	  code/latte/genFunction, code/latte/normalize, code/latte/todd,
	  code/latte/triangulation, code/latte/vertices, code/test-suite:
	  Added files to svn:ignore.

2010-02-03 19:36  Peter Malkin <malkin@math.ucdavis.edu>

	* .: Made config.guess and config.sub ignored by svn.

2010-01-08 00:29  Peter Malkin <malkin@math.ucdavis.edu>

	* code/latte/genFunction/matrix_ops.cpp: Renamed function that
	  omits an error message when LiDIA is called but not installed.

2009-12-09 04:57  Matthias Koeppe <mkoeppe@math.ucdavis.edu>

	* code/latte/normalize/Makefile.am: Fix typo

2009-12-09 03:54  Matthias Koeppe <mkoeppe@math.ucdavis.edu>

	* EXAMPLES/yoshida/digraph5_9.equ.ead:

2009-12-09 03:53  Matthias Koeppe <mkoeppe@math.ucdavis.edu>

	* code/latte/genFunction/ilio.cpp,
	  code/latte/genFunction/matrix_ops.cpp: Fixes from Stanislav
	  Moreinis.

2009-11-15 04:23  Matthias Koeppe <mkoeppe@math.ucdavis.edu>

	* AUTHORS: *** empty log message ***

2009-11-15 04:20  Matthias Koeppe <mkoeppe@math.ucdavis.edu>

	* code/latte/Makefile.am: Rename maximize and minimize to
	  latte-maximize and latte-minimize.

2009-11-15 04:00  Matthias Koeppe <mkoeppe@math.ucdavis.edu>

	* code/latte/Makefile.am: hilbert-from-rays, hilbert-from-rays-symm
	  no longer experimental

2009-11-15 04:00  Matthias Koeppe <mkoeppe@math.ucdavis.edu>

	* code/latte/normalize/Makefile.am,
	  code/latte/normalize/normaliz_wrapper.cpp,
	  code/latte/normalize/normalize.cpp: New names for old
	  experimental code: hilbert-from-rays, hilbert-from-rays-symm

2009-11-14 21:28  Matthias Koeppe <mkoeppe@math.ucdavis.edu>

	* EXAMPLES/beck/cyclotomic.lisp: Merge from pre_cxx_zsolve_branch,

2009-11-14 21:14  Matthias Koeppe <mkoeppe@math.ucdavis.edu>

	* configure.ac: Bump version number

2009-11-14 20:16  Matthias Koeppe <mkoeppe@math.ucdavis.edu>

	* code/latte/genFunction/matrix_ops.cpp: (SmithNormalFormIlio):
	  Initialize L and R to identity matrices.

2009-11-14 01:57  Matthias Koeppe <mkoeppe@math.ucdavis.edu>

	* ChangeLog, EXAMPLES/beck/cyclotomic.lisp: *** empty log message
	  ***

2009-11-14 01:22  Matthias Koeppe <mkoeppe@math.ucdavis.edu>

	* code/latte/Makefile.am, code/latte/genFunction/ilio.cpp,
	  code/test-suite/test-old-latte.pl: Test for Smith normal form
	  implementation

2009-11-14 01:21  Matthias Koeppe <mkoeppe@math.ucdavis.edu>

	* code/latte/ExponentialApprox.cpp,
	  code/latte/ExponentialEhrhart.cpp,
	  code/latte/ExponentialSubst.cpp, code/latte/ExponentialSubst.h,
	  code/latte/Grobner.cpp, code/latte/barvinok/barvinok.cpp,
	  code/latte/barvinok/barvinok.h, code/latte/barvinok/dec.cpp,
	  code/latte/count.cpp, code/latte/ehrhart.cpp,
	  code/latte/genFunction/matrix_ops.cpp,
	  code/latte/genFunction/matrix_ops.h,
	  code/latte/genFunction/piped.cpp, code/latte/genFunction/piped.h,
	  code/latte/maximize.cpp, code/latte/minimize.cpp,
	  code/latte/normalize/normalize.cpp: Make Smith normal form
	  implementation switchable.
	  Add parameter argument to many functions to make this possible.

2009-11-14 01:19  Matthias Koeppe <mkoeppe@math.ucdavis.edu>

	* configure.ac: Change warning message when LiDia not present

2009-11-13 20:58  Matthias Koeppe <mkoeppe@math.ucdavis.edu>

	* code/latte/normalize/Makefile.am: Build fix

2009-11-09 18:33  Raymond Hemmecke <hemmecke@math.uni-magdeburg.de>

	* code/latte/normalize/normaliz_wrapper.cpp: Ray: This is the
	  wrapper I used for computing the 3 HB of the normaliz-paper.

2009-11-05 17:56  Matthias Koeppe <mkoeppe@math.ucdavis.edu>

	* code/test-suite/results.lisp: Finish benchmark table generator

2009-05-19 07:43  Matthias Koeppe <mkoeppe@math.ucdavis.edu>

	* code/latte/cone_consumer.h, code/latte/genFunction/piped.cpp,
	  code/latte/latte_ntl.cpp, code/latte/latte_relocatable.cpp,
	  code/latte/latte_system.cpp,
	  code/latte/normalize/check-representation.cpp,
	  code/latte/normalize/normalize.cpp: Fixes for gcc 4.3.2

2009-05-19 00:45  Matthias Koeppe <mkoeppe@math.ucdavis.edu>

	* config.libpath: *** empty log message ***

2009-03-31 21:47  Peter Malkin <malkin@math.ucdavis.edu>

	* m4/4ti2-check.m4: Fixed check for existence of 4ti2 library.
	  Removed reference to old now non-existent file.

2008-12-23 07:56  Matthias Koeppe <mkoeppe@math.ucdavis.edu>

	* code/gnulib: *** empty log message ***

2008-12-23 07:55  Matthias Koeppe <mkoeppe@math.ucdavis.edu>

	* code/latte/ehrhart.cpp, code/latte/maximize.cpp,
	  code/latte/minimize.cpp, code/latte/polyhedron-to-cones.cpp,
	  code/latte/triangulation/test-triangulation.cpp,
	  code/latte/vertices/cdd.cpp: Merge from
	  relocatable_merge_into_trunk_2

2008-12-23 07:08  Matthias Koeppe <mkoeppe@math.ucdavis.edu>

	* ., Makefile.am, autogen.sh, code/Makefile.am, code/gnulib,
	  code/gnulib/Makefile.am, code/gnulib/alloca.in.h,
	  code/gnulib/areadlink.c, code/gnulib/areadlink.h,
	  code/gnulib/c-ctype.c, code/gnulib/c-ctype.h,
	  code/gnulib/canonicalize-lgpl.c, code/gnulib/canonicalize.h,
	  code/gnulib/error.c, code/gnulib/error.h, code/gnulib/exitfail.c,
	  code/gnulib/exitfail.h, code/gnulib/gettext.h,
	  code/gnulib/intprops.h, code/gnulib/malloc.c,
	  code/gnulib/malloca.c, code/gnulib/malloca.h,
	  code/gnulib/malloca.valgrind, code/gnulib/pathmax.h,
	  code/gnulib/progname.c, code/gnulib/progname.h,
	  code/gnulib/progreloc.c, code/gnulib/readlink.c,
	  code/gnulib/relocatable.c, code/gnulib/relocatable.h,
	  code/gnulib/relocwrapper.c, code/gnulib/setenv.c,
	  code/gnulib/stdbool.in.h, code/gnulib/stdlib.in.h,
	  code/gnulib/strerror.c, code/gnulib/string.in.h,
	  code/gnulib/unistd.in.h, code/gnulib/xalloc-die.c,
	  code/gnulib/xalloc.h, code/gnulib/xmalloc.c,
	  code/gnulib/xreadlink.c, code/gnulib/xreadlink.h,
	  code/latte/CheckEmpty.cpp, code/latte/IntegralHull.cpp,
	  code/latte/Makefile.am, code/latte/ReadingFile.cpp,
	  code/latte/ResSingle.cpp, code/latte/RudyResNTL.cpp,
	  code/latte/barvinok/Triangulation.cpp,
	  code/latte/binarySearchIP.cpp, code/latte/count.cpp,
	  code/latte/dual.cpp, code/latte/latte_relocatable.cpp,
	  code/latte/latte_relocatable.h, code/latte/vertices/cdd.cpp,
	  configure.ac, m4/Makefile.am, m4/gnulib, m4/gnulib/alloca.m4,
	  m4/gnulib/canonicalize-lgpl.m4, m4/gnulib/eealloc.m4,
	  m4/gnulib/environ.m4, m4/gnulib/error.m4, m4/gnulib/exitfail.m4,
	  m4/gnulib/extensions.m4, m4/gnulib/gnulib-cache.m4,
	  m4/gnulib/gnulib-common.m4, m4/gnulib/gnulib-comp.m4,
	  m4/gnulib/gnulib-tool.m4, m4/gnulib/include_next.m4,
	  m4/gnulib/inline.m4, m4/gnulib/lib-ld.m4, m4/gnulib/longlong.m4,
	  m4/gnulib/malloc.m4, m4/gnulib/malloca.m4, m4/gnulib/onceonly.m4,
	  m4/gnulib/pathmax.m4, m4/gnulib/readlink.m4,
	  m4/gnulib/relocatable-lib.m4, m4/gnulib/relocatable.m4,
	  m4/gnulib/setenv.m4, m4/gnulib/ssize_t.m4, m4/gnulib/stdbool.m4,
	  m4/gnulib/stdlib_h.m4, m4/gnulib/strerror.m4,
	  m4/gnulib/string_h.m4, m4/gnulib/unistd_h.m4,
	  m4/gnulib/xalloc.m4: Merge from relocatable_merge_into_trunk

2008-12-23 07:53  Matthias Koeppe <mkoeppe@math.ucdavis.edu>

	* [r964] code/latte/ehrhart.cpp, code/latte/maximize.cpp,
	  code/latte/minimize.cpp, code/latte/polyhedron-to-cones.cpp,
	  code/latte/triangulation/test-triangulation.cpp,
	  code/latte/vertices/cdd.cpp: Make remaining binaries relocatable.

2008-12-23 07:19  Matthias Koeppe <mkoeppe@math.ucdavis.edu>

	* [r963] code/gnulib/Makefile.in: Generated file, removed

2008-12-23 07:02  Matthias Koeppe <mkoeppe@math.ucdavis.edu>

	* [r959] autogen.sh: *** empty log message ***

2008-12-23 06:54  Matthias Koeppe <mkoeppe@math.ucdavis.edu>

	* [r958] ., Makefile.am, autogen.sh, m4/Makefile.am: *** empty log
	  message ***

2008-12-23 06:53  Matthias Koeppe <mkoeppe@math.ucdavis.edu>

	* [r957] configure.ac: Add magic for gnulib's relocatable-prog

2008-12-23 06:52  Matthias Koeppe <mkoeppe@math.ucdavis.edu>

	* [r956] code/Makefile.am: Build gnulib's relocatable-prog

2008-12-23 06:49  Matthias Koeppe <mkoeppe@math.ucdavis.edu>

	* [r955] code/gnulib, code/gnulib/Makefile.am,
	  code/gnulib/Makefile.in, code/gnulib/alloca.in.h,
	  code/gnulib/areadlink.c, code/gnulib/areadlink.h,
	  code/gnulib/c-ctype.c, code/gnulib/c-ctype.h,
	  code/gnulib/canonicalize-lgpl.c, code/gnulib/canonicalize.h,
	  code/gnulib/error.c, code/gnulib/error.h, code/gnulib/exitfail.c,
	  code/gnulib/exitfail.h, code/gnulib/gettext.h,
	  code/gnulib/intprops.h, code/gnulib/malloc.c,
	  code/gnulib/malloca.c, code/gnulib/malloca.h,
	  code/gnulib/malloca.valgrind, code/gnulib/pathmax.h,
	  code/gnulib/progname.c, code/gnulib/progname.h,
	  code/gnulib/progreloc.c, code/gnulib/readlink.c,
	  code/gnulib/relocatable.c, code/gnulib/relocatable.h,
	  code/gnulib/relocwrapper.c, code/gnulib/setenv.c,
	  code/gnulib/stdbool.in.h, code/gnulib/stdlib.in.h,
	  code/gnulib/strerror.c, code/gnulib/string.in.h,
	  code/gnulib/unistd.in.h, code/gnulib/xalloc-die.c,
	  code/gnulib/xalloc.h, code/gnulib/xmalloc.c,
	  code/gnulib/xreadlink.c, code/gnulib/xreadlink.h, m4/gnulib,
	  m4/gnulib/alloca.m4, m4/gnulib/canonicalize-lgpl.m4,
	  m4/gnulib/eealloc.m4, m4/gnulib/environ.m4, m4/gnulib/error.m4,
	  m4/gnulib/exitfail.m4, m4/gnulib/extensions.m4,
	  m4/gnulib/gnulib-cache.m4, m4/gnulib/gnulib-common.m4,
	  m4/gnulib/gnulib-comp.m4, m4/gnulib/gnulib-tool.m4,
	  m4/gnulib/include_next.m4, m4/gnulib/inline.m4,
	  m4/gnulib/lib-ld.m4, m4/gnulib/longlong.m4, m4/gnulib/malloc.m4,
	  m4/gnulib/malloca.m4, m4/gnulib/onceonly.m4,
	  m4/gnulib/pathmax.m4, m4/gnulib/readlink.m4,
	  m4/gnulib/relocatable-lib.m4, m4/gnulib/relocatable.m4,
	  m4/gnulib/setenv.m4, m4/gnulib/ssize_t.m4, m4/gnulib/stdbool.m4,
	  m4/gnulib/stdlib_h.m4, m4/gnulib/strerror.m4,
	  m4/gnulib/string_h.m4, m4/gnulib/unistd_h.m4,
	  m4/gnulib/xalloc.m4: Import gnulib's relocatable-prog

2008-12-23 06:48  Matthias Koeppe <mkoeppe@math.ucdavis.edu>

	* [r954] code/latte/CheckEmpty.cpp, code/latte/IntegralHull.cpp,
	  code/latte/ReadingFile.cpp, code/latte/ResSingle.cpp,
	  code/latte/RudyResNTL.cpp, code/latte/barvinok/Triangulation.cpp,
	  code/latte/binarySearchIP.cpp, code/latte/count.cpp,
	  code/latte/dual.cpp, code/latte/vertices/cdd.cpp: Use
	  relocated_pathname for all paths within LattE and the
	  LattE-for-tea-too distribution.

2008-12-23 06:47  Matthias Koeppe <mkoeppe@math.ucdavis.edu>

	* [r953] code/latte/Makefile.am, code/latte/latte_relocatable.cpp,
	  code/latte/latte_relocatable.h: New files, latte_relocatable.cpp,
	  .h
	  Add Gnulib relocatable-prog magic.

2008-11-15  Matthias Koeppe  <mkoeppe@mail.math.uni-magdeburg.de>

	* code/latte/normalize/check-representation.cpp:
	Fix typo in output text

2008-05-28  Raymond Hemmecke, I-308  <hemmecke@theta.imst.uni-magdeburg.de>

	* code/latte/normalize/normaliz_wrapper.cpp: *** empty log message ***

2008-04-24  Raymond Hemmecke, I-308  <hemmecke@theta.imst.uni-magdeburg.de>

	* code/latte/normalize/normaliz_wrapper.cpp: *** empty log message ***

2008-04-24  Matthias Koeppe  <mkoeppe@mail.math.uni-magdeburg.de>

	* code/latte/normalize/normalize.cpp: *** empty log message ***

	* code/latte/normalize/normaliz_wrapper.cpp:
	Add some command-line error handling

	* code/latte/normalize/normalize.cpp (enumerate_simplicial_cone_with_latte):
	Handle all vectors in the
	fundapiped, don't be fooled by Boolean shortcircuiting

2008-04-24  Raymond Hemmecke, I-308  <hemmecke@theta.imst.uni-magdeburg.de>

	* code/latte/normalize/normaliz_wrapper.cpp: *** empty log message ***

2008-04-23  Matthias Koeppe  <mkoeppe@mail.math.uni-magdeburg.de>

	* code/latte/normalize/normalize.cpp: *** empty log message ***

2008-04-23  Raymond Hemmecke, I-308  <hemmecke@theta.imst.uni-magdeburg.de>

	* code/latte/normalize/normaliz_wrapper.cpp: *** empty log message ***

2008-04-23  Matthias Koeppe  <mkoeppe@mail.math.uni-magdeburg.de>

	* code/latte/normalize/normalize.cpp:
	Don't report on triangulations if none were done.

2008-04-23  Raymond Hemmecke, I-308  <hemmecke@theta.imst.uni-magdeburg.de>

	* code/latte/normalize/normaliz_wrapper.cpp: *** empty log message ***

2008-04-22  Matthias Koeppe  <mkoeppe@mail.math.uni-magdeburg.de>

	* code/latte/normalize/Makefile.am, code/latte/normalize/normalize_main.cpp:
	*** empty log message ***

	* code/latte/normalize/normaliz_wrapper.cpp: Use normaliz library

2008-04-21  Matthias Koeppe  <mkoeppe@mail.math.uni-magdeburg.de>

	* code/latte/normalize/normaliz_wrapper.cpp:
	From 4ti2/src/utils/normaliz_wrapper.c (1.7)

	* code/latte/normalize/normalize.cpp:
	New option -- output-trivial-subcones

	* code/latte/ReadSubcones.cpp (ReadSubcones):
	Initialize index_hint slot.

	* code/latte/cone.cpp, code/latte/cone.h (listCone):
	New slot index_hint

2008-04-18  Matthias Koeppe  <mkoeppe@mail.math.uni-magdeburg.de>

	* code/latte/normalize/normalize.cpp: Report triangulation statistics.

	* code/latte/latte_gmp.cpp, code/latte/latte_gmp.h (convert_ZZ_to_mpz):
	New overloaded variant.

	* code/latte/latte_4ti2.cpp, code/latte/latte_4ti2.h (rays_to_transposed_4ti2_VectorArray):
	New.

	* code/latte/triangulation/RegularTriangulationWith4ti2.cpp:
	Finish rank test for heights.

	* code/latte/barvinok/barvinok.cpp, code/latte/barvinok/barvinok.h (BarvinokParameters):
	New statistics on triangulations

2008-04-17  Matthias Koeppe  <mkoeppe@mail.math.uni-magdeburg.de>

	* code/latte/triangulation/RegularTriangulationWith4ti2.cpp:
	Construct the lattice basis manually, to save time.
	Use index hints.

	* code/latte/ReadSubcones.cpp, code/latte/ReadSubcones.h:
	Create and use index hints to speed up writing subcones files.

	* code/latte/cone.cpp, code/latte/cone.h (listVector):
	New slot index_hint.

	* code/latte/triangulation/RegularTriangulationWith4ti2.cpp:
	Speed up trivial test, prepare rank test for heights.

	* code/latte/latte_gmp.cpp, code/latte/latte_gmp.h (convert_vec_ZZ_to_mpz_vector):
	New overloaded variant.

	* code/latte/cone.cpp, code/latte/cone.h: Constification.

2008-04-14  Matthias Koeppe  <mkoeppe@mail.math.uni-magdeburg.de>

	* code/latte/normalize/normalize.cpp:
	Print how many subcones processed.

	* code/latte/cone_consumer.cpp, code/latte/cone_consumer.h (ProgressPrintingConeTransducer):
	New.

2008-04-12  Matthias Koeppe  <mkoeppe@mail.math.uni-magdeburg.de>

	* m4/4ti2-check.m4: Adapt to namespacification of zsolve.

	* code/latte/triangulation/RegularTriangulationWith4ti2.cpp:
	Don't talk about trivial subdivisions.

2008-04-10  Matthias Koeppe  <mkoeppe@mail.math.uni-magdeburg.de>

	* code/latte/normalize/normalize.cpp:
	Install SIGUSR1, SIGUSR2 handlers that control vebosity

	* code/latte/triangulation/RegularTriangulationWith4ti2.cpp:
	If height are all the same, do nothing.

2008-04-09  Matthias Koeppe  <mkoeppe@mail.math.uni-magdeburg.de>

	* code/latte/normalize/normalize.cpp:
	Fix behavior for zero timelimit (meaning no timelimit).

2008-04-08  Matthias Koeppe  <mkoeppe@mail.math.uni-magdeburg.de>

	* code/latte/normalize/normalize.cpp: Restore zsolve-timelimit feature.

	* code/latte/triangulation/RegularTriangulationWith4ti2.h, code/latte/triangulation/SpecialSimplex.cpp, code/latte/triangulation/triangulate.cpp, code/latte/DualizationWith4ti2.cpp, code/latte/ReadSubcones.cpp, code/latte/barvinok/barvinok.cpp, code/latte/barvinok/barvinok.h, code/latte/cone.cpp, code/latte/cone.h, code/latte/dual.cpp, code/latte/latte_4ti2_zsolve.cpp, code/latte/latte_4ti2_zsolve.h, code/latte/latte_ntl.cpp, code/latte/latte_ntl.h, code/latte/normalize/ReductionTestWithCPLEX.cpp, code/latte/normalize/normalize.cpp, code/latte/triangulation/BoundaryTriangulation.cpp, code/latte/triangulation/RegularTriangulation.cpp, code/latte/triangulation/RegularTriangulation.h, code/latte/triangulation/RegularTriangulationWith4ti2.cpp:
	Merge from cxx_zsolve_branch.

	* code/latte/normalize/normalize.cpp: Use new C++ zsolve.

	* code/latte/latte_4ti2_zsolve.cpp, code/latte/latte_4ti2_zsolve.h:
	Interface to the new C++ zsolve.

	* code/latte/normalize/normalize.cpp: Be quiet on --quiet.

2008-04-07  Matthias Koeppe  <mkoeppe@mail.math.uni-magdeburg.de>

	* code/latte/normalize/normalize.cpp: Handle non-fulldimensional cones.

	* code/latte/DualizationWith4ti2.cpp (dualizeCone_with_4ti2):
	Handle non-fulldimensional cones.

	* code/latte/normalize/ReductionTestWithCPLEX.cpp:
	Improve diagnosis if repr-ip.lp cannot be written to.

	* code/latte/latte_4ti2_zsolve.cpp, code/latte/latte_4ti2_zsolve.h (facets_to_4ti2_zsolve_LinearSystem):
	Change interface, handle
	non-fulldimensional cones.

	* code/latte/dual.cpp (dualizeCone):
	Handle "subspace_generators" and "equalities".
	(dualizeCone_with_cdd): Assert cone is pointed.

	* code/latte/cone.cpp, code/latte/cone.h (listCone):
	Add slots "subspace_generators" and "equalities".

2008-04-04  Matthias Koeppe  <mkoeppe@mail.math.uni-magdeburg.de>

	* code/latte/normalize/normalize.cpp:
	Also use the name of the subcones file to construct the name of the
	.hil and .stats file.

	* code/latte/triangulation/triangulate.cpp:
	Unless triangulation_assume_fulldim is true, don't assume cones with M
	rays in ambient dimension M are simplicial.

	* code/latte/normalize/normalize.cpp:
	Handle lower-dimensional cones with M rays in ambient dimension M
	properly -- don't assume they are full-dimensional and simplicial.

	* code/latte/barvinok/barvinok.cpp, code/latte/barvinok/barvinok.h (BarvinokParameters):
	New quirky parameter,
	triangulation_assume_fulldim

	* code/latte/triangulation/SpecialSimplex.cpp, code/latte/triangulation/BoundaryTriangulation.cpp, code/latte/triangulation/RegularTriangulationWith4ti2.cpp, code/latte/triangulation/RegularTriangulationWith4ti2.h (triangulate_cone_with_4ti2):
	Remove unused cone_dimension argument.

	* code/latte/ReadSubcones.cpp: Check whether writes are successful.

2008-04-03  Matthias Koeppe  <mkoeppe@mail.math.uni-magdeburg.de>

	* code/latte/normalize/normalize.cpp:
	Implement enumeration of fundamental parallelepiped.
	New option, --max-determinant-for-enumeration.

	* code/latte/latte_ntl.cpp, code/latte/latte_ntl.h, code/latte/latte_4ti2_zsolve.cpp (convert_ZZ_to_int):
	Move from latte_4ti2_zsolve.cpp to latte_ntl.h, latte_ntl.cpp

	* code/latte/cone.cpp, code/latte/cone.h: Some constification.

	* code/latte/normalize/normalize.cpp:
	New option --triangulation-pull-rays=INDEX,...

2008-04-02  Matthias Koeppe  <mkoeppe@mail.math.uni-magdeburg.de>

	* code/latte/barvinok/barvinok.cpp, code/latte/barvinok/barvinok.h (triangulation_prescribed_height_data):
	New slot.

	* code/latte/normalize/normalize.cpp: New option,
	--triangulation-height-vector=4TI2-ROWVECTOR-FILE

	* code/latte/triangulation/RegularTriangulation.cpp, code/latte/triangulation/RegularTriangulation.h (prescribed_height):
	New.

	* code/latte/triangulation/RegularTriangulationWith4ti2.cpp:
	New option, --debug-triangulation.

	(random_regular_triangulation_with_4ti2): If
	triangulation_prescribed_height_data is given, use it.

	* code/latte/triangulation/triangulate.cpp:
	New option, --debug-triangulation

2008-03-11  Matthias Koeppe  <mkoeppe@mail.math.uni-magdeburg.de>

	* code/latte/DualizationWith4ti2.cpp, code/latte/VertexConesWith4ti2.cpp, code/latte/latte_4ti2.h, code/latte/normalize/normalize.cpp, code/latte/triangulation/RegularTriangulationWith4ti2.cpp:
	Use new header file location of 4ti2 headers.

	* m4/4ti2-check.m4:
	Update 4ti2 library check to new C++ rewrite of zsolve.

2008-03-04  Matthias Koeppe  <mkoeppe@mail.math.uni-magdeburg.de>

	* code/latte/ReadSubcones.cpp (ReadSubcones):
	Call SetNumcones with the number read from the file.

	* code/latte/normalize/normalize.cpp: Handle --help.

2007-10-19  Matthias Koeppe  <mkoeppe@mail.math.uni-magdeburg.de>

	* code/latte/Residue.cpp, code/latte/RudyResNTL.cpp,
	code/latte/RudyResNTL.h, code/latte/banner.cpp,
	code/latte/barvinok/Cone.cpp,
	code/latte/barvinok/SubspaceAvoidingDecomposition.cpp,
	code/latte/barvinok/Triangulation.cpp,
	code/latte/barvinok/barvinok.cpp, code/latte/barvinok/barvinok.h,
	code/latte/barvinok/dec.cpp, code/latte/binarySearchIP.cpp,
	code/latte/count.cpp, code/latte/dual.cpp, code/latte/ehrhart.cpp,
	code/latte/genFunction/IntCombEnum.cpp,
	code/latte/genFunction/NTL_to_LiDIA.cpp,
	code/latte/genFunction/piped.cpp, code/latte/maximize.cpp,
	code/latte/minimize.cpp, code/latte/normalize/normalize.cpp,
	code/latte/polyhedron-to-cones.cpp, code/latte/preprocess.cpp,
	code/latte/print.cpp, code/latte/rational.cpp,
	code/latte/triangulation/BoundaryTriangulation.cpp,
	code/latte/triangulation/test-triangulation.cpp,
	code/latte/triangulation/triangulate.cpp,
	code/latte/vertices/cdd.cpp, code/latte/CheckEmpty.cpp,
	code/latte/ConeInfo.cpp, code/latte/ExponentialApprox.cpp,
	code/latte/ExponentialSubst.cpp, code/latte/Grobner.cpp,
	code/latte/IntegralHull.cpp, code/latte/Irrational.cpp,
	code/latte/ProjectUp.cpp, code/latte/ReadPolyhedron.cpp,
	code/latte/ReadingFile.cpp, code/latte/ResSingle.cpp: Send all
	debugging and progress messages to standard error rather than
	standard output. Now only the final result (usually a number of
	lattice points) should appear on standard output.  
	Reported by Nicolas Thiery.

2007-10-15  Matthias Koeppe  <mkoeppe@mail.math.uni-magdeburg.de>

	* ReadSubcones.cpp: Fix a build problem with GCC 3.2.3

2007-10-09  Matthias Koeppe  <mkoeppe@mail.math.uni-magdeburg.de>

	Version 1.2-mk-0.9

2007-10-06  Matthias Koeppe  <mkoeppe@mail.math.uni-magdeburg.de>

	* ReadPolyhedron.cpp, ReadPolyhedron.h:
	New option --input-vertex-cones=CONES

	* print.cpp (printVectorToFile): Add length assertion.
	(readConeFromFile): Read more data, not just the rays.  Don't reverse
	list of rays.

	* cone.cpp, cone.h (ambient_cone_dimension): New.

	* count.cpp (--ehrhart-polynomial):
	Turn on --exp automatically, rather than complain to user.

	* count.cpp: In Ehrhart polynomial mode, use tight-inequality
	information BEFORE shifting cones to the origin.  Fixes wrong
	result for "code/latte/count --compute-vertex-cones=cdd
	--ehrhart-polynomial --exp --all-primal
	/home/mkoeppe/w/latte/EXAMPLES/matroid/haws.oxleybasis.txt.l10.lat"

2007-10-03  Matthias Koeppe  <mkoeppe@mail.math.uni-magdeburg.de>

	* triangulation/test-triangulation.cpp: Compute facets using 2 *
	dualizeCone, rather than computeDetAndFacetsOfSimplicialCone, to
	also handle general subdivisions

	* dual.cpp (computeDetAndFacetsOfSimplicialCone): Add assertions
	that we indeed have a full-dimensional simplicial cone.

2007-09-30  Matthias Koeppe  <mkoeppe@mail.math.uni-magdeburg.de>

	* triangulation/RegularTriangulation.cpp: Use mpq_ instead of dd_
	functions

2007-07-13  Matthias Koeppe  <mkoeppe@mail.math.uni-magdeburg.de>

	* count.cpp: For all operations except the computation of
	multivariate generating function, refuse to handle unbounded
	polyhedra (where the computed results would be meaningless).

	* count.cpp: New option "--multivariate-generating-function".

	* genFunction/maple.cpp (GeneratingFunctionWritingConeConsumer):
	Read off the dimension of the
	cone from the lattice points, not the vertex.  (Workaround for
	broken ProjectUp2, which currently does not handle the vertex.)

	* cone_consumer.cpp (CompositeConeConsumer): Implemented.
	(compose): Implement corresponding overload.

	* ReadPolyhedron.cpp: When equations are present, fill the
	"projecting_up_transducer" slot of the Polyhedron.

2007-07-12  Matthias Koeppe  <mkoeppe@mail.math.uni-magdeburg.de>

	* Polyhedron.h (Polyhedron): New slot, *projecting_up_transducer

	* ProjectUp.cpp, ProjectUp.h (ProjectUp2): Add assertions.
	(ProjectingUpConeTransducer): New class.

	* barvinok/barvinok.cpp,
	barvinok/barvinok.h (DelegatingSingleConeParameters): New class.

	* genFunction/piped.cpp,
	genFunction/piped.h (PointsInParallelepipedComputingConeTransducer):
	New class.

	* genFunction/maple.cpp,
	genFunction/maple.h (GeneratingFunctionWritingConeConsumer): New
	class.

	* Makefile.am: New files ProjectUp.h, .cpp

	* Grobner.cpp, ehrhart.cpp, maximize.cpp, minimize.cpp:
	Fix #include list

	* ProjectUp.cpp, ProjectUp.h, ReadingFile.cpp,
	ReadingFile.h (ProjectUp, ProjectUp2): Move from ReadingFile.h,
	.cpp to new files ProjectUp.h, .cpp

	* vertices/cdd.h, ReadingFile.cpp: Clean #include list

	* ReadPolyhedron.cpp: Use changed interface of
	computeVertexConesWith4ti2.

	* VertexConesWith4ti2.cpp, VertexConesWith4ti2.h:
	Report whether unbounded.

	* Polyhedron.h (Polyhedron): New slot "unbounded".

	* CheckEmpty.cpp: Clean #include list

2007-07-11  Matthias Koeppe  <mkoeppe@mail.math.uni-magdeburg.de>

	* VertexConesWith4ti2.cpp (computeVertexConesWith4ti2): Handle
	unbounded polyhedra properly
	(don't mistake rays for vertices).

	* latte2ext.cpp, latte2ine.cpp: Use changed interface of
	ReadLatteStyleMatrix.

	* ReadLatteStyle.cpp (add_nonnegativity): Don't use set_copy to
	copy equality-ness between sets of different ground-set
	cardinalities.  (Fixes BUG, where sporadically inequalities were
	turned into equalities.)

	* ReadPolyhedron.cpp: New options
	--dilation=DILATION-FACTOR (equivalent to old option "dil
	DILATION-FACTOR") and --interior (equivalent to "+").

	* count.cpp: New option --count-lattice-points corresponding to
	the default.  Show more help on --help.

	* dual.cpp, dual.h (show_standard_dualization_option): New.

	* normalize/normalize.cpp: Use it here.

	* triangulation/triangulate.cpp,
	triangulation/triangulate.h (show_standard_triangulation_options):
	New.

2007-07-01  Matthias Koeppe  <mkoeppe@mail.math.uni-magdeburg.de>

	* code/latte/ReadPolyhedron.cpp, code/latte/ReadPolyhedron.h:
	Rewrite the reading of input files and the redundancy check.

	The "equ" command-line option is now ignored.

	New command-line option --redundancy-check={none,cddlib,full-cddlib}.
	"full-cddlib" uses cddlib to compute an irredundant system of linear
	equations and inequalities describing the polyhedron.  This
	corresponds to the traditional behavior; it can be expensive.
	"cddlib" (the new default) uses cddlib to compute the implicit linearities only.
	"none" does nothing, the input description of the polytope should be
	irredundant.

	* code/latte/ReadLatteStyle.cpp, code/latte/ReadLatteStyle.h
	(ReadLatteStyleMatrix): Extend interface to accept a
	"nonnegativity" flag.
	(ReadLatteStyleVrep): Move to ReadPolyhedron.h, .cpp

	* code/latte/count.cpp: Don't remove the file storing the
	non-redundant representation (we no longer create one).

	* code/latte/latte_cddlib.cpp, code/latte/latte_cddlib.h 
	(cddlib_matrix_to_equations_and_inequalities): New.

	* code/latte/preprocess.cpp: Don't #include "ReadingFile.h".

	If polyhedron is not bounded, exit with code 1.

	* code/latte/triangulation/test-triangulation.cpp:
	Use dualizeCones instead of dualizeBackCones

	* code/test-suite/test.pl.in:
	Fix test result of corrected example "4x4Table11".

2007-06-30  Matthias Koeppe  <mkoeppe@mail.math.uni-magdeburg.de>

	* EXAMPLES/yoshida/4x4Table11: Add missing "linearity" keyword

2007-06-28  Matthias Koeppe  <mkoeppe@mail.math.uni-magdeburg.de>

	* code/latte/triangulation/BoundaryTriangulation.cpp:
	Use dualizeCone instead of dualizeBackCones.

	* code/latte/count.cpp: Use changed interface of dualizeCones.
	Use dualizeCones instead of dualizeBackCones.

	In the all-primal algorithm, if only the facets of vertex cones are
	known [happens when computed with 4ti2], first compute the rays.

	* code/latte/VertexConesWith4ti2.cpp: Don't compute the rays.
	Get sign of the facets right.

	* code/latte/ExponentialApprox.cpp:
	Use dualizeCone instead of dualizeBackCones.

	* code/latte/barvinok/dec.cpp:
	Use dualizeCones instead of dualizeBackCones.

	* code/latte/barvinok/barvinok.cpp:
	Use dualizeCone instead of dualizeBackCones.

	* code/latte/dual.cpp, code/latte/dual.h (dualizeBackCones):
	Removed; use dualizeCones everywhere.
	(dualizeCones): Change interface (no longer return the list).

2007-06-27  Matthias Koeppe  <mkoeppe@mail.math.uni-magdeburg.de>

	* code/latte/ReadPolyhedron.cpp, code/latte/ReadPolyhedron.h:
	New option --redundancy-check=...

	* code/latte/VertexConesWith4ti2.cpp (computeVertexConesWith4ti2):
	Fix memory leaks.

	* code/latte/VertexConesWith4ti2.cpp: Special-case simplicial
	vertex cones (for speed).

	* code/latte/Makefile.am (VertexConesWith4ti2.h, .cpp): New files.

	* code/latte/count.cpp: Old-style "lrs" command line option is now
	handled by ReadPolyhedron.cpp

	* code/latte/ReadPolyhedron.cpp, code/latte/ReadPolyhedron.h:
	Handle new command-line option --compute-vertex-cones={cdd,lrs,4ti2}.

	* code/latte/VertexConesWith4ti2.cpp, code/latte/VertexConesWith4ti2.h:
	New files

2007-04-10  Matthias Koeppe  <mkoeppe@mail.math.uni-magdeburg.de>

	* code/latte/print.cpp, code/latte/print.h (readListConeFromFile):
	New overload.

	* code/latte/ReadPolyhedron.cpp:
	Support listCone format in conjunction with --subcones

2007-04-09  Matthias Koeppe  <mkoeppe@mail.math.uni-magdeburg.de>

	* code/latte/triangulation/BoundaryTriangulation.cpp (compute_triangulation_of_boundary):
	Use 4ti2 instead of cddlib for
	computing the facet triangulations.

2007-04-01  Matthias Koeppe  <mkoeppe@mail.math.uni-magdeburg.de>

	* code/latte/Makefile.am (triangulate-boundary): New program.

	* code/latte/ReadPolyhedron.cpp, code/latte/ReadPolyhedron.h (ReadPolyhedron):
	Support intermediate input specifications:
	--input-primal-homog-cone=CONE.ext
	--input-dual-homog-cone=CONE.ext
	--subcones=FILENAME
	--input-primal-homog-cones=CONES
	--input-dual-homog-cones=CONES

	* code/latte/count.cpp: Implement --help switch.

	* code/latte/cone_consumer.cpp (ListConeReadingConeProducer):
	Handle file-open error.

2007-03-30  Matthias Koeppe  <mkoeppe@mail.math.uni-magdeburg.de>

	* code/latte/normalize/normalize.cpp: Constness fix

2007-03-29  Matthias Koeppe  <mkoeppe@mail.math.uni-magdeburg.de>

	* code/latte/Polyhedron.h, code/latte/ReadLatteStyle.cpp,
	code/latte/ReadSubcones.cpp, code/latte/ehrhart.cpp,
	code/latte/latte_4ti2_zsolve.cpp, code/latte/latte_system.cpp,
	code/latte/normalize/ReductionTest.cpp,
	code/latte/normalize/normalize.cpp,
	code/latte/triangulation/BoundaryTriangulation.cpp,
	code/latte/triangulation/triangulate.cpp: 
	Fix compiler warnings.

	* configure.ac: Fix CPLEX flags.

	* code/latte/print.cpp (printListConeToFile): Beautify error message.

	* code/latte/ReadPolyhedron.cpp:
	Complain if no input filename was given.

	* code/latte/Makefile.am, code/latte/polyhedron-to-cones.cpp:
	New file polyhedron-to-cones.cpp

	* code/latte/normalize/Makefile.am:
	Build the check-representation program again.

	* code/latte/normalize/check-representation.cpp:
	Use the code moved into ReductionTest.

	* code/latte/normalize/ReductionTest.cpp,
	code/latte/normalize/ReductionTest.h,
	code/latte/normalize/ReductionTestWithCPLEX.cpp,
	code/latte/normalize/ReductionTestWithCPLEX.h (ReductionTest::GetDimension):
	New.

	* code/latte/ReadSubcones.cpp (IncrementalVectorFileWriter):
	Flush the stream.

	* code/latte/Makefile.am:
	Move normalize-related programs to sub-Makefile

	* configure.ac: New Makefile, code/latte/normalize/Makefile

	* code/latte/ReadLatteStyle.cpp,
	code/latte/ReadLatteStyle.h (ReadLatteStyleMatrix): Add
	"homogenize" argument.

	* code/latte/normalize/normalize.cpp: Use ReductionTest.

	* code/latte/normalize/Makefile.am,
	code/latte/normalize/ReductionTest.cpp,
	code/latte/normalize/ReductionTest.h,
	code/latte/normalize/ReductionTestWithCPLEX.cpp,
	code/latte/normalize/ReductionTestWithCPLEX.h: 
	New files

	* code/latte/normalize/normalize.cpp:
	Use IncrementalVectorFileWriter for writing the .hil file

	* code/latte/ReadSubcones.cpp, code/latte/ReadSubcones.h (IncrementalVectorFileWriter):
	New class, factored out from SubconePrintingConeConsumer.
	(SubconePrintingConeConsumer): Use it here.

	* code/latte/latte_4ti2_zsolve.h:
	Undefine some macros created by the zsolve headers.

2007-03-28  Matthias Koeppe  <mkoeppe@mail.math.uni-magdeburg.de>

	* code/latte/triangulation/BoundaryTriangulation.cpp,
	code/latte/triangulation/BoundaryTriangulation.h
	(compute_triangulation_of_boundary,
	complete_boundary_triangulation_of_cone_with_subspace_avoiding_facets): 
	New.
	(boundary_triangulation_of_cone_with_subspace_avoiding_facets):
	Implement in terms of these functions.

	* code/latte/Makefile.am: New files ReadPolyhedron.h, .cpp

	* code/latte/count.cpp: Move input handling to ReadPolyhedron.h, .cpp

	* code/latte/ReadPolyhedron.cpp, code/latte/ReadPolyhedron.h:
	New file, move input handling here from count.cpp

	* code/latte/ehrhart.cpp, code/latte/maximize.cpp, code/latte/minimize.cpp:
	Change calls to readLatteProblem, CDDstylereadLatteProblem, whose
	interfaces changed slightly.

	* code/latte/ReadingFile.cpp, code/latte/ReadingFile.h,
	code/latte/Grobner.cpp, code/latte/Grobner.h,
	code/latte/CheckEmpty.cpp, code/latte/CheckEmpty.h,
	code/latte/genFunction/maple.cpp, code/latte/genFunction/maple.h,
	code/latte/vertices/cdd.cpp, code/latte/vertices/cdd.h: Constness
	fixes.

2007-03-27  Matthias Koeppe  <mkoeppe@mail.math.uni-magdeburg.de>

	* code/latte/triangulation/BoundaryTriangulation.cpp:
	Check combinations of basis vectors

	* code/latte/triangulation/BoundaryTriangulation.cpp:
	Compute avoidance lattice.

2007-03-26  Matthias Koeppe  <mkoeppe@mail.math.uni-magdeburg.de>

	* code/latte/triangulation/BoundaryTriangulation.cpp: Fix last change.

2007-03-22  Matthias Koeppe  <mkoeppe@mail.math.uni-magdeburg.de>

	* configure.ac: New configuration options, --with-cplex-sharedlib,
	--with-cplex-include.

	* code/latte/Makefile.am:
	Build check-representation only if CPLEX is available.

	* code/latte/normalize/check-representation.cpp: Finish.

2007-03-06  Matthias Koeppe  <mkoeppe@mail.math.uni-magdeburg.de>

	* code/latte/count.cpp:
	Don't override triangulation method if explicitly specified.

2007-03-04  Matthias Koeppe  <mkoeppe@mail.math.uni-magdeburg.de>

	* code/latte/count.cpp:
	Compute the tight inequalities of cones, rather than computing facets
	from rays.

	* code/latte/barvinok/barvinok.cpp, code/latte/barvinok/barvinok.h (barvinokStep):
	Export.

	* code/latte/ExponentialApprox.cpp, code/latte/ExponentialApprox.h:
	Decomposition according to worst-case bounds

	* code/latte/count.cpp: --approx implies --exp and (--irr or --all).

	* code/latte/Makefile.am: New files, heap.cpp, heap.h

	* code/latte/cone.cpp (copyCone): Copy the dual_determinant properly.

2007-03-03  Matthias Koeppe  <mkoeppe@mail.math.uni-magdeburg.de>

	* code/latte/count.cpp: --approximate implies --exponential.

	* code/latte/heap.h, code/latte/heap.cpp:
	Make compile in C++, remove GYWOPT-isms.

	* code/latte/heap.h, code/latte/heap.cpp: Taken from GYWOPT.

	* code/latte/triangulation/triangulate.h (TriangulatingConeTransducer):
	New.

	* code/latte/triangulation/triangulate.cpp (parse_standard_triangulation_option):
	New option --triangulation-bias.

	(TriangulatingConeTransducer): New.

	* code/latte/triangulation/RegularTriangulationWith4ti2.cpp
	(random_regular_triangulation_with_4ti2): Use biased_random_height
	here if a bias is given.

	* code/latte/triangulation/RegularTriangulation.cpp,
	code/latte/triangulation/RegularTriangulation.h (biased_random_height):
	New.

	* code/latte/normalize/normalize.cpp: Restructure using
	producer/consumer pattern.  Subcone files.  ZSolve time limits.

	* code/latte/Makefile.am: New experimental sources.

	* code/latte/barvinok/barvinok.cpp, code/latte/barvinok/barvinok.h (BarvinokParameters):
	New slot, triangulation_bias.

	* code/latte/latte_gmp.cpp, code/latte/latte_gmp.h (convert_vec_ZZ_to_mpz_vector):
	New.

	* code/latte/latte_cddlib.cpp (cddlib_matrix_to_cone): Don't
	reverse the order of the rays.

	* code/latte/ReadSubcones.cpp, code/latte/ReadSubcones.h: New.

	* code/latte/cone_consumer.cpp, code/latte/cone_consumer.h:
	Add ConeProducer, ConeTransducer classes.

2007-02-27  Matthias Koeppe  <mkoeppe@mail.math.uni-magdeburg.de>

	* code/latte/cone_consumer.cpp, code/latte/cone_consumer.h (PrintingConeConsumer):
	Also count the cones.

	* code/latte/normalize/normalize.cpp: Uniquify results.
	Nothing to be done for unimodular cones.
	New options --no-triang-file, --quiet

	* code/latte/print.cpp, code/latte/print.h:
	Replace some vec_ZZ by "const vec_ZZ &", to avoid needless copying.

2007-02-26  Matthias Koeppe  <mkoeppe@mail.math.uni-magdeburg.de>

	* code/latte/normalize/normalize.cpp: Don't keep all cones in memory.

	* code/latte/barvinok/barvinok.h (TriangulationType):
	Remove SubspaceAvoidingRecursiveTriangulation.
	(Single_Cone_Parameters): Inherit from ConeConsumer.

	* code/latte/triangulation/BoundaryTriangulation.cpp,
	code/latte/triangulation/BoundaryTriangulation.h,
	code/latte/triangulation/RegularTriangulationWith4ti2.cpp,
	code/latte/triangulation/RegularTriangulationWith4ti2.h,
	code/latte/triangulation/RegularTriangulationWithCdd.cpp,
	code/latte/triangulation/RegularTriangulationWithCdd.h,
	code/latte/triangulation/RegularTriangulationWithCddlib.cpp,
	code/latte/triangulation/RegularTriangulationWithCddlib.h,
	code/latte/triangulation/TriangulationWithTOPCOM.cpp,
	code/latte/triangulation/TriangulationWithTOPCOM.h,
	code/latte/triangulation/triangulate.cpp,
	code/latte/triangulation/triangulate.h (triangulateCone): 
	New version that sends subcones to a ConeConsumer,
	rather than collecting them.

	Change all backends.

	* code/latte/print.cpp, code/latte/print.h (readListConeFromFile):
	New CPS version.

	* code/latte/Makefile.am: Removed RecursiveTriangulation.h, .cpp.
	Added cone_consumer.h, cone_consumer.cpp.

	* code/latte/cone_consumer.cpp, code/latte/cone_consumer.h: New files.

	* code/latte/triangulation/RecursiveTriangulation.cpp,
	code/latte/triangulation/RecursiveTriangulation.h: Removed.

2007-02-25  Matthias Koeppe  <mkoeppe@mail.math.uni-magdeburg.de>

	* code/latte/normalize/normalize.cpp: Recursively subdivide if too
	many facets

	* code/latte/normalize/normalize.cpp: Some beautification

	* code/latte/normalize/normalize.cpp: Make 4ti2 dualization default.
	More stats.

	* configure.ac, code/test-suite/test.pl.in: Install test.pl

	* code/latte/count.cpp, code/latte/normalize/normalize.cpp:
	Handle --dualization={4ti2,cdd}

	* code/latte/dual.cpp, code/latte/dual.h 
	(dualization_type_from_name, parse_standard_dualization_option):
	New.

	* code/latte/Makefile.am: New files DualizationWith4ti2.h, .cpp

	* code/latte/DualizationWith4ti2.cpp, code/latte/DualizationWith4ti2.h:
	New files.

	* code/latte/normalize/normalize.cpp, code/latte/barvinok/dec.cpp,
	code/latte/count.cpp,
	code/latte/triangulation/RecursiveTriangulation.cpp: Change all
	callers of dualizeCone, dualizeCones.

	* code/latte/dual.cpp, code/latte/dual.h (dualizeCone):
	Change interface to accept BarvinokParameters. Pick
	dualization method accordingly.  Handle simplicial cones directly,
	using computeDetAndFacetsOfSimplicialCone.
	(dualizeCones): Likewise, also keep track of dualize_time.

	* code/latte/barvinok/barvinok.cpp, code/latte/barvinok/barvinok.h:
	New parameter, dualization.

2007-02-23  Matthias Koeppe  <mkoeppe@mail.math.uni-magdeburg.de>

	* code/latte/normalize/normalize.cpp:
	Don't forget to handle the triangulation options.

	* code/latte/normalize/normalize.cpp: Fix memory leaks.

2007-02-21  Matthias Koeppe  <mkoeppe@mail.math.uni-magdeburg.de>

	* doc/examplebrion.eps, doc/manual.tex, doc/secrets.tex:
	Manual sources, from Raymond.

	* code/latte/triangulation/test-triangulation.cpp:
	Vertex is now initialized in readConeFromFile.

	* code/latte/print.cpp (readConeFromFile): Initialize the vertex.

	* code/latte/triangulation/test-triangulation.cpp:
	Move read_cone function into print.cpp

	* code/latte/latte_4ti2_zsolve.cpp (convert_ZZ_to_int):
	Don't lose the sign.
	(facets_to_4ti2_zsolve_LinearSystem): Use shorthand.

	* code/latte/print.cpp, code/latte/print.h (readConeFromFile,
	readListConeFromFile): New.

2007-02-19  Matthias Koeppe  <mkoeppe@mail.math.uni-magdeburg.de>

	* code/latte/latte_4ti2_zsolve.cpp, code/latte/latte_4ti2_zsolve.h:
	New.

	* code/latte/dual.cpp (dualizeCone): If facets and rays are
	already computed, just swap.

	* code/latte/count.cpp: Use parse_standard_triangulation_option.

	* code/latte/latte2ext.cpp: New.

	* code/latte/barvinok/barvinok.cpp, code/latte/barvinok/barvinok.h
	(BarvinokParameters): New parameters triangulation_max_height,
	nonsimplicial_subdivision.

	* code/latte/triangulation/RegularTriangulationWithCddlib.cpp
	(random_regular_triangulation_with_cddlib): Use the
	triangulation_max_height parameter.

	(triangulate_cone_with_4ti2): Handle the nonsimplicial_subdivision
	parameter.

	* code/latte/triangulation/RegularTriangulationWith4ti2.cpp
	(random_regular_triangulation_with_4ti2): Use the
	triangulation_max_height parameter.

	(triangulate_cone_with_4ti2): Handle lower-dimensional cones.

	* code/latte/triangulation/RegularTriangulation.cpp (random_height):
	Use the data parameter.

	* code/latte/triangulation/triangulate.cpp,
	code/latte/triangulation/triangulate.h (parse_standard_triangulation_option):
	New.

	* m4/4ti2-check.m4: Check for the 4ti2 zsolve library, too.

2007-02-18  Matthias Koeppe  <mkoeppe@mail.math.uni-magdeburg.de>

	Version 1.2-mk-0.8

2007-02-17  Matthias Koeppe  <mkoeppe@mail.math.uni-magdeburg.de>

	* configure.ac: Check for 4ti2.

	* m4/4ti2-check.m4: New.

	* code/latte/Makefile.am: Put object files in a directory
	hierarchy parallel to the source directory.

	* code/latte/count.cpp: Don't warn if
	SubspaceAvoidingBoundaryTriangulation is specified.

	* code/latte/latte_4ti2.cpp, code/latte/latte_4ti2.h: New.

	* code/latte/latte_cddlib.cpp,
	code/latte/latte_cddlib.h (cddlib_matrix_to_cone): New.

	* code/latte/barvinok/barvinok.h: New triangulation method,
	RegularTriangulationWith4ti2.

	* code/latte/triangulation/triangulate.cpp: New triangulation
	method "4ti2".

	* code/latte/triangulation/test-triangulation.cpp: Allow reading
	CDD .ext files as input.  Triangulation method can be specified
	with --cddlib.

	* code/latte/triangulation/RegularTriangulationWith4ti2.cpp,
	code/latte/triangulation/RegularTriangulationWith4ti2.h: New.

	* code/latte/triangulation/RegularTriangulation.cpp,
	code/latte/triangulation/RegularTriangulation.h: New, move some
	functions here from RegularTriangulationWithCddlib.h, .cpp

	* code/latte/triangulation/RegularTriangulationWithCddlib.cpp,
	code/latte/triangulation/RegularTriangulationWithCddlib.h: Move
	some functions to RegularTriangulation.h, .cpp

	* code/latte/vertices/cdd.cpp (createCddExtFile2): Check input file.

2007-01-12  Matthias Koeppe  <mkoeppe@mail.math.uni-magdeburg.de>

	* code/latte/triangulation/BoundaryTriangulation.cpp: Choose
	interior ray using generalized Dyer-Kannan method, rather than
	randomly.

2006-12-21  Matthias Koeppe  <mkoeppe@mail.math.uni-magdeburg.de>

	* code/latte/count.cpp: Allow to override triangulation method.

	* code/latte/triangulation/RecursiveTriangulation.cpp (check_rays):
	Fix output of the bad cone.

	* code/latte/triangulation/triangulate.cpp (triangulation_type_from_name):
	Handle --triangulation=boundary.

	* code/latte/triangulation/RegularTriangulationWithCddlib.cpp,
	code/latte/triangulation/RegularTriangulationWithCddlib.h (triangulate_cone_with_cddlib):
	Generalize to handle lower-dimensional input cones.

	Export some helper functions.

2006-12-20  Matthias Koeppe  <mkoeppe@mail.math.uni-magdeburg.de>

	* code/latte/triangulation/triangulate.cpp (triangulation_type_from_name):
	Handle "--triangulation=delone" (can also be spelt "delaunay").
	(triangulateCone): Handle DeloneTriangulationWithCddlib.

	* code/latte/triangulation/RegularTriangulationWithCddlib.cpp,
	code/latte/triangulation/RegularTriangulationWithCddlib.h 
	(random_regular_triangulation_with_cddlib):
	New, renamed from triangulate_cone_with_cddlib.
	(refined_delone_triangulation_with_cddlib): New.
	(triangulate_cone_with_cddlib): Generalized, made static.

	* code/latte/barvinok/barvinok.h (DeloneTriangulationWithCddlib):
	New triangulation type.

2006-12-12  Matthias Koeppe  <mkoeppe@mail.math.uni-magdeburg.de>

	* code/latte/triangulation/RegularTriangulationWithCddlib.cpp
	(triangulate_cone_with_cddlib): If the chosen heights were not
	generic, don't restart the whole computation but recurse on the
	non-simplicial subcones.

2006-12-09  Matthias Koeppe  <mkoeppe@mail.math.uni-magdeburg.de>

	* code/latte/Makefile.am: New files
	RegularTriangulationWithCddlib.h, .cpp

	* code/latte/count.cpp: Support command-line options
	--triangulation=cdd (the default) and --triangulation=cddlib.  Fix
	a memory leak.

	* code/latte/triangulation/triangulate.cpp,
	code/latte/triangulation/triangulate.h (triangulation_type_from_name):
	New.
	(triangulateCone): Handle RegularTriangulationWithCddlib.

	* code/latte/barvinok/barvinok.h (RegularTriangulationWithCddlib):
	New triangulation type.

	* code/latte/latte_cddlib.cpp, code/latte/latte_cddlib.h (rays_to_cddlib_matrix):
	Changed interface.

	* code/latte/preprocess.cpp: Fix memory leak.

	* code/latte/triangulation/RegularTriangulationWithCddlib.cpp,
	code/latte/triangulation/RegularTriangulationWithCddlib.h: New
	files.

2006-12-08  Matthias Koeppe  <mkoeppe@mail.math.uni-magdeburg.de>

	* code/latte/count.cpp: Fix typo.  Use
	SubspaceAvoidingBoundaryTriangulation instead of
	SubspaceAvoidingRecursiveTriangulation.

	* code/latte/Makefile.am (BoundaryTriangulation.h,
	BoundaryTriangulation.cpp): New experimental files.

	* code/latte/ReadLatteStyle.cpp (check_stream): Fix stream status
	check.
	(ReadLatteStyleMatrix): Check after reading the dimensions.
	(check_cddlib_error, convert_mpq_to_ZZ): Moved to other files.

	* code/latte/latte_cddlib.cpp,
	code/latte/latte_cddlib.h (check_cddlib_error,
	rays_to_cddlib_matrix, cone_to_cddlib_polyhedron): New.

	* code/latte/latte_gmp.cpp, code/latte/latte_gmp.h (convert_ZZ_to_mpq, convert_mpq_to_ZZ):
	New.

	* code/latte/barvinok/barvinok.h,
	code/latte/triangulation/triangulate.cpp (SubspaceAvoidingBoundaryTriangulation):
	New triangulation type.

	* code/latte/triangulation/BoundaryTriangulation.cpp,
	code/latte/triangulation/BoundaryTriangulation.h: New files.

2006-12-07  Matthias Koeppe  <mkoeppe@mail.math.uni-magdeburg.de>

	* Makefile.am: Build the new latte2ine program.

	* latte2ine.cpp: New program.

	* count.cpp: Enable "homog --all-primal" (it still fails, though).
	In "--avoid-singularities" mode, don't enforce subspace-avoiding
	triangulation if we do all-primal decomposition.

	* triangulation/triangulate.h: Doc fix.

	* triangulation/triangulate.cpp (triangulateCone):
	If a simplicial cone is given, just return a copy.
	Fixes TOPCOM triangulation for some instances (example2, example3,
	hickerson-14, knapsackbaby2.equ); see test-suite run from 2006-12-02.

2006-12-06  Matthias Koeppe  <mkoeppe@mail.math.uni-magdeburg.de>

	* barvinok/barvinok.cpp, barvinok/dec.cpp, count.cpp:
	decompose_time no longer includes triangulate_time.

	* code/latte/latte_gmp.cpp (convert_mpz_to_ZZ): Allocate the
	memory with new[], rather than letting GMP use its allocator
	function.  Fixes segfault when TOPCOM is used; it installs a
	custom allocator!

	* code/latte/Grobner.cpp, code/latte/cone.cpp, code/latte/cone.h,
	code/latte/preprocess.cpp, code/latte/ramon.cpp,
	code/latte/ramon.h (addVector, subVector, negativeVector):
	Removed.
	(freeListVector): Moved from ramon.h,.cpp to cone.h,.cpp

	* code/latte/Grobner.cpp, code/latte/ReadingFile.cpp,
	code/latte/convert.cpp, code/latte/count.cpp,
	code/latte/preprocess.cpp, code/latte/ramon.cpp,
	code/latte/ramon.h, code/latte/vertices/cdd.cpp (copyVector):
	Removed.

	* code/latte/Grobner.cpp, code/latte/ReadingFile.cpp,
	code/latte/convert.cpp, code/latte/count.cpp,
	code/latte/preprocess.cpp, code/latte/vertices/cdd.cpp: Fix
	several memory leaks.

2006-12-05  Matthias Koeppe  <mkoeppe@mail.math.uni-magdeburg.de>

	* code/latte/ReadingFile.cpp: Fix memory leak.

	* code/latte/RudyResNTL.cpp, code/latte/RudyResNTL.h,
	code/latte/barvinok/barvinok.cpp, code/latte/count.cpp,
	code/latte/dual.cpp,
	code/latte/triangulation/TriangulationWithTOPCOM.h,
	code/latte/triangulation/triangulate.h,
	code/latte/vertices/cdd.cpp: Fix memory leaks.

	* code/latte/cone.cpp, code/latte/cone.h (copyListVector, copyCone):
	New.

2006-12-04  Matthias Koeppe  <mkoeppe@mail.math.uni-magdeburg.de>

	* code/latte/triangulation/RecursiveTriangulation.cpp,
	code/latte/triangulation/RecursiveTriangulation.h,
	code/latte/triangulation/triangulate.cpp (triangulate_cone_recursively_with_subspace_avoiding_facets):
	Change interface.

	* code/latte/CheckEmpty.cpp, code/latte/ExponentialSubst.cpp,
	code/latte/ReadingFile.cpp, code/latte/barvinok/dec.cpp,
	code/latte/count.cpp, code/latte/ehrhart.cpp,
	code/latte/maximize.cpp, code/latte/minimize.cpp: Remove use of
	ConeDecom.h

	* code/latte/dual.cpp, code/latte/dual.h (dualizeCone):
	New, factored out from dualizeCones.

	* code/latte/triangulation/TriangulationWithTOPCOM.cpp:
	Fix conditionalization.

	* code/latte/Makefile.am, code/latte/barvinok/ConeDecom.cpp,
	code/latte/barvinok/ConeDecom.h, code/latte/barvinok/barvinok.cpp,
	code/latte/barvinok/barvinok.h: Merged ConeDecom.cpp, ConeDecom.h
	into barvinok.cpp, barvinok.h

2006-11-30  Matthias Koeppe  <mkoeppe@mail.math.uni-magdeburg.de>

	* m4/cddlib-check.m4: Fix last change.

	* code/latte/adjacency/ComputeAdjacency.c,
	code/latte/adjacency/ComputeAdjacency.cpp,
	code/latte/adjacency/Makefile.am: Use latte_cddlib.h, so linkage
	configuration works.

	* code/latte/barvinok/barvinok.cpp (BarvinokParameters::print_statistics):
	Print irrationalize_time too.

2006-11-30  Matthias Koeppe  <mkoeppe@mail.math.uni-magdeburg.de>

	The new command-line option --triangulation=topcom allows to use
	TOPCOM for computing triangulations, rather than cddlib.
	
	* code/latte/count.cpp: New command-line option --triangulation=topcom.

	* code/latte/Makefile.am: Build TOPCOM-dependent objects if TOPCOM
	lib or binaries are available.

	* m4/topcom-check.m4: Also check for some TOPCOM binaries.

	* code/latte/triangulation/TriangulationWithTOPCOM.cpp:
	Use TOPCOM binaries if library is not available.

	* code/latte/latte_system.cpp (temporary_directory_name):
	Create directory if needed.

	* code/latte/barvinok/barvinok.h (PlacingTriangulationWithTOPCOM):
	New TriangulationType.

	* code/latte/triangulation/triangulate.cpp (triangulateCone):
	Handle PlacingTriangulationWithTOPCOM if TOPCOM library or
	binaries are available.

	* code/latte/triangulation/TriangulationWithTOPCOM.cpp,
	code/latte/triangulation/TriangulationWithTOPCOM.h (all_triangulations_of_cone_with_TOPCOM):
	New.

2006-11-29  Matthias Koeppe  <mkoeppe@mail.math.uni-magdeburg.de>

	* m4/topcom-check.m4: Use CHECKREG library from TOPCOM.

	* m4/gmp-check.m4: Indicate whether GMP was built with --enable-cxx.

	* code/latte/latte_cddlib.h: Use extern "C" only if cddlib was
	built with a C compiler.

	* configure.ac: Complain if GMP was built without --enable-cxx.
	Check whether cddlib was built with a C or C++ compiler.
	Reported by Sven Verdoolaege.

	* code/latte/adjacency/ComputeAdjacency.cpp, code/latte/adjacency/Makefile.am:
	Use the C++ compiler to build the ComputeAdjacency program, so we can
	use a cddlib built with a C++ compiler.
	Reported by Sven Verdoolaege.

2006-11-28  Matthias Koeppe  <mkoeppe@mail.math.uni-magdeburg.de>

	* code/latte/triangulation/TriangulationWithTOPCOM.cpp,
	code/latte/triangulation/TriangulationWithTOPCOM.h: New files.

	* code/latte/Makefile.am: New files RegularTriangulationWithCdd.h,
	.cpp, TriangulationWithTOPCOM.h, .cpp, latte_ntl_integer.h

	* code/latte/ExponentialSubst.cpp, code/latte/ExponentialSubst.h,
	code/latte/ResSingle.cpp, code/latte/Residue.cpp,
	code/latte/RudyResNTL.cpp, code/latte/barvinok/dec.cpp,
	code/latte/count.cpp: Include latte_ntl_integer.h

	* code/latte/latte_ntl.h, code/latte/latte_ntl_integer.h:
	Move typedef "Integer" into a separate header file.

2006-11-27  Matthias Koeppe  <mkoeppe@mail.math.uni-magdeburg.de>

	* configure.ac, m4/topcom-check.m4: Check for TOPCOM.

	* code/latte/count.cpp: New command-line option
	"--avoid-singularities".

	* code/latte/cone.cpp, code/latte/cone.h (lengthListVector):
	Moved here from ramon.h, ramon.cpp
	(appendListCones): New.

	* code/latte/ramon.cpp, code/latte/ramon.h (lengthListVector):
	Moved to cone.h, cone.cpp

	* code/latte/latte_random.h: Add documentation.

	* code/latte/barvinok/ConeDecom.cpp, code/latte/barvinok/ConeDecom.h:
	Use new infrastructure in triangulation.h

	* code/latte/barvinok/Triangulation.cpp (Triangulation_Load_Save):
	Accept NULL filename if not loading/saving.

	* code/latte/barvinok/barvinok.h (BarvinokParameters): Move
	Cone_Index slot here from subclass Single_Cone_Parameters.  New
	SubspaceAvoidingRecursiveTriangulation.

	* code/latte/barvinok/barvinok.cpp (BarvinokParameters):
	Initialize all slots in the constructor to default values.

	* code/latte/Makefile.am: Use new files.

	* code/latte/triangulation/RecursiveTriangulation.cpp,
	code/latte/triangulation/RecursiveTriangulation.h,
	code/latte/triangulation/RegularTriangulationWithCdd.cpp,
	code/latte/triangulation/RegularTriangulationWithCdd.h,
	code/latte/triangulation/test-triangulation.cpp,
	code/latte/triangulation/triangulate.cpp,
	code/latte/triangulation/triangulate.h: New files.

2006-11-24  Matthias Koeppe  <mkoeppe@mail.math.uni-magdeburg.de>

	* code/latte/TrivialSubst.cpp, code/latte/TrivialSubst.h: New files.

	* code/latte/barvinok/barvinok.cpp (barvinok_DFS): Allow the
	decomposition method to fail; perform ``emergency enumeration'' in
	this case.

	* code/latte/barvinok/dec.cpp (readListCone): Removed.
	(decomposeCones): New overload.

	* code/latte/barvinok/barvinok.cpp,
	code/latte/barvinok/barvinok.h (BarvinokParameters): New slots to
	specify triangulation and short-vector method.

	* code/latte/barvinok/SubspaceAvoidingDecomposition.cpp,
	code/latte/barvinok/SubspaceAvoidingDecomposition.h,
	code/latte/Makefile.am: New experimental files.

	* code/latte/latte_system.cpp (HOST_NAME_MAX): Define if unknown.

	* code/latte/count.cpp: Use new decomposeCones flavor.
	Prepare TrivialMonomialSubstitution.

	* code/latte/barvinok/dec.h (readListCone): Removed.
	(decomposeCones): New overload.

	* code/latte/barvinok/barvinok.cpp:
	Keep track of maximum depth of the decomposition.

2006-11-23  Matthias Koeppe  <mkoeppe@mail.math.uni-magdeburg.de>

	* code/latte/count.cpp: Merge functionality of ehrhart into count,
	using commmand-line options --ehrhart-series,
	--simplified-ehrhart-series, --ehrhart-taylor=N.

	* code/latte/ReadLatteStyle.cpp,
	code/latte/ReadLatteStyle.h (ReadLatteStyleMatrix): Export.
	(WriteLatteStyleMatrix): New.

2006-11-22  Matthias Koeppe  <mkoeppe@mail.math.uni-magdeburg.de>

	* code/latte/Makefile.am, code/latte/adjacency/Makefile.am:
	Remove use of := assignment, which Automake 1.10 does not like.

	* code/latte/latte_system.cpp: Fix includes.

2006-11-21  Matthias Koeppe  <mkoeppe@mail.math.uni-magdeburg.de>

	* configure.ac: Make the Maple and script path available in config.h

	* code/latte/Makefile.am: Install the Maple scripts.

	* code/latte/ResSingle.cpp, code/latte/Residue.cpp, code/latte/RudyResNTL.cpp:
	Use the configured Maple path, and also use the full paths of the
	installed Maple scripts.  Fixes "ehrhart simplify".

	* code/latte/count.cpp: Fix output of negative Ehrhart coefficients.
	Thanks to Sven Verdoolaege.

2006-11-12  Matthias Koeppe  <mkoeppe@mail.math.uni-magdeburg.de>

	* code/latte/aggregation/aggregation.cpp: New.
	
2006-11-05  Matthias Koeppe  <mkoeppe@mail.math.uni-magdeburg.de>

	* code/latte/count.cpp: Initialize Poly->numOfVars.

	* code/latte/print.cpp, code/latte/print.h: Some const-ification.

	* code/latte/latte_system.cpp,
	code/latte/latte_system.h (create_temporary_directory,
	temporary_directory_name, remove_temporary_directory,
	temporary_file_name): New.

2006-10-12  Matthias Koeppe  <mkoeppe@mail.math.uni-magdeburg.de>

	* count.cpp: Support "homog vrep".

	* vertices/cdd.cpp, vertices/cdd.h (createCddExtFile2, computeVertexConesFromVrep):
	Const fixes.
	(computeVertexConesFromVrep): Produce, not consume numOfVars.
	(readCddExtFile): Produce numOfVars.

	* ReadingFile.cpp, ReadingFile.h (IntVector, IntCone, IntCone2):
	Unused, removed.

	* ReadLatteStyle.cpp, ReadLatteStyle.h, Polyhedron.h,
	latte_cddlib.cpp, latte_cddlib.h: New files. 

	* cone.cpp, cone.h, ramon.cpp, ramon.h (appendVectorToListVector):
	Move from ramon.[ch] to cone.[ch].

2006-10-09  Matthias Koeppe  <mkoeppe@mail.math.uni-magdeburg.de>

	Version 1.2-mk-0.7.1
	
	* Makefile.am (cvstag): New target.

2006-10-04  Matthias Koeppe  <mkoeppe@mail.math.uni-magdeburg.de>

	* code/latte/rational.cpp (constructRay): Speed up.

	* code/latte/barvinok/Triangulation.h (Triangulation): Unused, removed.

	* code/latte/barvinok/barvinok.cpp (barvinokStep):
	Fix copying of vertex, fixes segmentation fault.

2006-10-04  Matthias Koeppe  <mkoeppe@mail.math.uni-magdeburg.de>

	* code/latte/rational.cpp (constructRay): Speed up.

	* code/latte/barvinok/Triangulation.cpp (writeCDDextFileRudy):
	Don't request computation of input_adjacency (unused).
	(Triangulation): Unused, removed.

	* code/latte/barvinok/barvinok.cpp (barvinokStep): Fix copying of
	vertex, fixes segmentation fault.

2006-10-03  Matthias Koeppe  <mkoeppe@mail.math.uni-magdeburg.de>

	Version 1.2-mk-0.7

2006-10-02  Matthias Koeppe  <mkoeppe@mail.math.uni-magdeburg.de>

	* code/latte/Makefile.am, code/latte/ExponentialEhrhart.cpp,
	code/latte/ExponentialEhrhart.h, code/latte/count.cpp: New code
	for computing Ehrthart polynomials of integral polytopes
	(count --ehrhart-polynomial).

	* code/latte/ExponentialSubst.cpp,
	code/latte/ExponentialSubst.h (compute_sums_of_scalar_powers,
	compute_sums_of_scalar_powers_mpz): New, factored out from
	computeExponentialResidue_Single.
	(computeExponentialResidue_Single): Use it here.

	* code/latte/count.cpp, code/latte/ExponentialApprox.cpp,
	code/latte/IntegralHull.cpp, code/latte/Irrational.cpp,
	code/latte/ResSingle.cpp, code/latte/RudyResNTL.cpp,
	code/latte/barvinok/ConeDecom.cpp,
	code/latte/barvinok/ConeDecom.h, code/latte/barvinok/barvinok.cpp,
	code/latte/barvinok/barvinok.h, code/latte/barvinok/dec.cpp,
	code/latte/barvinok/dec.h, code/latte/dual.cpp,
	code/latte/ehrhart.cpp, code/latte/genFunction/piped.cpp,
	code/latte/maximize.cpp, code/latte/minimize.cpp,
	code/latte/print.cpp, code/latte/vertices/cdd.cpp: Adapt to change
	of vertex representation.

	* code/latte/cone.h (Vertex): New class.
	(listCone): Change representation of the vertex.

	* code/latte/myheader.h: Removed.

2006-10-01  Matthias Koeppe  <mkoeppe@mail.math.uni-magdeburg.de>

	Some performance improvements, in particular for the all-primal
	method. 
	
	* code/latte/dual.cpp (dualizeCones): Fix memory leak, improve
	performance of rational vectors.

	* code/latte/rational.h (rationalVector::set_entry): Extend interface.

	* code/latte/Irrational.cpp (simplifyConeStabilityCube): New.
	(computeConeStabilityCube): Use it here to return simpler rational
	numbers, using powers of two.
	(irrationalizeCone): Use powers of two.
	(isConeIrrational): Use InnerProductModulo.

	* code/latte/latte_ntl.cpp, code/latte/latte_ntl.h (InnerProductModulo):
	New.

	* code/latte/Makefile.am: New file latte_ntl.cpp.

2006-09-22  Matthias Koeppe  <mkoeppe@mail.math.uni-magdeburg.de>

	* code/latte/rational.cpp: New constructor for initializing from
	an integer vector and a common denominator.
	(constructRay): Re-implement.
	(canonicalizeRationalVector): Access data directly to avoid
	repeated compute_integer_scale calls.

2006-09-16  Matthias Koeppe  <mkoeppe@mail.math.uni-magdeburg.de>

	Version 1.2-mk-0.6
	
2006-09-16  Matthias Koeppe  <mkoeppe@mail.math.uni-magdeburg.de>

	Add copyright and license notices to all source files.  Files
	without any author notices are marked "Copyright 2002-2004 Jesus
	A. De Loera, David Haws, Raymond Hemmecke, Peter Huggins, Jeremy
	Tauzer, Ruriko Yoshida" (the original LattE team).

	* code/latte/count.cpp: New command-line switches --polynomial,
	--dual, reflecting current default behavior.

2006-09-15  Matthias Koeppe  <mkoeppe@mail.math.uni-magdeburg.de>

	* code/latte/ReadingFile.cpp (CheckRed): Handle errors of redcheck_gmp.

	* code/latte/CheckEmpty.cpp (CheckEmpty): Handle errors of CDD+.

2006-09-14  Matthias Koeppe  <mkoeppe@mail.math.uni-magdeburg.de>

	* code/latte/genFunction/piped.cpp (PointsInParallelepipedGenerator::GeneratePoint):
	Repair computation of points; fixes polynomial substitution.

2006-09-13  Matthias Koeppe  <mkoeppe@mail.math.uni-magdeburg.de>

	Performance improvements.
	
	* code/latte/ExponentialSubst.cpp: Remove unused var.

	* code/latte/Irrational.cpp, code/latte/ResSingle.cpp,
	code/latte/RudyResNTL.cpp, code/latte/binarySearchIP.cpp,
	code/latte/count.cpp, code/latte/dual.cpp, code/latte/ehrhart.cpp,
	code/latte/maximize.cpp, code/latte/genFunction/maple.h,
	code/latte/minimize.cpp, code/latte/print.cpp,
	code/latte/rational.cpp, code/latte/rational.h,
	code/latte/vertices/cdd.cpp, code/latte/genFunction/piped.cpp,
	code/latte/genFunction/piped.h: Change the interface to rational
	vectors, so the result of scaleRationalVectorToInteger can be
	cached.

	* code/latte/rational.cpp, code/latte/rational.h: Remove some
	unused functions.

	* code/latte/convert.cpp (transformArrayBigVectorToListVector):
	Save some copying.

	* code/latte/genFunction/piped.h,
	code/latte/genFunction/piped.cpp: Avoid computing with large
	numbers.  Precompute more data.
	(pointsInParallelepipedOfUnimodularCone):  Removed.  The general
	function is faster.
	
2006-09-04  Matthias Koeppe  <mkoeppe@mail.math.uni-magdeburg.de>

	* code/latte/genFunction/piped.cpp, code/latte/barvinok/dec.cpp:
	Remove unused variables.

	* code/latte/PolyTree.h (PolyTree_Node): Add virtual destructor to
	fix warning from GCC.

	* code/latte/Residue.cpp: Remove unused variable.

	* code/latte/count.cpp: Change calls to computeVertexConesFromVrep.
	Fix uninitialized-variable problem in "vrep" mode, which caused
	segfaults in SPARC/64-bit compiles.

	* code/latte/ehrhart.cpp, code/latte/maximize.cpp,
	code/latte/minimize.cpp, code/latte/ramon.cpp: Change calls to
	computeVertexConesFromVrep.

	* code/latte/vertices/cdd.cpp, code/latte/vertices/cdd.h
	(computeVertexConesFromVrep): Change interface to remove unused
	argument.

2006-09-03  Matthias Koeppe  <mkoeppe@mail.math.uni-magdeburg.de>

	* code/latte/count.cpp (main): Don't segfault when invoked without
	arguments.

	* code/latte/Irrational.cpp (computeConeStabilityCube_simplicial):
	Fix computation of center (always round down!).  Fixes test cases
	aardallenstra.equ, tru_cube_latte, tru_simplex_latte with "--irr
	--exp --maxdet=500" (Assertion failed, not integer equivalent with
	center).

2006-08-28  Matthias Koeppe  <mkoeppe@mail.math.uni-magdeburg.de>

	* code/latte/genFunction/NTL_to_LiDIA.cpp
	(convert_vec_ZZ_to_bigint_array): Remove implementation
	restriction; arbitrarily large numbers can now be copied.

	* code/latte/barvinok/barvinok.cpp,
	code/latte/barvinok/ConeDecom.cpp, code/latte/barvinok/Cone.cpp,
	code/latte/ResSingle.cpp, code/latte/RudyResNTL.cpp: Remove
	g++-isms.

2006-07-16  Matthias Koeppe  <mkoeppe@mail.math.uni-magdeburg.de>

	* code/latte/genFunction/piped.cpp,
	code/latte/genFunction/piped.h: Remove arbitrary limitation of the
	Smith normal form elements to machine integers.

	* code/latte/latte_random.cpp,
	code/latte/latte_random.h (uniform_random_number): Overload to
	handle NTL integers.
	(seed_random_generator): Also seed the NTL random generator.

2006-07-15  Matthias Koeppe  <mkoeppe@mail.math.uni-magdeburg.de>

	* code/latte/banner.cpp (latte_banner):
	Show web address of LattE macchiato.

2006-07-13  Matthias Koeppe  <mkoeppe@mail.math.uni-magdeburg.de>

	* code/latte/genFunction/piped.cpp (get_integer_comb): Fix a bug
	caused by integer overflow for `count vrep --exp --maxdet=1000
	random-simplex/random-simplex-dim4-digits2-9.vrep'.  

	* code/latte/count.cpp: Don't delete the input file in vrep mode.

2006-07-12  Matthias Koeppe  <mkoeppe@mail.math.uni-magdeburg.de>

	* m4/gmp-check.m4: Use "-lgmpxx -lgmp"; the Solaris linker needs
	this order!

2006-07-06  Matthias Koeppe  <mkoeppe@mail.math.uni-magdeburg.de>

	Version 1.2-mk-0.5

	* configure.ac: New release.

	* code/latte/count.cpp: Make the "--all-primal vrep" case work.

	* m4/lidia-check.m4: Fix for LiDIA 2.2.0.

	* code/latte/genFunction/NTL_to_LiDIA.cpp,
	code/latte/genFunction/matrix_ops.cpp: Fix LiDIA includes.

	* code/latte/dual.cpp (dualizeCones): Don't delete the facets of
	the first cone.

2006-07-04  Matthias Koeppe  <mkoeppe@mail.math.uni-magdeburg.de>

	Version 1.2-mk-0.4
	
	* code/latte/Irrational.cpp, code/latte/Makefile.am,
	code/latte/barvinok/barvinok.cpp, code/latte/count.cpp: Include
	the irrationalization code in the distribution.

	* configure.ac: Try to determine "fast" compiler flags.

2006-07-03  Matthias Koeppe  <mkoeppe@mail.math.uni-magdeburg.de>

	Revive the "vrep" code.
	
	* code/latte/adjacency/Makefile.am, code/latte/Makefile.am:
	New subdir "adjacency".

	* configure.ac: Check for cddlib, so we can build the
	ComputeAdjacency binary.  Compute and define
	COMPUTEADJACENCY_PATH.

	* m4/define_dir.m4: New file.

2006-07-02  Matthias Koeppe  <mkoeppe@mail.math.uni-magdeburg.de>

	Implement the irrational all-primal method, where
	triangulation is also done in primal space.
	
	* code/latte/count.cpp: Measure time for irrationalization.

	* code/latte/Irrational.cpp (computeConeStabilityCube_general):
	Implement.
	(estimate_barvinok_depth): New, factored out from
	irrationalizeCone; implement for non-simplicial case.
	(irrationalizeCone): Use it here.

	* code/latte/vertices/cdd.cpp, code/latte/vertices/cdd.h
	(ReadLpsFile, LP): Extend interface.

	* code/latte/barvinok/barvinok.cpp,
	code/latte/barvinok/barvinok.h: New timer.

	* code/latte/Irrational.h (computeConeStabilityCube): Change
	interface, split implementation into two functions.

	* code/latte/Irrational.cpp (irrationalizeCone): Estimates are
	based on maximum entry of rays, not facets.
	(computeConeStabilityCube): Change interface, split implementation
	into two functions.

	* code/latte/cone.h (listVector::listVector): New optional
	argument for rest.

	* code/latte/count.cpp: Handle new option --irrational-all-primal
	(--all-primal).

	* code/latte/dual.cpp, code/latte/dual.h
	(computeTightInequalitiesOfCones): New.

	* code/latte/barvinok/barvinok.cpp, code/latte/barvinok/barvinok.h:
	New decomposition type, IrrationalAllPrimalDecomposition.

	* code/latte/vertices/cdd.cpp (computeVertexCones,
	computeVertexConesViaLrs): Remove unnecessary call to
	createListOfInequalities.

2006-07-01  Matthias Koeppe  <mkoeppe@mail.math.uni-magdeburg.de>

	* code/latte/count.cpp: Use upgrade constructors to upgrade
	BarvinokParameters to one of its subclasses.  Measure time for
	subtasks using the new Timer class; take time for child processes
	properly into account.

	* code/latte/barvinok/ConeDecom.cpp (barvinokDecomposition_Single):
	Take the triangulation time.

	* code/latte/barvinok/barvinok.cpp, code/latte/barvinok/barvinok.h
	(BarvinokParameters): Move slot Flags here from subclass
	Single_Cone_Parameters.  New slots for timers.  New method
	print_statistics.
	(Single_Cone_Parameters): Create upgrade constructor.

	* code/latte/barvinok/dec.cpp, code/latte/barvinok/dec.h
	(Generic_Vector_Single_Cone_Parameters,
	Standard_Single_Cone_Parameters): Create upgrade constructors.
	(decomposeAndComputeResidue): New function, factored out from
	decomposeCones_Single.
	(decomposeCones_Single): Reimplement using
	decomposeAndComputeResidue.

	* code/latte/timing.cpp, code/latte/timing.h (getcputime): Unused,
	removed.
	(Timer): New class.

	* code/latte/ExponentialApprox.h, code/latte/ExponentialSubst.h
	(Exponential_Single_Cone_Parameters):
	(Write_Exponential_Sample_Formula_Single_Cone_Parameters): Create
	upgrade constructors.

	* code/latte/Irrational.cpp, code/latte/Irrational.h
	(computeConeStabilityCube): New.
	(irrationalizeCone): Use it here.  Implement the irrationalization
	from math.CO/0603308v2.

2006-06-30  Matthias Koeppe  <mkoeppe@mail.math.uni-magdeburg.de>

	* code/latte/barvinok/Triangulation.cpp (Triangulation_Load_Save):
	Fix cdd invocation in the load/save case.

	* code/latte/count.cpp:
	Don't forget to initialize the Flags in the exponential case.

2006-06-28  Matthias Koeppe  <mkoeppe@mail.math.uni-magdeburg.de>

	Version 1.2-mk-0.3
	
	* code/latte/cone.h (listCone): New slot
	lattice_points_scalar_products.

	* code/latte/ExponentialSubst.cpp,
	code/latte/ExponentialSubst.h (computeExponentialResidue_Single):
	Compute scalar products of points in paralellelepiped with the
	generic vector directly, using computeLatticePointsScalarProducts;
	this is faster than first computing all the points.

	* code/latte/genFunction/piped.cpp,
	code/latte/genFunction/piped.h (PointsInParallelepipedGenerator::compute_multiplier):
	New.
	(PointsInParallelepipedGenerator::translate_lattice_point): New.
	(PointsScalarProductsGenerator): New class.
	(computeLatticePointsScalarProducts): New.

2006-06-27  Matthias Koeppe  <mkoeppe@mail.math.uni-magdeburg.de>

	* code/latte/genFunction/piped.cpp,
	code/latte/genFunction/piped.h (PointsInParallelepipedGenerator):
	Precompute some more data.

	* code/latte/ExponentialSubst.cpp (computeExponentialResidue_Single):
	Reimplement for speed.

2006-06-25  Matthias Koeppe  <mkoeppe@mail.math.uni-magdeburg.de>

	* code/latte/genFunction/piped.cpp (translate_lattice_point):
	Reimplement for speed.

	* m4/ntl-check.m4: Enable out-of-sourcedir compiles.

	* code/latte/count.cpp: Catch NotIrrationalException.

	* code/latte/Irrational.cpp, code/latte/Irrational.h
	(irrationalizeCone): Fix code and put in assertions for
	irrationality and integer equivalence.

	* code/latte/convert.cpp, code/latte/convert.h (createFacetMatrix2):
	New function.

	* code/latte/genFunction/piped.cpp (PointsInParallelepipedGenerator): 
	Special-case unimodular cones (for speed).  In the non-unimodular
	case, avoid matrix inversion.
	(computePointsInParallelepiped): Always use
	pointsInParallelepiped; we will make it faster than
	pointsInParallelepipedOfUnimodularCone. 

2006-06-24  Matthias Koeppe  <mkoeppe@mail.math.uni-magdeburg.de>

	* code/latte/barvinok/barvinok.cpp (barvinok_DFS): Fix counting
	of current simplicial cones.  Use checkConeIrrational.

2006-06-23  Matthias Koeppe  <mkoeppe@mail.math.uni-magdeburg.de>

	* code/latte/Irrational.cpp (irrationalizeCone): Check that
	irrationalization is OK.

	* code/latte/Irrational.cpp, code/latte/Irrational.h 
	(isConeIrrational, checkConeIrrational): New.
	(assertConesIntegerEquivalent):  New.

2006-04-03  Matthias Koeppe  <mkoeppe@mail.math.uni-magdeburg.de>

	* code/latte/ReadingFile.cpp (CheckRed): Don't put FILENAME.latte
	files into the directory of the example; put them into the current
	directory.  This enables parallel testing, if the current
	directory is unique.

	* EXAMPLES/*: Add missing "linearity" keyword in many examples.

2006-04-02  Matthias Koeppe  <mkoeppe@mail.math.uni-magdeburg.de>

	* code/latte/barvinok/barvinok.cpp:
	Fix conditional inclusion of irrational code.

2006-04-01  Matthias Koeppe  <mkoeppe@mail.math.uni-magdeburg.de>

	* code/latte/Residue.cpp (Residue_Single_Cone):
	Handle non-unimodular cones.

	* CheckEmpty.cpp, banner.cpp, dual.cpp, vertices/cdd.cpp:
	Remove excess whitespace.

	* count.cpp: Write out the total time.

	* barvinok/dec.cpp (decomposeCones_Single): Write the
	numOfLatticePoints file also in the "homog" case.

	* CheckEmpty.cpp, Grobner.cpp, IntegralHull.cpp, Makefile.am,
	ReadingFile.cpp, ResSingle.cpp, Residue.cpp, RudyResNTL.cpp,
	binarySearchIP.cpp, cone.cpp, count.cpp, dual.cpp, ehrhart.cpp,
	latte_system.cpp, latte_system.h, maximize.cpp, minimize.cpp,
	barvinok/Triangulation.cpp, genFunction/maple.cpp,
	genFunction/piped.cpp, print.cpp, ramon.cpp, rational.cpp,
	tmpIP.cpp, vertices/cdd.cpp: Handle the exit status of all
	subprocesses.  When an error occurs, exit with a nonzero exit
	status.

2006-03-31  Matthias Koeppe  <mkoeppe@mail.math.uni-magdeburg.de>

	* barvinok/barvinok.cpp, barvinok/barvinok.h (Single_Cone_Parameters):
	New slot Total_Simplicial_Cones.

2006-03-30  Matthias Koeppe  <mkoeppe@mail.math.uni-magdeburg.de>

	* count.cpp: New command-line argument --random-seed=N.

	* latte_random.cpp, latte_random.h (seed_random_generator): New.

	* genFunction/piped.cpp (pointsInParallelepiped):
	Fix delete/delete[] issue.

	* vertices/cdd.cpp: flush stdout to show progress

	* barvinok/barvinok.cpp: Conditionalize irrationalization.

	* ExponentialSubst.h (scalar_power): Export.

	* Makefile.am, latte_random.cpp, latte_random.h:
	New files, latte_random.h, .cpp

	* genFunction/piped.cpp (get_multipliers_from_snf):
	Check implementation restriction.

	* genFunction/NTL_to_LiDIA.cpp (convert_bigint_matrix_to_mat_ZZ):
	Don't convert via longs.
	(convert_vec_ZZ_to_bigint_array): Abort when numbers are too large.

2006-03-29  Matthias Koeppe  <mkoeppe@mail.math.uni-magdeburg.de>

	* barvinok/barvinok.cpp, barvinok/barvinok.h (barvinok_DFS):
	Special-case max_determinant == 0 to mean "no decomposition".  In
	dual decomposition, observe the dual determinant rather than the
	primal determinant.

	* count.cpp: Enable option "nodecom" in all modes; can also be spelt
	"--no-decomposition".

	* Makefile.am: Conditionalize on HAVE_EXPERIMENTS rather than
	MAINTAINER_MODE.

	* simple-main.cpp: Removed (currently broken)

	* genFunction/piped.cpp, genFunction/piped.h
	(PointsInParallelepipedGenerator): New class.
	(pointsInParallelepiped): Use PointsInParallelepipedGenerator.
	(movePoint): Unused, removed.

	* genFunction/IntCombEnum.cpp: Fix gcc warning

	* Grobner.cpp, ReadingFile.cpp, ramon.cpp, ehrhart.cpp,
	maximize.cpp, minimize.cpp: Don't make cout unbuffered.

2006-03-20  Matthias Koeppe  <mkoeppe@mail.math.uni-magdeburg.de>

	* code/latte/Makefile.am: Fix for non-LiDIA build.
	
	* m4/lidia-check.m4: Fix HAVE_LIDIA conditional.

	* code/latte/genFunction/piped.cpp: Fix #includes.

	* code/latte/genFunction/NTL_to_LiDIA.h,
	code/latte/genFunction/NTL_to_LiDIA.cpp
	(print_debug_vector, print_debug_matrix): Move mat_ZZ versions to
	print.h, print.cpp.
	(convert_listVector_to_mat_ZZ): Move to convert.h, convert.cpp.

	* code/latte/Residue.cpp (Residue, Residue_Single_Cone): This code
	silently assumes unimodular cones; put in an assertion.

2006-03-19  Matthias Koeppe  <mkoeppe@mail.math.uni-magdeburg.de>

	* code/latte/count.cpp: Write file "numOfLatticePoints" in --exp
	mode too.

2006-03-19  Susan Margulies <smargulies@ucdavis.edu>

	* code/latte/genFunction/piped.cpp,
	code/latte/genFunction/IntCombEnum.cpp,
	code/latte/genFunction/matrix_ops.cpp,
	code/latte/genFunction/matrix_ops.h: Fixed up enumeration code.

2006-03-18  Matthias Koeppe  <mkoeppe@mail.math.uni-magdeburg.de>

	* code/latte/genFunction/matrix_ops.cpp: Fix conditionalization.

	* code/latte/genFunction/matrix_ops.h: Fix #include

	* code/latte/cone.h (listVector): Add constructors.

	* code/latte/ramon.cpp, code/latte/ramon.h (appendVectorToListVector):
	Change interface.
	(transformListVectorToArrayVector, transformArrayVectorToListVector,
	readListVectorMLP): Unused, removed.

2006-03-18  Susan Margulies <smargulies@ucdavis.edu>

	* code/latte/genFunction/piped.cpp, code/latte/genFunction/piped.h
	(pointsInParallelepiped): Changed interface.

	* code/latte/ehrhart.cpp, code/latte/maximize.cpp,
	code/latte/minimize.cpp: Change all callers of pointsInParallelepiped.

	* code/latte/ramon.cpp, code/latte/ramon.h (isEqual,
	isVectorInListVector): New.

2006-03-18  Matthias Koeppe  <mkoeppe@mail.math.uni-magdeburg.de>

	* code/latte/dual.cpp (computeDetAndFacetsOfSimplicialCone):
	Facet divisors are always positive.

2006-03-17  Susan Margulies <smargulies@ucdavis.edu>

	* code/latte/genFunction/IntCombEnum.cpp: Fixed enumeration code
	to include origin, and optimized code.

2006-03-16  Matthias Koeppe  <mkoeppe@mail.math.uni-magdeburg.de>

	* code/latte/Irrational.cpp: Put in warning about implementation flaw.

2006-03-13  Susan Margulies <smargulies@ucdavis.edu>

	* code/latte/Makefile.am, code/latte/genFunction/IntCombEnum.cpp,
	code/latte/genFunction/IntCombEnum.h,
	code/latte/genFunction/NTL_to_LiDIA.cpp,
	code/latte/genFunction/NTL_to_LiDIA.h,
	code/latte/genFunction/matrix_ops.cpp,
	code/latte/genFunction/matrix_ops.h,
	code/latte/genFunction/piped.cpp: Added files and functions
	related to non-unimodular lattice point enumeration.

2006-03-13  Matthias Koeppe  <mkoeppe@mail.math.uni-magdeburg.de>

	* code/latte/dual.h, code/latte/dual.cpp
	(computeDetAndFacetsOfSimplicialCone): Cancel gcds of the facet
	vectors, and also fill the new face_divisors slot.
	(dualizeBackCones): Now dualizing is an involution, even for our
	datastructure, so don't cancel gcds here; no scaling tricks
	needed.

	* code/latte/convert.cpp, code/latte/convert.h
	(createFacetMatrix): The stored facet vectors are no longer scaled
	by the full determinant, so do the scaling here for creating the
	matrix.

	* code/latte/cone.h (listCone): New slot facet_divisors.

	* code/latte/Irrational.cpp (irrationalizeCone):
	computeDetAndFacetsOfSimplicialCone only if not computed yet.

2006-03-10  Matthias Koeppe  <mkoeppe@mail.math.uni-magdeburg.de>

	* Makefile.am, acinclude.m4, autogen.sh:
	Remove acinclude.m4 in favor of ACLOCAL_AMFLAGS = -I m4

2006-03-09  Matthias Koeppe  <mkoeppe@mail.math.uni-magdeburg.de>

	* simple-main.cpp: In the --exp case, don't forget to set the
	decomposition type.

	* count.cpp: Support --exp.  Signal that "homog --exp" is not implemented.

	* code/latte/ResSingle.cpp (ResidueFunction_Single_Cone): 
	* code/latte/RudyResNTL.cpp (ResidueFunction): These functions
	assume that the vertex of each cone is 0, thus the irrational
	decomposition does not currently work in the homogenized Barvinok
	algorithm.  They also assume that the cones are unimodular.  Put
	in an assert() for that.

2006-03-09  Matthias Koeppe  <mkoeppe@mail.math.uni-magdeburg.de>

	Fix some memory problems.
	
	* code/latte/rational.cpp:
	Use abort() instead of exit(0) to indicate memory allocation error.

	* code/latte/convert.cpp (transformArrayBigVectorToListVector):
	Fix memory leak shown by valgrind.

	* code/latte/cone.cpp, code/latte/cone.h (freeCone): New.
	(freeListCone): Use it here.

	* code/latte/Residue.cpp (Residue_Single_Cone):
	Use freeCone() to delete all data of the cone.

	* code/latte/PolyTree.cpp:
	Fix delete/delete[] problem shown by valgrind.

	* code/latte/barvinok/barvinok.cpp (barvinok_Single):
	Don't computeDetAndFacetsOfSimplicialCone in the
	IrrationalPrimalDecomposition case, where it is already computed.

2006-03-09  Matthias Koeppe  <mkoeppe@mail.math.uni-magdeburg.de>

	Implement irrational primal decompositions.
	
	* code/latte/count.cpp: Change calls to decomposeCones_Single,
	decomposeCones.  New command-line options --irr, --maxdet=N.

	* code/latte/Irrational.cpp (irrationalizeCone): Implement.

	* code/latte/ExponentialSubst.cpp:
	(Exponential_Single_Cone_Parameters::ConsumeCone): No need to
	dualizeBack() anymore.

	* code/latte/ExponentialApprox.cpp:
	(Write_Exponential_Sample_Formula_Single_Cone_Parameters::ConsumeCone):
	No need to dualizeBack() anymore.

	* code/latte/Grobner.cpp, code/latte/ehrhart.cpp,
	code/latte/maximize.cpp, code/latte/minimize.cpp,
	code/latte/simple-main.cpp: Change calls to decomposeCones_Single,
	decomposeCones.

	* code/latte/barvinok/dec.cpp, code/latte/barvinok/dec.h
	(decomposeCones, decomposeCones_Single): Change interface.

	* code/latte/barvinok/barvinok.cpp (barvinokSingle):
	In IrrationalPrimalDecomposition, polarize back and
	irrationalize cones after triangulation.
	(barvinok_DFS): In DualDecomposition, polarize back cones after
	Barvinok decomposition; pass the polarized-back cone to ConsumeCone().

	* code/latte/barvinok/barvinok.h
	(BarvinokParameters::DecompositionType): New typedef.

	* code/latte/print.cpp (printConeToFile): Also print dual determinant.

	* code/latte/rational.cpp, code/latte/rational.h
	(createRationalVector): Create a vector of length numOfVars, not
	numOfVars+1.
	(addRationalVector, scaleRationalVectorToInteger,
	canonicalizeRationalVector): New.

2006-03-08  Matthias Koeppe  <mkoeppe@mail.math.uni-magdeburg.de>

	Add infrastructure for irrational primal decompositions.
	
	* code/latte/barvinok/barvinok.h (BarvinokParameters): New slot
	"decomposition".

	* code/latte/barvinok/dec.h, code/latte/barvinok/dec.cpp
	(decomposeCones_Single): Change interface.

	* code/latte/barvinok/dec.cpp 
	(Standard_Single_Cone_Parameters::ConsumeCone): Don't dualize back
	in the primal case.
	* code/latte/ExponentialSubst.cpp
	(Exponential_Single_Cone_Parameters::ConsumeCone): Don't dualize
	back in the primal case.
	* code/latte/ExponentialApprox.cpp
	(Write_Exponential_Sample_Formula_Single_Cone_Parameters::ConsumeCone):
	Don't dualize back in the primal case.

	* code/latte/simple-main.cpp:
	New switch --irr, irrational decomposition.

	* code/latte/Irrational.cpp, code/latte/Irrational.h: New files.

2006-03-04  Matthias Koeppe  <mkoeppe@mail.math.uni-magdeburg.de>

	Compute and store the data of the polar cones during the Barvinok
	decomposition.
	
	* code/latte/genFunction/piped.cpp
	(computePointsInParallelepiped): The stored determinant is now
	signed, so discriminate on its absolute value.

	* code/latte/barvinok/barvinok.cpp (barvinok_Single):
	Call computeDetAndFacetsOfSimplicialCone for the
	to-be-decomposed cone.
	(barvinokStep): Pass precomputed dual to ComputeOmega; call
	computeDetAndFacetsOfSimplicialCone for the subcones.

	* code/latte/dual.cpp, code/latte/dual.h (computeDetAndFacetsOfSimplicialCone):
	New.
	(dualizeBackCones): Use it here.

	* code/latte/barvinok/Cone.cpp, code/latte/barvinok/Cone.h (ComputeOmega):
	Change interface to make use of precomputed dual (-transpose(inv(B))).

	* code/latte/convert.cpp, code/latte/convert.h (createFacetMatrix):
	New.

2006-03-04  Matthias Koeppe  <mkoeppe@mail.math.uni-magdeburg.de>

	More code clean up.
	
	* code/latte/myheader.h (listVector, rationalVector, listCone):
	Moved to cone.h, rational.h

	* code/latte/rational.h (rationalVector): Moved here from myheader.h

	* code/latte/cone.h (listVector, listCone): Move here from myheader.h

	* code/latte/Makefile.am: Build experimental stuff only in
	"maintainer mode".

	* code/latte/Residue.cpp, code/latte/Residue.h (Residue_Single_Cone):
	Change interface slightly.

	* code/latte/ExponentialSubst.cpp, code/latte/ExponentialSubst.h:
	Use Generic_Vector_Single_Cone_Parameters to simplify the code.

	* code/latte/ResSingle.cpp: Rename the Random_Lambda slot to
	generic_vector.

	* code/latte/flags.h: Moved class definitions elsewhere,
	now only contains flags again.

	* code/latte/barvinok/barvinok.h (BarvinokParameters, Single_Cone_Parameters):
	Move here from flags.h

	* code/latte/barvinok/dec.cpp, code/latte/barvinok/dec.h (Collecting_Single_Cone_Parameters):
	Move here from flags.h
	(Standard_Single_Cone_Parameters): Move here from flags.h
	(NotGenericException): Move here from ExponentialSubst.h
	(guess_generic_vector): Move here from ExponentialSubst.h

	(Generic_Vector_Single_Cone_Parameters): New class.
	(barvinokDecomposition_List): New function.

2006-03-03  Matthias Koeppe  <mkoeppe@mail.math.uni-magdeburg.de>

	* code/latte/ExponentialSubst.cpp, code/latte/ExponentialSubst.h
	(computeExponentialResidueWeights): New, factored out from
	computeExponentialResidue_Single.

	* code/latte/dual.h: Add preprocessor magic.

	* code/latte/Grobner.cpp, code/latte/Makefile.am,
	code/latte/Residue.cpp, code/latte/Residue.h,
	code/latte/count.cpp, code/latte/ehrhart.cpp,
	code/latte/maximize.cpp, code/latte/minimize.cpp,
	code/latte/print.cpp, code/latte/print.h,
	code/latte/printsingle.cpp, code/latte/barvinok/dec.cpp,
	code/latte/simple-main.cpp: 
	Move residue calculations from print.cpp, print.h, printsingle.cpp to
	Residue.cpp, Residue.h.

2006-03-02  Matthias Koeppe  <mkoeppe@mail.math.uni-magdeburg.de>

	* code/latte/barvinok/barvinok.cpp (PtrCone): Removed.
	(barvinok): Removed.
	(barvinok_Single, barvinok_DFS): Restructured to get rid of use of
	PtrCone and Cone in favor of listCone.  Avoid some repeated determinant
	computations.  Avoid generating cones with determinant 0.

	* code/latte/barvinok/Cone.cpp, code/latte/barvinok/Cone.h (Cone):
	Removed.

	* code/latte/myheader.h (GIVETIME, listRationalVector, inputFile):
	Unused, removed.

	* code/latte/convert.cpp, code/latte/convert.h: "const" fix.

2006-03-02  Matthias Koeppe  <mkoeppe@mail.math.uni-magdeburg.de>

	Version 1.2-mk-0.2
	
	* code/latte/dual.cpp (dualizeBackCones): Special case
	unimodular cones for speed. 

2006-03-02  Matthias Koeppe  <mkoeppe@mail.math.uni-magdeburg.de>

	Fixes to get it running on Solaris.
	
	* configure.ac: Check for cddr+_gmp in preference of cddr+.
	Check for <sstream>.

	* code/latte/Makefile.am: Handle GMP_CFLAGS, GMP_LIBS.

	* m4/ntl-check.m4: Don't require that the NTL namespace is configured.

	* code/latte/ReadingFile.cpp (CheckRed): Change shell redirection
	operator so it works with Solaris /bin/sh.
	* code/latte/vertices/cdd.cpp (computeVertexConesFromVrep):
	Likewise.

2006-03-01  Matthias Koeppe  <mkoeppe@mail.math.uni-magdeburg.de>

	* code/latte/todd/todd-expansion.cpp (taylor_reciprocal): Fix
	warning shown by -Wall.

2006-03-01  Matthias Koeppe  <mkoeppe@mail.math.uni-magdeburg.de>

	This set of changes cleans up several interfaces (notably
	barvinok.h and ConeDecom.h are now simple and useful) and
	adds a memory-save mode for the exponential substitution.
	
	* simple-main.cpp: Use the "memory save" version of the polynomial
	and exponential substitutions.

	* ExponentialSubst.cpp, ExponentialSubst.h (Exponential_Single_Cone_Parameters):
	New class.
	(decomposeAndComputeExponentialResidue): New function.

	* flags.h (BarvinokParameters): New slots File_Name,
	Number_of_Variables.
	(Single_Cone_Parameters): Remove slot Cone.

	* barvinok/dec.cpp (decomposeCones, decomposeCones_Single): Change
	call to barvinokDecomposition_Single.

	* barvinok/dec.h, barvinok/dec.cpp (createConeDecMatrix): Move to
	convert.h.

	* barvinok/ConeDecom.cpp, barvinok/ConeDecom.h
	(barvinokDecomposition_Single): Simplify the interface, overload
	for listCone input data.

	(transformArrayBigVectorToListVector): Move to convert.h.

	* barvinok/barvinok.cpp, barvinok/barvinok.h (barvinok_DFS, barvinok_Single):
	Simplify/unify the interface.

	* ramon.cpp, ramon.h (freeListVector): New.

	* rational.cpp, rational.h (copyRationalVector): New.

	* dual.cpp (transformArrayBigVectorToListVector2, createConeDecMatrix2):
	Unused, removed.

	* cone.cpp, cone.h (freeListCone): New.

	* convert.cpp, convert.h: New files.

	* ResSingle.cpp: Fix references to members in
	Single_Cone_Parameters (ZZ instead of ZZ*).

	* barvinok/dec.cpp
	(Collecting_Single_Cone_Parameters::ConsumeCone): New, implement
	the traditional LattE behavior of collecting all decomposed cones.

	(decomposeCones): Use Collecting_Single_Cone_Parameters together with
	barvinokDecomposition_Single instead of barvinokDecomposition.

	Simplify some references to members in Single_Cone_Parameters (ZZ
	instead of ZZ*); the indirection is no longer necessary now that we
	don't convert between "Barvinok_Parameters" and
	"Single_Cone_Parameters" any more.

	* barvinok/barvinok.cpp (barvinok_DFS): Respect
	Parameters->max_determinant.

	* barvinok/ConeDecom.cpp, barvinok/ConeDecom.h
	(transformRudyListConeIntoRamonListCone): Removed.
	(barvinokDecomposition): Removed; we now use
	barvinokDecomposition_Single.

	* dual.cpp (transformRudyListConeIntoRamonListCone2): Unused, removed.

	* RudyResNTL.h, flags.h (Single_Cone_Parameters,
	Standard_Single_Cone_Parameters): Moved from RudyResNTL.h to
	flags.h (temporary location).
	* flags.h (Collecting_Single_Cone_Parameters): New class.

	* genFunction/piped.cpp: Fix last change.

2006-02-28  Matthias Koeppe  <mkoeppe@mail.math.uni-magdeburg.de>

	* code/latte/count.cpp, code/latte/simple-main.cpp:
	Avoid CheckEmpty call for CDD-style input format (does not work), warn.

	* code/latte/genFunction/piped.cpp, code/latte/genFunction/piped.h
	(computePointsInParallelepiped): New function.
	(computePointsInParallelepipeds): Use it here.

	* code/latte/barvinok/ConeDecom.cpp,
	code/latte/barvinok/ConeDecom.h (barvinokDecomposition_Single):
	Simplify arglist by moving Node_Controller into
	Single_Cone_Parameters.

	* code/latte/RudyResNTL.h, code/latte/ResSingle.cpp
	(ResidueFunction_Single_Cone): Simplify arglist by moving
	Node_Controller into Single_Cone_Parameters.

	* code/latte/RudyResNTL.h (Single_Cone_Parameters)
	(Standard_Single_Cone_Parameters): Use subclassing and virtual
	method ConsumeCone to refactor the code.

	* code/latte/barvinok/barvinok.cpp (barvinok_Single)
	(barvinok_DFS): Factor out residue calculation from DFS Barvinok.
	* code/latte/barvinok/dec.cpp (ConsumeCone): Residue calculation
	in DFS Barvinok is now performed by the virtual method
	Single_Cone_Parameters::ConsumeCone.

	* configure.ac: Bump version number to 1.2-mk-0.2.

2006-02-26  Matthias Koeppe  <mkoeppe@mail.math.uni-magdeburg.de>

	* code/latte/Makefile.am, code/latte/Array.h,
	code/latte/ResSingle.cpp, code/latte/RudyResNTL.cpp,
	code/latte/print.cpp, code/latte/printsingle.cpp: 
	Remove BigArray in favor of std::vector.

	* code/latte/ExponentialSubst.cpp, code/latte/Makefile.am,
	code/latte/todd/todd.cpp, code/latte/todd/todd.h,
	code/latte/todd/todd.maple, code/latte/todd/todd.sed,
	code/latte/todd/test-todd.cpp: Remove Maple Todd code.

	* code/latte/latte_gmp.cpp, code/latte/latte_gmp.h:
	New files, replacing gmp-interface.h and .cpp

	* code/latte/gmp-interface.cpp, code/latte/gmp-interface.h:
	Removed, replaced by latte_gmp.h and .cpp

	* code/latte/todd/todd-expansion.cpp, code/latte/todd/todd-expansion.h:
	New files, compute evaluation of Todd polynomial by Tayloring.

	* code/latte/CheckEmpty.cpp, code/latte/ConeInfo.cpp,
	code/latte/ConeInfo.h, code/latte/ExponentialSubst.cpp,
	code/latte/Grobner.cpp, code/latte/Grobner.h,
	code/latte/IntegralHull.cpp, code/latte/IntegralHull.h,
	code/latte/Makefile.am, code/latte/ReadingFile.cpp,
	code/latte/ReadingFile.h, code/latte/barvinok/Cone.h,
	code/latte/barvinok/dec.cpp, code/latte/barvinok/dec.h,
	code/latte/binarySearchIP.cpp, code/latte/binarySearchIP.h,
	code/latte/count.cpp, code/latte/dual.cpp, code/latte/ehrhart.cpp,
	code/latte/genFunction/maple.cpp, code/latte/genFunction/maple.h,
	code/latte/genFunction/piped.cpp, code/latte/genFunction/piped.h,
	code/latte/maximize.cpp, code/latte/minimize.cpp,
	code/latte/myheader.h, code/latte/preprocess.cpp,
	code/latte/preprocess.h, code/latte/print.cpp, code/latte/print.h,
	code/latte/ramon.cpp, code/latte/ramon.h, code/latte/rational.cpp,
	code/latte/rational.h, code/latte/simple-main.cpp,
	code/latte/todd/todd.cpp, code/latte/todd/todd.h,
	code/latte/todd/todd.maple, code/latte/vertices/cdd.cpp,
	code/latte/vertices/cdd.h: Replace vector by vec_ZZ to get rid of
	type clash with STL.

2006-02-24  Matthias Koeppe  <mkoeppe@mail.math.uni-magdeburg.de>

	* code/latte/ConeInfo.cpp, code/latte/IntegralHull.cpp,
	code/latte/RudyResNTL.cpp, code/latte/barvinok/Triangulation.cpp,
	code/latte/barvinok/dec.cpp, code/latte/print.cpp: Don't seed the
	random generator in the middle of the algorithms.

2006-02-23  Matthias Koeppe  <mkoeppe@mail.math.uni-magdeburg.de>

	* ExponentialSubst.cpp, ExponentialSubst.h
	(computeExponentialResidue_Single, computeExponentialResidue): New
	functions.

	* ExponentialSubst.cpp, ExponentialSubst.h: New files.

	* gmp-interface.cpp, gmp-interface.h: New files.

	* simple-main.cpp: New command-line args, --exp, --maxdet.

	* flags.h (struct BarvinokParameters): New.

	* myheader.h: Add typedef ZZ Integer.

	* Makefile.am: Link against LiDIA and gmpxx.

	* code/latte/ReadingFile.cpp (Mail): Removed.

	* code/latte/ConeDeterminant.cpp, code/latte/ConeDeterminant.h,
	code/latte/KnapSackEst.cpp, code/latte/hnf.cpp,
	code/latte/preproc.cpp, code/latte/rand.cpp: Removed unused source
	files and test programs.

2006-02-22  Matthias Koeppe  <mkoeppe@mail.math.uni-magdeburg.de>

	* code/latte/dual.cpp (scaled_inverse): Fix to always get the
	right sign. 

	* code/latte/barvinok/barvinok.cpp (barvinok): New optional arg,
	"max_determinant"; allows stopping decomposition before
	unimodularity is reached.
	* code/latte/barvinok/dec.cpp (decomposeCones): Likewise.
	* code/latte/barvinok/ConeDecom.cpp (barvinokDecomposition): 
	Likewise.

	* code/latte/dual.cpp (scaled_inverse): New.
	(dualizeBackCones): Handle the non-unimodular case.

	* code/latte/barvinok/barvinok.cpp (barvinok): Store the
	determinants in the result list.
	(barvinok_DFS): Likewise.
	(transformRudyListConeIntoRamonListCone_Single): Copy the
	determinant. 

	* code/latte/barvinok/ConeDecom.cpp
	(transformRudyListConeIntoRamonListCone): Copy the determinant.

	* code/latte/myheader.h (PtrCone): New slot "determinant".
	(listCone): New slot "determinant"; removed unused slot.

	* code/latte/cone.cpp (createListCone): Initialize it here to 0.

	* code/latte/genFunction/piped.cpp (computePointsInParallelepipeds): 
	New function, factored out from all the main programs.
	
	* latte.el: New file, Emacs customizations for work on LattE.

	* code/latte/Makefile.am: Build test program simple-count from
	simple-main.cpp; this is where the new experiments will take
	place.

	* code/latte/todd/gmp_pow.cpp, code/latte/todd/gmp_pow.h,
	code/latte/todd/test-todd.cpp, code/latte/todd/todd.h,
	code/latte/todd/todd.maple, code/latte/todd/todd.sed:  New files.

2006-02-21  Matthias Koeppe  <mkoeppe@mail.math.uni-magdeburg.de>

	* acinclude.m4, configure.ac: Check for LiDIA.

	* m4/gmp-check.m4, m4/Makefile.am, m4/latte-misc.m4,
	m4/lidia-check.m4, m4/ntl-check.m4: More autoconf scripts stolen
	from LinBox.

2006-02-20  Matthias Koeppe  <mkoeppe@mail.math.uni-magdeburg.de>

	* m4/lidia-check.m4: autoconf macro checking for LiDIA, stolen
	from LinBox

	* configure.ac: Signal error/warning when CDD or LRS binaries are
	not found at configure time.

2006-02-19  Matthias Koeppe  <mkoeppe@mail.math.uni-magdeburg.de>

	* code/latte/banner.cpp, code/latte/banner.h,
	code/latte/Makefile.am, code/latte/count.cpp,
	code/latte/ehrhart.cpp, code/latte/maximize.cpp,
	code/latte/minimize.cpp, configure.ac: Bump version number.  Show
	actual version in banners.

	* code/latte/IntegralHull.cpp, code/latte/tmpIP.cpp,
	code/latte/vertices/cdd.cpp, configure.ac: Check for LRS binary in
	configure, use this path rather than "./lrs1".

2006-02-18  Matthias Koeppe  <mkoeppe@mail.math.uni-magdeburg.de>

	Autoconfiscate.
	Minor fixes to get it compiled with modern C++ compilers.

2006-02-15  Matthias Koeppe  <mkoeppe@mail.math.uni-magdeburg.de>

	* code/latte/simple-main.cpp: Simplified version of the main program
	for use in the approximate counting project.

2006-02-14  Matthias Koeppe  <mkoeppe@mail.math.uni-magdeburg.de>

	Imported LattE 1.2

2005-01-26  Matthias Koeppe  <mkoeppe@mail.math.uni-magdeburg.de>

	* code/latte/barvinok/barvinok.cpp: Avoid some redundant
	determinant computations.

2005-01-21  Matthias Koeppe  <mkoeppe@mail.math.uni-magdeburg.de>

	* code/latte/PolyTree.cpp: Remove some g++-isms.

2005-01-20  Matthias Koeppe  <mkoeppe@mail.math.uni-magdeburg.de>

	Renamed barvinok/cone.cpp and cone.h to Cone.cpp and Cone.h to
	remove filename clash.

	First adjustments to make it compile.

	Imported LattE release v 1.1
